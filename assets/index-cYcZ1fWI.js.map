{"version":3,"file":"index-cYcZ1fWI.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/react-dom/client.js","../../src/utils/deutan-simulator.ts","../../src/components/ColorWheel.tsx","../../src/components/ColorCircles.tsx","../../src/utils/color-converter.ts","../../src/components/ColorAdjuster.tsx","../../src/utils/image-processor.ts","../../src/components/ImageUploader.tsx","../../src/components/ImageViewer.tsx","../../src/components/CameraCapture.tsx","../../src/components/AboutModal.tsx","../../src/components/ColorWheelIcon.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","// deutan_poly_full.ts\r\n// Machado 2009 Deuteranomaly matrices (full 0.0..1.0 step 0.1) → polynomialized (degree=4).\r\n// Provides: simulateDeutanPoly(), daltonizeDeutan().\r\n// Source for matrices: UFRGS page, Table 1 (Deuteranomaly column).\r\n\r\n// ---------- sRGB <-> linear ----------\r\nfunction srgbToLinear(c: number): number {\r\n  return (c <= 0.04045) ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\r\n}\r\nfunction linearToSrgb(c: number): number {\r\n  return (c <= 0.0031308) ? 12.92 * c : 1.055 * Math.pow(c, 1/2.4) - 0.055;\r\n}\r\n\r\n// ---------- Linear algebra helpers ----------\r\ntype Vec3 = [number, number, number];\r\ntype Mat3 = [Vec3, Vec3, Vec3];\r\n\r\nfunction applyMat3(m: Mat3, v: Vec3): Vec3 {\r\n  const [x,y,z] = v;\r\n  return [\r\n    m[0][0]*x + m[0][1]*y + m[0][2]*z,\r\n    m[1][0]*x + m[1][1]*y + m[1][2]*z,\r\n    m[2][0]*x + m[2][1]*y + m[2][2]*z,\r\n  ];\r\n}\r\n\r\nfunction clamp01(x: number): number {\r\n  return Math.max(0, Math.min(1, x));\r\n}\r\n\r\nfunction clamp255(x: number): number {\r\n  return Math.max(0, Math.min(255, Math.round(x)));\r\n}\r\n\r\n// ---------- Polynomial fit (least squares) ----------\r\n// Fit y ≈ Σ_{k=0..d} c_k x^k\r\nfunction polyfitLeastSquares(xs: number[], ys: number[], degree: number): number[] {\r\n  if (xs.length !== ys.length) throw new Error(\"xs and ys must have the same length\");\r\n  const n = xs.length;\r\n  const d = degree;\r\n  if (n < d + 1) throw new Error(`Need at least degree+1 points (got ${n}, degree ${d})`);\r\n\r\n  // Build Vandermonde matrix A and vector b\r\n  const A: number[][] = Array.from({length: n}, () => Array(d+1).fill(0));\r\n  const b: number[] = ys.slice();\r\n\r\n  for (let i = 0; i < n; i++) {\r\n    let val = 1;\r\n    for (let j = 0; j <= d; j++) {\r\n      A[i][j] = val;\r\n      val *= xs[i];\r\n    }\r\n  }\r\n\r\n  // Solve normal equations (A^T A) c = A^T b via Gaussian elimination\r\n  const AT = transpose(A);\r\n  const ATA = matMul(AT, A);\r\n  const ATb = matVecMul(AT, b);\r\n\r\n  // Solve ATA * c = ATb\r\n  const c = gaussianSolve(ATA, ATb);\r\n  return c;\r\n}\r\n\r\nfunction transpose(M: number[][]): number[][] {\r\n  const rows = M.length, cols = M[0].length;\r\n  const T = Array.from({length: cols}, () => Array(rows).fill(0));\r\n  for (let i = 0; i < rows; i++) for (let j = 0; j < cols; j++) T[j][i] = M[i][j];\r\n  return T;\r\n}\r\n\r\nfunction matMul(A: number[][], B: number[][]): number[][] {\r\n  const r = A.length, k = A[0].length, c = B[0].length;\r\n  const out = Array.from({length: r}, () => Array(c).fill(0));\r\n  for (let i = 0; i < r; i++) {\r\n    for (let j = 0; j < c; j++) {\r\n      let sum = 0;\r\n      for (let t = 0; t < k; t++) sum += A[i][t] * B[t][j];\r\n      out[i][j] = sum;\r\n    }\r\n  }\r\n  return out;\r\n}\r\n\r\nfunction matVecMul(A: number[][], v: number[]): number[] {\r\n  const r = A.length, c = A[0].length;\r\n  const out = Array(r).fill(0);\r\n  for (let i = 0; i < r; i++) {\r\n    let sum = 0;\r\n    for (let j = 0; j < c; j++) sum += A[i][j] * v[j];\r\n    out[i] = sum;\r\n  }\r\n  return out;\r\n}\r\n\r\nfunction gaussianSolve(Ain: number[][], bIn: number[]): number[] {\r\n  // Augment\r\n  const n = Ain.length;\r\n  const A = Ain.map((row, i) => row.concat([bIn[i]]));\r\n\r\n  // Forward elimination\r\n  for (let i = 0; i < n; i++) {\r\n    // Pivot\r\n    let maxRow = i;\r\n    for (let r = i+1; r < n; r++) if (Math.abs(A[r][i]) > Math.abs(A[maxRow][i])) maxRow = r;\r\n    [A[i], A[maxRow]] = [A[maxRow], A[i]];\r\n\r\n    const pivot = A[i][i];\r\n    if (Math.abs(pivot) < 1e-12) throw new Error(\"Singular matrix in gaussianSolve\");\r\n\r\n    // Normalize row\r\n    for (let j = i; j <= n; j++) A[i][j] /= pivot;\r\n\r\n    // Eliminate\r\n    for (let r = 0; r < n; r++) {\r\n      if (r === i) continue;\r\n      const factor = A[r][i];\r\n      for (let j = i; j <= n; j++) A[r][j] -= factor * A[i][j];\r\n    }\r\n  }\r\n\r\n  // Extract solution\r\n  const x = A.map(row => row[n]);\r\n  return x;\r\n}\r\n\r\n// ---------- Deuteranomaly matrices from Machado2009 Table 1 ----------\r\ntype SamplePoint = { s: number, M: Mat3 };\r\n\r\nconst MACHADO_DEUTERANOMALY: SamplePoint[] = [\r\n  { s: 0.0, M: [\r\n    [1.000000, 0.000000, -0.000000],\r\n    [0.000000, 1.000000,  0.000000],\r\n    [-0.000000,-0.000000, 1.000000],\r\n  ]},\r\n  { s: 0.1, M: [\r\n    [0.866435, 0.177704, -0.044139],\r\n    [0.049567, 0.939063,  0.011370],\r\n    [-0.003453, 0.007233, 0.996220],\r\n  ]},\r\n  { s: 0.2, M: [\r\n    [0.760729, 0.319078, -0.079807],\r\n    [0.090568, 0.889315,  0.020117],\r\n    [-0.006027, 0.013325, 0.992702],\r\n  ]},\r\n  { s: 0.3, M: [\r\n    [0.675425, 0.433850, -0.109275],\r\n    [0.125303, 0.847755,  0.026942],\r\n    [-0.007950, 0.018572, 0.989378],\r\n  ]},\r\n  { s: 0.4, M: [\r\n    [0.605511, 0.528560, -0.134071],\r\n    [0.155318, 0.812366,  0.032316],\r\n    [-0.009376, 0.023176, 0.986200],\r\n  ]},\r\n  { s: 0.5, M: [\r\n    [0.547494, 0.607765, -0.155259],\r\n    [0.181692, 0.781742,  0.036566],\r\n    [-0.010410, 0.027275, 0.983136],\r\n  ]},\r\n  { s: 0.6, M: [\r\n    [0.498864, 0.674741, -0.173604],\r\n    [0.205199, 0.754872,  0.039929],\r\n    [-0.011131, 0.030969, 0.980162],\r\n  ]},\r\n  { s: 0.7, M: [\r\n    [0.457771, 0.731899, -0.189670],\r\n    [0.226409, 0.731012,  0.042579],\r\n    [-0.011595, 0.034333, 0.977261],\r\n  ]},\r\n  { s: 0.8, M: [\r\n    [0.422823, 0.781057, -0.203881],\r\n    [0.245752, 0.709602,  0.044646],\r\n    [-0.011843, 0.037423, 0.974421],\r\n  ]},\r\n  { s: 0.9, M: [\r\n    [0.392952, 0.823610, -0.216562],\r\n    [0.263559, 0.690210,  0.046232],\r\n    [-0.011910, 0.040281, 0.971630],\r\n  ]},\r\n  { s: 1.0, M: [\r\n    [0.367322, 0.860646, -0.227968],\r\n    [0.280085, 0.672501,  0.047413],\r\n    [-0.011820, 0.042940, 0.968881],\r\n  ]},\r\n];\r\n\r\n// ---------- Build polynomial coefficients per element ----------\r\ntype CoeffMat = number[][][]; // 3x3 of coefficient arrays [c0..cd]\r\nfunction buildPolynomialCoeffs(data: SamplePoint[], degree: number): CoeffMat {\r\n  if (degree < 1) throw new Error(\"degree must be >= 1\");\r\n  const xs = data.map(p => p.s);\r\n  const coeffs: CoeffMat = [[],[],[]] as unknown as CoeffMat;\r\n\r\n  for (let i = 0; i < 3; i++) {\r\n    coeffs[i] = [];\r\n    for (let j = 0; j < 3; j++) {\r\n      const ys = data.map(p => p.M[i][j]);\r\n      const c = polyfitLeastSquares(xs, ys, degree);\r\n      coeffs[i][j] = c; // length degree+1\r\n    }\r\n  }\r\n  return coeffs;\r\n}\r\n\r\nfunction evalPoly(c: number[], x: number): number {\r\n  // Horner\r\n  let acc = 0;\r\n  for (let k = c.length - 1; k >= 0; k--) acc = acc * x + c[k];\r\n  return acc;\r\n}\r\n\r\nfunction evaluateMatrix(coeffs: CoeffMat, s: number): Mat3 {\r\n  const ss = clamp01(s);\r\n  const M: Mat3 = [[0,0,0],[0,0,0],[0,0,0]] as Mat3;\r\n  for (let i = 0; i < 3; i++) {\r\n    for (let j = 0; j < 3; j++) {\r\n      M[i][j] = evalPoly(coeffs[i][j], ss);\r\n    }\r\n  }\r\n  return M;\r\n}\r\n\r\n// Precompute coefficients\r\nconst DEGREE = 4;\r\nconst COEFFS: CoeffMat = buildPolynomialCoeffs(MACHADO_DEUTERANOMALY, DEGREE);\r\n\r\n// ---------- Public API ----------\r\nexport type RGB8 = [number, number, number];\r\n\r\n/** Simulate Deuteranomaly using polynomialized Machado matrix. */\r\nexport function simulateDeutanPoly(rgb: RGB8, severity: number): RGB8 {\r\n  const lin: Vec3 = [\r\n    srgbToLinear(rgb[0]/255),\r\n    srgbToLinear(rgb[1]/255),\r\n    srgbToLinear(rgb[2]/255),\r\n  ];\r\n  const M = evaluateMatrix(COEFFS, severity);\r\n  const [R,G,B] = applyMat3(M, lin);\r\n  return [\r\n    clamp255(linearToSrgb(clamp01(R))*255),\r\n    clamp255(linearToSrgb(clamp01(G))*255),\r\n    clamp255(linearToSrgb(clamp01(B))*255),\r\n  ];\r\n}\r\n\r\n/**\r\n * Daltonize for Deuteranomaly via iterative pre-compensation.\r\n * Finds X such that S(X) ≈ Y (Y=original). Performs T steps:\r\n *   X_{k+1} = clip( X_k + alpha * ( Y - S(X_k) ) )\r\n * All operations in linear RGB; final result returned in sRGB 8-bit.\r\n */\r\nexport function daltonizeDeutan(rgb: RGB8, severity: number, alpha=0.6, steps=3): RGB8 {\r\n  // to linear\r\n  let X: Vec3 = [\r\n    srgbToLinear(rgb[0]/255),\r\n    srgbToLinear(rgb[1]/255),\r\n    srgbToLinear(rgb[2]/255),\r\n  ];\r\n  const Y: Vec3 = [...X];\r\n  const M = evaluateMatrix(COEFFS, severity);\r\n\r\n  const simulateLin = (v: Vec3): Vec3 => applyMat3(M, v);\r\n\r\n  for (let t = 0; t < steps; t++) {\r\n    const Sx = simulateLin(X);\r\n    // residual towards target Y\r\n    const err: Vec3 = [Y[0]-Sx[0], Y[1]-Sx[1], Y[2]-Sx[2]];\r\n    X = [\r\n      clamp01(X[0] + alpha * err[0]),\r\n      clamp01(X[1] + alpha * err[1]),\r\n      clamp01(X[2] + alpha * err[2]),\r\n    ];\r\n  }\r\n\r\n  return [\r\n    clamp255(linearToSrgb(X[0])*255),\r\n    clamp255(linearToSrgb(X[1])*255),\r\n    clamp255(linearToSrgb(X[2])*255),\r\n  ];\r\n}\r\n\r\n/**\r\n * Green enhancement \"inverse-ish\" filter in linear space.\r\n * This is not a true inverse; it boosts green while attenuating red/blue.\r\n * @param rgb 8-bit sRGB triple [0..255]\r\n * @param strength α in [0,1], typical 0.1~0.3\r\n */\r\nexport function enhanceGreen(rgb: RGB8, strength: number = 0.2): RGB8 {\r\n  const s = Math.max(0, Math.min(1, strength));\r\n  const E: Mat3 = [\r\n    [1 - s, 0,     0    ],\r\n    [0,     1 + s, 0    ],\r\n    [0,     0,     1 - s],\r\n  ];\r\n  const [r,g,b] = rgb.map(v => srgbToLinear(v/255)) as Vec3;\r\n  const [R,G,B] = applyMat3(E, [r,g,b]);\r\n  return [\r\n    clamp255(linearToSrgb(R)*255),\r\n    clamp255(linearToSrgb(G)*255),\r\n    clamp255(linearToSrgb(B)*255),\r\n  ];\r\n}\r\n\r\n/**\r\n * デュータン補正フィルター（Daltonization使用）\r\n * v3.x: 単一の補正強度 s が以下を同時制御:\r\n *  (1) Headroom: 高強度域で入力線形RGBを縮小し飽和(クリップ)抑制\r\n *  (2) ブレンド: 低～中強度では原色と補正結果を滑らかに混合 (s^gamma)\r\n *  (3) ToneMap: 非常に高い強度のみハイライト圧縮 (Reinhard 部分適用) で階調保護\r\n * @param rgb 8-bit sRGB triple [0..255]\r\n * @param strength 補正強度 s in [0,1]\r\n * @param headroom ヘッドルーム (0-1, undefined=自動)\r\n * @returns 補正されたRGB値\r\n */\r\nexport function correctForDeutan(rgb: RGB8, strength: number = 0.2, headroom?: number): RGB8 {\r\n  const s = Math.max(0, Math.min(1, strength));\r\n\r\n  // (1) Headroom scale - 手動/自動の切り替え\r\n  let headroomScale: number;\r\n  if (headroom !== undefined) {\r\n    // 手動設定: headroom値をそのまま使用 (0=減衰なし, 1=最大減衰)\r\n    headroomScale = 1 - Math.max(0, Math.min(1, headroom));\r\n  } else {\r\n    // 自動設定: デフォルトは減衰なし（真っ赤などの極端な色は少ないため）\r\n    headroomScale = 1.0;\r\n  }\r\n\r\n  // sRGB -> 線形 + スケール\r\n  const linOrig: Vec3 = [ srgbToLinear(rgb[0]/255), srgbToLinear(rgb[1]/255), srgbToLinear(rgb[2]/255) ];\r\n  const linScaled: Vec3 = [ linOrig[0]*headroomScale, linOrig[1]*headroomScale, linOrig[2]*headroomScale ];\r\n  const scaledRgb: RGB8 = [ clamp255(linearToSrgb(linScaled[0])*255), clamp255(linearToSrgb(linScaled[1])*255), clamp255(linearToSrgb(linScaled[2])*255) ];\r\n  // (2) 完全補正結果 (既存アルゴリズム再利用)\r\n  const correctedFull = daltonizeDeutan(scaledRgb, s, 0.6, 3);\r\n  // (3) ブレンド (低強度域で自然さ確保)\r\n  const gamma = 1.2; const blendRatio = Math.pow(s, gamma);\r\n  const linCorrectedFull: Vec3 = [ srgbToLinear(correctedFull[0]/255), srgbToLinear(correctedFull[1]/255), srgbToLinear(correctedFull[2]/255) ];\r\n  let linOut: Vec3 = [ linScaled[0]*(1-blendRatio)+linCorrectedFull[0]*blendRatio, linScaled[1]*(1-blendRatio)+linCorrectedFull[1]*blendRatio, linScaled[2]*(1-blendRatio)+linCorrectedFull[2]*blendRatio ];\r\n  // (4) Tone mapping (Reinhard) for high strength only\r\n  const TM_START = 0.85, TM_MAX = 0.5;\r\n  if (s > TM_START) {\r\n    const tt = (s - TM_START)/(1 - TM_START); const tmStrength = TM_MAX * tt;\r\n    linOut = linOut.map(c => { const mapped = c/(1+c); return c*(1-tmStrength)+mapped*tmStrength; }) as Vec3;\r\n  }\r\n  return [ clamp255(linearToSrgb(clamp01(linOut[0]))*255), clamp255(linearToSrgb(clamp01(linOut[1]))*255), clamp255(linearToSrgb(clamp01(linOut[2]))*255) ];\r\n}\r\n\r\n/**\r\n * RGB値配列に対するバッチ処理版\r\n * @param rgbArray RGB値の配列\r\n * @param severity デュータンシミュレーション強度\r\n * @returns シミュレーション結果の配列\r\n */\r\nexport function simulateDeutanBatch(rgbArray: RGB8[], severity: number): RGB8[] {\r\n  return rgbArray.map(rgb => simulateDeutanPoly(rgb, severity));\r\n}\r\n\r\n/**\r\n * Canvas ImageDataに対するデュータンシミュレーション\r\n * @param imageData Canvas ImageData\r\n * @param severity シミュレーション強度\r\n * @returns 変換されたImageData\r\n */\r\nexport function simulateDeutanImageData(imageData: ImageData, severity: number): ImageData {\r\n  const data = new Uint8ClampedArray(imageData.data);\r\n  \r\n  for (let i = 0; i < data.length; i += 4) {\r\n    const [r, g, b] = simulateDeutanPoly([data[i], data[i + 1], data[i + 2]], severity);\r\n    data[i] = r;\r\n    data[i + 1] = g;\r\n    data[i + 2] = b;\r\n    // alpha channel (data[i + 3]) is preserved\r\n  }\r\n  \r\n  return new ImageData(data, imageData.width, imageData.height);\r\n}\r\n","import React, { useEffect, useRef, useState, useCallback } from 'react';\r\nimport type { ColorVisionSettings } from '../types/color';\r\nimport { simulateDeutanPoly, correctForDeutan, type RGB8 } from '../utils/deutan-simulator';\r\n\r\n// HSLからRGBへの変換関数（純粋JavaScript実装）\r\nfunction hslToRgb(h: number, s: number, l: number): [number, number, number] {\r\n  h = h / 360;\r\n  s = s / 100;\r\n  l = l / 100;\r\n\r\n  const hue2rgb = (p: number, q: number, t: number): number => {\r\n    if (t < 0) t += 1;\r\n    if (t > 1) t -= 1;\r\n    if (t < 1/6) return p + (q - p) * 6 * t;\r\n    if (t < 1/2) return q;\r\n    if (t < 2/3) return p + (q - p) * (2/3 - t) * 6;\r\n    return p;\r\n  };\r\n\r\n  let r: number, g: number, b: number;\r\n\r\n  if (s === 0) {\r\n    r = g = b = l; // achromatic\r\n  } else {\r\n    const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n    const p = 2 * l - q;\r\n    r = hue2rgb(p, q, h + 1/3);\r\n    g = hue2rgb(p, q, h);\r\n    b = hue2rgb(p, q, h - 1/3);\r\n  }\r\n\r\n  return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\r\n}\r\n\r\ninterface ColorInfo {\r\n  hue: number;\r\n  saturation: number;\r\n  lightness: number;\r\n  rgb: [number, number, number];\r\n  position: { x: number; y: number };\r\n  ring: number;\r\n  originalColor: string;  // HSL色文字列\r\n  finalColor: string;     // 色覚調整後の色文字列\r\n  circleSize: number;     // 円のサイズ\r\n}\r\n\r\ninterface ColorWheelProps {\r\n  colorVisionSettings: ColorVisionSettings;\r\n  width?: number;\r\n  height?: number;\r\n}\r\n\r\n/**\r\n * 24色相環コンポーネント\r\n * - 6リング × 24色相 = 144色\r\n * - 外側: 鮮やかな原色\r\n * - 内側: 淡いパステルカラー\r\n */\r\nexport const ColorWheel: React.FC<ColorWheelProps> = ({ colorVisionSettings, width, height }) => {\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  const [selectedColor, setSelectedColor] = useState<ColorInfo | null>(null);\r\n  const [effectEnabled, setEffectEnabled] = useState<boolean>(true);\r\n  const [colorData, setColorData] = useState<ColorInfo[]>([]);\r\n  const [isInitialized, setIsInitialized] = useState<boolean>(false);\r\n  const defaultSize = Math.min(window.innerWidth - 40, 600);\r\n  const [canvasSize, setCanvasSize] = useState<number>(width || height || defaultSize);\r\n  const [ripples, setRipples] = useState<Array<{\r\n    id: number;\r\n    x: number;\r\n    y: number;\r\n    radius: number;\r\n    opacity: number;\r\n    color: string;\r\n    startTime: number;\r\n    maxRadius: number;\r\n  }>>([]);\r\n  const [particles, setParticles] = useState<Array<{\r\n    id: number;\r\n    x: number;\r\n    y: number;\r\n    vx: number;\r\n    vy: number;\r\n    life: number;\r\n    maxLife: number;\r\n    size: number;\r\n    color: string;\r\n  }>>([]);\r\n\r\n  // 色データ事前計算\r\n  const calculateColorData = useCallback(() => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) return [];\r\n\r\n    // キャンバスサイズ設定（高DPIディスプレイ対応）\r\n    const size = canvasSize;\r\n    const dpr = window.devicePixelRatio || 1;\r\n    \r\n    // 実際のキャンバスサイズをDPRで調整\r\n    canvas.width = size * dpr;\r\n    canvas.height = size * dpr;\r\n    \r\n    // CSSサイズはJSXのインラインスタイルで管理（競合回避のためここでは設定しない）\r\n    \r\n    // コンテキストをスケール\r\n    const ctx = canvas.getContext('2d');\r\n    if (ctx) {\r\n      ctx.scale(dpr, dpr);\r\n    }\r\n    \r\n    const centerX = size / 2;\r\n    const centerY = size / 2;\r\n\r\n    // リング配置（デスクトップサイズ基準で比率計算）\r\n    const baseRadius = size / 2 - 20;\r\n    const ringRadii = [\r\n      baseRadius * 0.94,  // リング1: 最外側\r\n      baseRadius * 0.74,  // リング2\r\n      baseRadius * 0.58,  // リング3\r\n      baseRadius * 0.44,  // リング4\r\n      baseRadius * 0.33,  // リング5\r\n      baseRadius * 0.23,  // リング6: 最内側\r\n    ];\r\n\r\n    // 円のサイズ（比率で調整）\r\n    const circleSizes = [\r\n      baseRadius * 0.082,  // 54px相当\r\n      baseRadius * 0.070,  // 46px相当\r\n      baseRadius * 0.058,  // 38px相当\r\n      baseRadius * 0.046,  // 30px相当\r\n      baseRadius * 0.036,  // 24px相当\r\n      baseRadius * 0.023,  // 15px相当\r\n    ];\r\n\r\n    // 色データを保存する配列\r\n    const newColorData: ColorInfo[] = [];\r\n\r\n    // 6リング計算\r\n    for (let ring = 0; ring < 6; ring++) {\r\n      const radius = ringRadii[ring];\r\n      const circleSize = circleSizes[ring];\r\n      \r\n      // HSL色空間: 外側(暗い鮮やか) → 内側(明るい淡い)\r\n      const lightness = 50 + ring * 7;   // 50, 57, 64, 71, 78, 85\r\n      const saturation = 100 - ring * 14; // 100, 86, 72, 58, 44, 30\r\n\r\n      // 24色相を計算\r\n      for (let i = 0; i < 24; i++) {\r\n        const hue = i * 15; // 0°, 15°, 30°, ..., 345°\r\n        const angle = (hue * Math.PI) / 180;\r\n        \r\n        // 円の位置計算\r\n        const x = centerX + Math.cos(angle) * radius;\r\n        const y = centerY + Math.sin(angle) * radius;\r\n\r\n        // HSLからRGBに変換\r\n        const originalColor = `hsl(${hue}, ${saturation}%, ${lightness}%)`;\r\n        \r\n        // HSL→RGB変換（純粋JavaScript関数を使用）\r\n        let rgb: RGB8 = hslToRgb(hue, saturation, lightness);\r\n        let finalRgb: [number, number, number] = [rgb[0], rgb[1], rgb[2]];\r\n        \r\n        // ================================================================\r\n        // 【重要】色覚シミュレーション・補正の実装について\r\n        // \r\n        // この実装は科学的根拠に基づいた正確な色覚処理を行っています：\r\n        // \r\n        // 1. simulateDeutanPoly(): Machado et al. (2009) の研究に基づく\r\n        //    正確な色覚シミュレーション。多項式補間により高精度な変換を実現。\r\n        //    ※ 簡易的な色変換に置き換えないこと\r\n        // \r\n        // 2. daltonizeDeutan(): 反復的事前補償アルゴリズムによる補正\r\n        //    シミュレーション逆変換を反復計算で近似し、色の区別を最大化。\r\n        //    ※ 単純な色相シフトや彩度調整では同等の効果は得られません\r\n        //\r\n        // 3. 処理の独立性: シミュレーションと補正は独立して動作する必要があります\r\n        //    - シミュレーションOFF + 補正ON: 色覚異常者向けのアクセシビリティ機能\r\n        //    - シミュレーションON + 補正ON: 補正効果のプレビュー機能\r\n        //    ※ この独立性を保つことが重要です\r\n        //\r\n        // 【注意】\r\n        // - correctForDeutan()はdaltonizeDeutan()を呼び出しており、\r\n        //   これは「補正」のための関数です（シミュレーションではありません）\r\n        // - strength/severityパラメータは0-1の範囲で効果の強度を調整します\r\n        // - 安易に「より簡単な」実装に置き換えると、科学的な正確性が失われます\r\n        // ================================================================\r\n        \r\n        // 色覚シミュレーション適用（Machado et al. 2009 準拠）\r\n        // ※ 簡易実装に置き換えないこと - 正確な色覚異常シミュレーションが必要\r\n        if (colorVisionSettings.simulation.useSimulation &&\r\n            colorVisionSettings.simulation.simulationType === 'deuteranopia') {\r\n          // シミュレーション適用\r\n          rgb = simulateDeutanPoly(rgb, colorVisionSettings.simulation.severity);\r\n          finalRgb = [rgb[0], rgb[1], rgb[2]]; // 🔥 バグ修正: finalRgbを更新\r\n        }\r\n        \r\n        // 補正フィルター適用（Daltonization アルゴリズム）\r\n        // ※ 単純な色調整では不十分 - 反復的事前補償により最適な補正を実現\r\n        // ※ シミュレーションとは独立 - どちらか一方、または両方を適用可能\r\n        if (colorVisionSettings.correction.useCorrection &&\r\n            colorVisionSettings.correction.correctionType === 'deuteranopia') {\r\n          rgb = correctForDeutan(rgb, colorVisionSettings.correction.strength, colorVisionSettings.correction.headroom);\r\n          finalRgb = [rgb[0], rgb[1], rgb[2]]; // 🔥 バグ修正: finalRgbを更新\r\n        }\r\n        \r\n        const finalColor = `rgb(${rgb[0]}, ${rgb[1]}, ${rgb[2]})`;\r\n\r\n        // 色データを保存\r\n        newColorData.push({\r\n          hue,\r\n          saturation,\r\n          lightness,\r\n          rgb: finalRgb,\r\n          position: { x, y },\r\n          ring: ring + 1,\r\n          originalColor,\r\n          finalColor,\r\n          circleSize\r\n        });\r\n      }\r\n    }\r\n\r\n    // 中央に白い円を追加\r\n    const centerCircleSize = baseRadius * 0.12; // 適切なサイズ\r\n    newColorData.push({\r\n      hue: 0,\r\n      saturation: 0,\r\n      lightness: 100,\r\n      rgb: [255, 255, 255],\r\n      position: { x: centerX, y: centerY },\r\n      ring: 0, // 中央を示す特別な値\r\n      originalColor: 'hsl(0, 0%, 100%)',\r\n      finalColor: '#ffffff', // 白は変換なし\r\n      circleSize: centerCircleSize\r\n    });\r\n\r\n    return newColorData;\r\n  }, [colorVisionSettings, canvasSize]);\r\n\r\n  // hex -> RGB変換（#RRGGBB形式）\r\n  const hexToRgb = (hex: string) => {\r\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return result ? {\r\n      r: parseInt(result[1], 16),\r\n      g: parseInt(result[2], 16),\r\n      b: parseInt(result[3], 16)\r\n    } : null;\r\n  };\r\n\r\n\r\n  // RGB -> HSL変換\r\n  const rgbToHsl = (r: number, g: number, b: number) => {\r\n    r /= 255;\r\n    g /= 255;\r\n    b /= 255;\r\n    \r\n    const max = Math.max(r, g, b);\r\n    const min = Math.min(r, g, b);\r\n    let h = 0, s = 0;\r\n    const l = (max + min) / 2;\r\n    \r\n    if (max !== min) {\r\n      const d = max - min;\r\n      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n      \r\n      switch (max) {\r\n        case r: h = (g - b) / d + (g < b ? 6 : 0); break;\r\n        case g: h = (b - r) / d + 2; break;\r\n        case b: h = (r - g) / d + 4; break;\r\n      }\r\n      h /= 6;\r\n    }\r\n    \r\n    return { h: h * 360, s: s * 100, l: l * 100 };\r\n  };\r\n\r\n\r\n\r\n  // ダブルライト効果 - 両側からの色付き照明\r\n  const apply3DLighting = useCallback((ctx: CanvasRenderingContext2D, colorInfo: ColorInfo, circleSize: number, intensity: number) => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) return null;\r\n\r\n    // RGB文字列パーサー（関数内に移動）\r\n    const rgbStringToRgb = (rgbString: string) => {\r\n      const match = rgbString.match(/rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)/);\r\n      return match ? {\r\n        r: parseInt(match[1], 10),\r\n        g: parseInt(match[2], 10),\r\n        b: parseInt(match[3], 10)\r\n      } : null;\r\n    };\r\n\r\n    // 基本色を取得\r\n    const baseRgb = rgbStringToRgb(colorInfo.finalColor);\r\n    if (!baseRgb) {\r\n      return null;\r\n    }\r\n\r\n    // ダブルライト効果: 直接canvasに描画\r\n    // 左側からピンク/赤の光、右側から青/シアンの光\r\n    \r\n    // 現在の描画状態を保存\r\n    ctx.save();\r\n    \r\n    // 円形クリッピングマスクを作成（円の形を維持）\r\n    ctx.beginPath();\r\n    ctx.arc(colorInfo.position.x, colorInfo.position.y, circleSize, 0, 2 * Math.PI);\r\n    ctx.clip();\r\n    \r\n    // 線形グラデーション: 左（ピンク/赤）から右（青/シアン）\r\n    const gradient = ctx.createLinearGradient(\r\n      colorInfo.position.x - circleSize, // 左端\r\n      colorInfo.position.y,\r\n      colorInfo.position.x + circleSize, // 右端  \r\n      colorInfo.position.y\r\n    );\r\n    \r\n    // ダブルライト効果の色計算\r\n    const pinkIntensity = intensity * 0.7;\r\n    const blueIntensity = intensity * 0.7;\r\n    \r\n    // 左側のピンク/赤光の色\r\n    const pinkLight = {\r\n      r: Math.min(255, baseRgb.r + (255 - baseRgb.r) * pinkIntensity * 0.8),\r\n      g: Math.min(255, baseRgb.g + (80) * pinkIntensity * 0.4),\r\n      b: Math.min(255, baseRgb.b + (120) * pinkIntensity * 0.4)\r\n    };\r\n    \r\n    // 右側の青/シアン光の色\r\n    const blueLight = {\r\n      r: Math.min(255, baseRgb.r + (80) * blueIntensity * 0.4),\r\n      g: Math.min(255, baseRgb.g + (180) * blueIntensity * 0.6),\r\n      b: Math.min(255, baseRgb.b + (255 - baseRgb.b) * blueIntensity * 0.8)\r\n    };\r\n    \r\n    // グラデーション設定: 左（ピンク）→中央（元の色）→右（青）\r\n    gradient.addColorStop(0, `rgb(${Math.round(pinkLight.r)}, ${Math.round(pinkLight.g)}, ${Math.round(pinkLight.b)})`);\r\n    gradient.addColorStop(0.5, colorInfo.finalColor); // 中央は元の色\r\n    gradient.addColorStop(1, `rgb(${Math.round(blueLight.r)}, ${Math.round(blueLight.g)}, ${Math.round(blueLight.b)})`);\r\n    \r\n    // 円を描画（クリッピングマスク内で）\r\n    ctx.fillStyle = gradient;\r\n    ctx.beginPath();\r\n    ctx.arc(colorInfo.position.x, colorInfo.position.y, circleSize, 0, 2 * Math.PI);\r\n    ctx.fill();\r\n    \r\n    // オーバーレイブレンドモードで自然な色の混合\r\n    ctx.globalCompositeOperation = 'overlay';\r\n    ctx.globalAlpha = intensity * 0.3; // 軽いオーバーレイ効果\r\n    \r\n    // 再度描画してブレンド効果を適用\r\n    ctx.beginPath();\r\n    ctx.arc(colorInfo.position.x, colorInfo.position.y, circleSize, 0, 2 * Math.PI);\r\n    ctx.fill();\r\n    \r\n    // 描画状態を復元\r\n    ctx.restore();\r\n    \r\n    // 直接描画したので null を返す（gradientオブジェクトは不要）\r\n    return null;\r\n  }, []);\r\n\r\n  // 遠近感効果\r\n  const applyDepthEffect = useCallback((colorInfo: ColorInfo, intensity: number) => {\r\n    if (!selectedColor) return { color: colorInfo.finalColor, size: 1.0 };\r\n\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) return { color: colorInfo.finalColor, size: 1.0 };\r\n\r\n    // 選択された円からの距離を計算\r\n    const dist = Math.sqrt(\r\n      Math.pow(colorInfo.position.x - selectedColor.position.x, 2) + \r\n      Math.pow(colorInfo.position.y - selectedColor.position.y, 2)\r\n    );\r\n    \r\n    const maxDist = canvas.width * 0.5;\r\n    const distanceFactor = Math.min(1, dist / maxDist);\r\n    \r\n    // 遠いほど彩度を下げ、明度を上げる（霧がかった効果）\r\n    const rgb = hexToRgb(colorInfo.finalColor);\r\n    if (!rgb) return { color: colorInfo.finalColor, size: 1.0 };\r\n    \r\n    const saturationReduction = distanceFactor * intensity * 0.6;\r\n    const lightnessIncrease = distanceFactor * intensity * 0.3;\r\n    \r\n    // HSLに変換して調整\r\n    const hsl = rgbToHsl(rgb.r, rgb.g, rgb.b);\r\n    hsl.s *= (1 - saturationReduction);\r\n    hsl.l = Math.min(100, hsl.l + lightnessIncrease * 100);\r\n    \r\n    const adjustedRgb = hslToRgb(hsl.h, hsl.s, hsl.l);\r\n    const adjustedColor = `rgb(${adjustedRgb[0]}, ${adjustedRgb[1]}, ${adjustedRgb[2]})`;\r\n    \r\n    // サイズも距離に応じて調整（近いものは大きく）\r\n    const sizeMultiplier = 1 + (1 - distanceFactor) * intensity * 0.2;\r\n    \r\n    return { color: adjustedColor, size: sizeMultiplier };\r\n  }, [selectedColor]);\r\n\r\n  // 特殊効果の適用関数\r\n  const applySpecialEffect = useCallback((ctx: CanvasRenderingContext2D, colorInfo: ColorInfo, circleSize: number) => {\r\n    const { specialEffect } = colorVisionSettings;\r\n    if (!specialEffect.enabled) return { color: colorInfo.finalColor, size: circleSize, gradient: null, skipDrawing: false };\r\n\r\n    let finalColor = colorInfo.finalColor;\r\n    let finalSize = circleSize;\r\n    const gradient = null;\r\n    let skipDrawing = false; // 通常の円描画をスキップするかどうか\r\n\r\n    switch (specialEffect.type) {\r\n      case 'double-light':\r\n        // ダブルライト効果は apply3DLighting で直接描画されるため、通常の描画をスキップ\r\n        apply3DLighting(ctx, colorInfo, circleSize, specialEffect.intensity);\r\n        skipDrawing = true; // 通常の円描画はスキップ\r\n        break;\r\n      \r\n      case 'depth': {\r\n        const result = applyDepthEffect(colorInfo, specialEffect.intensity);\r\n        finalColor = result.color;\r\n        finalSize = circleSize * result.size;\r\n        break;\r\n      }\r\n      \r\n      default:\r\n        break;\r\n    }\r\n\r\n    return { color: finalColor, size: finalSize, gradient, skipDrawing };\r\n  }, [colorVisionSettings, apply3DLighting, applyDepthEffect]);\r\n\r\n  // ムンカー錯視の背景ストライプ\r\n  const drawMunkerBackgroundStripes = (ctx: CanvasRenderingContext2D, size: number, colorVisionSettings: ColorVisionSettings) => {\r\n    const stripeWidth = Math.max(4, Math.floor(size * 0.015));\r\n    const alpha = Math.min(0.4, colorVisionSettings.specialEffect.intensity * 0.4);\r\n    const stripePattern = colorVisionSettings.specialEffect.details.munker?.stripePattern || 'red-green';\r\n    \r\n    // パターンから背景色（最初の色）を決定\r\n    let bgColor;\r\n    switch (stripePattern) {\r\n      case 'red-green': \r\n      case 'red-blue': bgColor = `rgba(255, 60, 60, ${alpha})`; break; // 赤\r\n      case 'green-red':\r\n      case 'green-blue': bgColor = `rgba(60, 255, 60, ${alpha})`; break; // 緑\r\n      case 'blue-red':\r\n      case 'blue-green': bgColor = `rgba(60, 60, 255, ${alpha})`; break; // 青\r\n    }\r\n    \r\n    ctx.save();\r\n    ctx.fillStyle = bgColor;\r\n    \r\n    // 背景ストライプを描画（奇数位置）\r\n    for (let x = 0; x < size; x += stripeWidth * 2) {\r\n      ctx.fillRect(x, 0, stripeWidth, size);\r\n    }\r\n    \r\n    ctx.restore();\r\n  };\r\n\r\n  const drawMunkerForegroundStripes = (ctx: CanvasRenderingContext2D, size: number, colorVisionSettings: ColorVisionSettings) => {\r\n    const stripeWidth = Math.max(4, Math.floor(size * 0.015));\r\n    const alpha = Math.min(0.4, colorVisionSettings.specialEffect.intensity * 0.4);\r\n    const stripePattern = colorVisionSettings.specialEffect.details.munker?.stripePattern || 'red-green';\r\n    \r\n    // パターンから前景色（2番目の色）を決定\r\n    let fgColor;\r\n    switch (stripePattern) {\r\n      case 'red-green':\r\n      case 'blue-green': fgColor = `rgba(60, 255, 60, ${alpha})`; break; // 緑\r\n      case 'green-red':\r\n      case 'blue-red': fgColor = `rgba(255, 60, 60, ${alpha})`; break; // 赤\r\n      case 'red-blue':\r\n      case 'green-blue': fgColor = `rgba(60, 60, 255, ${alpha})`; break; // 青\r\n    }\r\n    \r\n    ctx.save();\r\n    ctx.fillStyle = fgColor;\r\n    \r\n    // 前景ストライプを描画（偶数位置）\r\n    for (let x = stripeWidth; x < size; x += stripeWidth * 2) {\r\n      ctx.fillRect(x, 0, stripeWidth, size);\r\n    }\r\n    \r\n    ctx.restore();\r\n  };\r\n\r\n  // グリッチ効果の描画\r\n  const drawGlitchEffect = (ctx: CanvasRenderingContext2D, colorInfo: ColorInfo, circleSize: number, intensity: number) => {\r\n    const offset = intensity * 4;\r\n    \r\n    // まず元の円を描画\r\n    ctx.beginPath();\r\n    ctx.arc(colorInfo.position.x, colorInfo.position.y, circleSize, 0, Math.PI * 2);\r\n    ctx.fillStyle = colorInfo.finalColor;\r\n    ctx.fill();\r\n    \r\n    // 半透明でRGBチャンネルをずらして重ねる\r\n    ctx.globalAlpha = 0.6;\r\n    \r\n    // 赤チャンネルを右にずらす（赤っぽく）\r\n    ctx.beginPath();\r\n    ctx.arc(colorInfo.position.x + offset, colorInfo.position.y, circleSize, 0, Math.PI * 2);\r\n    ctx.fillStyle = 'rgba(255, 50, 50, 0.4)';\r\n    ctx.fill();\r\n    \r\n    // シアンチャンネルを左にずらす（青緑っぽく）\r\n    ctx.beginPath();\r\n    ctx.arc(colorInfo.position.x - offset, colorInfo.position.y, circleSize, 0, Math.PI * 2);\r\n    ctx.fillStyle = 'rgba(50, 255, 255, 0.4)';\r\n    ctx.fill();\r\n    \r\n    // より細かいノイズ効果\r\n    if (intensity > 0.5) {\r\n      ctx.globalAlpha = 0.3;\r\n      const smallOffset = offset * 0.3;\r\n      \r\n      // 緑チャンネルを上下にずらす\r\n      ctx.beginPath();\r\n      ctx.arc(colorInfo.position.x, colorInfo.position.y - smallOffset, circleSize, 0, Math.PI * 2);\r\n      ctx.fillStyle = 'rgba(50, 255, 50, 0.3)';\r\n      ctx.fill();\r\n      \r\n      ctx.beginPath();\r\n      ctx.arc(colorInfo.position.x, colorInfo.position.y + smallOffset, circleSize, 0, Math.PI * 2);\r\n      ctx.fillStyle = 'rgba(255, 50, 255, 0.3)';\r\n      ctx.fill();\r\n    }\r\n    \r\n    ctx.globalAlpha = 1.0;\r\n  };\r\n\r\n  // 色相環描画（キャッシュされた色データを使用）\r\n  const drawColorWheel = useCallback(() => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas || colorData.length === 0) return;\r\n\r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx) return;\r\n\r\n    // 論理サイズを取得（DPR調整前のサイズ）\r\n    const size = canvasSize;\r\n    \r\n    // 背景を白でクリア\r\n    ctx.fillStyle = '#ffffff';\r\n    ctx.fillRect(0, 0, size, size);\r\n\r\n    // ムンカー錯視: 背景ストライプを最初に描画\r\n    if (colorVisionSettings.specialEffect.enabled && colorVisionSettings.specialEffect.type === 'munker') {\r\n      drawMunkerBackgroundStripes(ctx, size, colorVisionSettings);\r\n    }\r\n\r\n    // リング配置（デスクトップサイズ基準で比率計算）\r\n    const baseRadius = size / 2 - 20;\r\n    const circleSizes = [\r\n      baseRadius * 0.082,  // 54px相当\r\n      baseRadius * 0.070,  // 46px相当\r\n      baseRadius * 0.058,  // 38px相当\r\n      baseRadius * 0.046,  // 30px相当\r\n      baseRadius * 0.036,  // 24px相当\r\n      baseRadius * 0.023,  // 15px相当\r\n    ];\r\n\r\n    // 保存された色データを使って描画\r\n    colorData.forEach(colorInfo => {\r\n      // 中央の白い円は描画しない（クリック領域としてのみ存在）\r\n      if (colorInfo.ring === 0) return;\r\n      \r\n      // 通常の円のサイズを決定\r\n      let circleSize = circleSizes[colorInfo.ring - 1];\r\n      \r\n      // 特殊効果を適用\r\n      const effectResult = applySpecialEffect(ctx, colorInfo, circleSize);\r\n      circleSize = effectResult.size;\r\n      \r\n      // skipDrawingフラグがtrueの場合は通常の描画をスキップ（ダブルライト効果は直接描画済み）\r\n      if (effectResult.skipDrawing) {\r\n        return; // 早期リターンで通常描画をスキップ\r\n      }\r\n      \r\n      // ウォーターカラー効果の場合は影を追加\r\n      if (colorVisionSettings.specialEffect.enabled && colorVisionSettings.specialEffect.type === 'watercolor') {\r\n        ctx.shadowColor = effectResult.color;\r\n        ctx.shadowBlur = colorVisionSettings.specialEffect.intensity * 10;\r\n        ctx.shadowOffsetX = 0;\r\n        ctx.shadowOffsetY = 0;\r\n      }\r\n      \r\n      // グリッチ効果の場合はチャンネル分離描画\r\n      if (colorVisionSettings.specialEffect.enabled && colorVisionSettings.specialEffect.type === 'glitch') {\r\n        drawGlitchEffect(ctx, colorInfo, circleSize, colorVisionSettings.specialEffect.intensity);\r\n      } else {\r\n        // 通常の円描画\r\n        ctx.beginPath();\r\n        ctx.arc(colorInfo.position.x, colorInfo.position.y, circleSize, 0, Math.PI * 2);\r\n        \r\n        // 基本的な球体グラデーション、または平面的な単色塗りつぶし\r\n        ctx.fillStyle = effectResult.color;\r\n        ctx.fill();\r\n      }\r\n      \r\n      // 影をリセット\r\n      ctx.shadowBlur = 0;\r\n    });\r\n    \r\n    // ムンカー錯視: 前景ストライプを最後に描画\r\n    if (colorVisionSettings.specialEffect.enabled && colorVisionSettings.specialEffect.type === 'munker') {\r\n      drawMunkerForegroundStripes(ctx, size, colorVisionSettings);\r\n    }\r\n  }, [colorData, colorVisionSettings, applySpecialEffect, canvasSize]);\r\n\r\n\r\n  // 初期化とデータ管理\r\n  useEffect(() => {\r\n    if (!isInitialized) {\r\n      const newColorData = calculateColorData();\r\n      setColorData(newColorData);\r\n      setIsInitialized(true);\r\n    }\r\n  }, [isInitialized, calculateColorData]);\r\n\r\n  // ウィンドウリサイズ監視\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      const newSize = Math.min(window.innerWidth - 40, 600);\r\n      setCanvasSize(newSize);\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  // 色覚設定変更時の再計算\r\n  useEffect(() => {\r\n    if (isInitialized) {\r\n      const newColorData = calculateColorData();\r\n      setColorData(newColorData);\r\n    }\r\n  }, [colorVisionSettings, calculateColorData, isInitialized]);\r\n\r\n  // 描画処理（統合）\r\n  useEffect(() => {\r\n    if (colorData.length > 0) {\r\n      drawColorWheel();\r\n    }\r\n  }, [colorData, drawColorWheel, selectedColor, effectEnabled]);\r\n\r\n  // 遠近感効果専用の再描画処理\r\n  useEffect(() => {\r\n    if (selectedColor && colorVisionSettings.specialEffect.enabled && \r\n        colorVisionSettings.specialEffect.type === 'depth' && colorData.length > 0) {\r\n      // 遠近感効果が有効な場合、selectedColorの変更時に強制的に再描画\r\n      drawColorWheel();\r\n    }\r\n  }, [selectedColor, colorVisionSettings.specialEffect.enabled, colorVisionSettings.specialEffect.type, colorData.length, drawColorWheel]);\r\n\r\n  // リップルエフェクトを開始\r\n  const startRippleEffect = useCallback((color: ColorInfo) => {\r\n    const maxRadius = 300; // 固定値（円のサイズに関係なく統一）\r\n    \r\n    const newRipple = {\r\n      id: Date.now() + Math.random(),\r\n      x: color.position.x,\r\n      y: color.position.y,\r\n      radius: 10, // 固定の小さい開始サイズ\r\n      opacity: 1,\r\n      color: `hsl(${color.hue}, ${color.saturation}%, ${color.lightness}%)`,\r\n      startTime: Date.now(),\r\n      maxRadius, // 最大サイズを追加\r\n    };\r\n    \r\n    setRipples(prev => [...prev, newRipple]);\r\n  }, []);\r\n\r\n  // パーティクルエフェクトを開始\r\n  const startParticleEffect = useCallback((color: ColorInfo) => {\r\n    const newParticles: Array<{\r\n      id: number;\r\n      x: number;\r\n      y: number;\r\n      vx: number;\r\n      vy: number;\r\n      life: number;\r\n      maxLife: number;\r\n      size: number;\r\n      color: string;\r\n    }> = [];\r\n    const particleCount = 8;\r\n    \r\n    for (let i = 0; i < particleCount; i++) {\r\n      const angle = (i / particleCount) * Math.PI * 2 + (Math.random() - 0.5) * 0.5; // 少し角度をランダムに\r\n      const speed = 3 + Math.random() * 4; // 初速を2倍に（3-7の範囲）\r\n      \r\n      // パーティクルの色とサイズを決定（白い円の場合は白・大きく、その他は元の色・通常サイズ）\r\n      const particleColor = color.ring === 0 \r\n        ? '#ffffff' // 中央の白い円の場合は白\r\n        : `hsl(${color.hue}, ${Math.min(100, color.saturation + 20)}%, ${Math.min(80, color.lightness + 10)}%)`;\r\n      \r\n      const particleSize = color.ring === 0\r\n        ? 4 + Math.random() * 6 // 中央の白い円は大きく（4-10）\r\n        : 2 + Math.random() * 3; // 通常は小さく（2-5）\r\n      \r\n      newParticles.push({\r\n        id: Date.now() + i,\r\n        x: color.position.x,\r\n        y: color.position.y,\r\n        vx: Math.cos(angle) * speed,\r\n        vy: Math.sin(angle) * speed,\r\n        life: 1,\r\n        maxLife: 200 + Math.random() * 100, // 200-300フレーム（2.5倍長く）\r\n        size: particleSize,\r\n        color: particleColor,\r\n      });\r\n    }\r\n    \r\n    setParticles(prev => [...prev, ...newParticles]);\r\n  }, []);\r\n\r\n  // クリックイベントハンドラ\r\n  const handleCanvasClick = useCallback((event: React.MouseEvent<HTMLCanvasElement>) => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) return;\r\n\r\n    const rect = canvas.getBoundingClientRect();\r\n    const clickX = event.clientX - rect.left;\r\n    const clickY = event.clientY - rect.top;\r\n\r\n    // キャンバス内の座標に変換（DPR考慮）\r\n    const scaleX = canvasSize / rect.width;\r\n    const scaleY = canvasSize / rect.height;\r\n    const canvasX = clickX * scaleX;\r\n    const canvasY = clickY * scaleY;\r\n\r\n    // 最も近い色円を見つける\r\n    let nearestColor: ColorInfo | null = null;\r\n    let minDistance = Infinity;\r\n\r\n    colorData.forEach(color => {\r\n      const distance = Math.sqrt(\r\n        Math.pow(canvasX - color.position.x, 2) + \r\n        Math.pow(canvasY - color.position.y, 2)\r\n      );\r\n      if (distance < minDistance) {\r\n        minDistance = distance;\r\n        nearestColor = color;\r\n      }\r\n    });\r\n\r\n    // 一定距離以内の場合のみ選択\r\n    if (nearestColor && minDistance < 30) {\r\n      // 遠近感効果が有効の場合は常に選択状態を更新\r\n      if (colorVisionSettings.specialEffect.enabled && colorVisionSettings.specialEffect.type === 'depth') {\r\n        setSelectedColor(nearestColor);\r\n        // 遠近感効果の場合はパーティクルエフェクトは無効化\r\n        if (effectEnabled) {\r\n          startRippleEffect(nearestColor);\r\n        }\r\n      } else {\r\n        setSelectedColor(nearestColor);\r\n        // エフェクトが有効の場合はエフェクトを実行\r\n        if (effectEnabled) {\r\n          startRippleEffect(nearestColor);\r\n          startParticleEffect(nearestColor);\r\n        }\r\n      }\r\n    }\r\n  }, [colorData, effectEnabled, startRippleEffect, startParticleEffect, colorVisionSettings, canvasSize]);\r\n\r\n  // エフェクトのアニメーションループ\r\n  const animateEffects = useCallback(() => {\r\n    const currentTime = Date.now();\r\n    \r\n    // イージング関数（ease-out-cubic）\r\n    const easeOutCubic = (t: number) => 1 - Math.pow(1 - t, 3);\r\n    \r\n    // リップルの更新\r\n    setRipples(prev => prev.map(ripple => {\r\n      const elapsed = currentTime - ripple.startTime;\r\n      const progress = elapsed / 30000; // 30.0秒で完了（水の波紋のようにとてもゆっくり）\r\n      \r\n      if (progress >= 1) return null;\r\n      \r\n      const startRadius = ripple.radius; // クリックされた円のサイズから開始\r\n      const endRadius = ripple.maxRadius || 80;\r\n      \r\n      // イージングを適用したサイズ変化\r\n      const easedProgress = easeOutCubic(progress);\r\n      \r\n      return {\r\n        ...ripple,\r\n        radius: startRadius + easedProgress * (endRadius - startRadius),\r\n        opacity: Math.exp(-progress * 3) * ripple.opacity, // 水の波紋のように指数的にフェードアウト\r\n      };\r\n    }).filter((ripple): ripple is NonNullable<typeof ripple> => ripple !== null));\r\n\r\n    // パーティクルの更新\r\n    setParticles(prev => prev.map(particle => {\r\n      const canvas = canvasRef.current;\r\n      if (!canvas) return null;\r\n\r\n      const newX = particle.x + particle.vx;\r\n      const newY = particle.y + particle.vy;\r\n      const newLife = particle.life - 1/particle.maxLife;\r\n      \r\n      // 寿命切れまたは画面外に出た場合は削除\r\n      if (newLife <= 0 || \r\n          newX < -particle.size || newX > canvas.width + particle.size ||\r\n          newY < -particle.size || newY > canvas.height + particle.size) {\r\n        return null;\r\n      }\r\n      \r\n      return {\r\n        ...particle,\r\n        x: newX,\r\n        y: newY,\r\n        life: newLife,\r\n        vx: particle.vx * 0.995, // 減速をより緩やか（0.5%/フレーム）\r\n        vy: particle.vy * 0.995, // 減速をより緩やか（0.5%/フレーム）\r\n      };\r\n    }).filter((particle): particle is NonNullable<typeof particle> => particle !== null));\r\n  }, []);\r\n\r\n  // エフェクト描画（同じCanvas上に重ね描き）\r\n  const drawEffects = useCallback(() => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas || (ripples.length === 0 && particles.length === 0)) return;\r\n\r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx) return;\r\n\r\n    // リップル描画\r\n    ripples.forEach(ripple => {\r\n      ctx.beginPath();\r\n      ctx.arc(ripple.x, ripple.y, ripple.radius, 0, Math.PI * 2);\r\n      ctx.strokeStyle = ripple.color;\r\n      \r\n      // 拡大に応じて線を細くする（3px → 1.5px）\r\n      const progress = (Date.now() - ripple.startTime) / 3000;\r\n      const lineWidth = Math.max(1.5, 3 * (1 - progress * 0.5));\r\n      ctx.lineWidth = lineWidth;\r\n      \r\n      ctx.globalAlpha = ripple.opacity;\r\n      ctx.stroke();\r\n    });\r\n\r\n    // パーティクル描画\r\n    particles.forEach(particle => {\r\n      if (particle.life > 0.01) { // 閾値を設けてちらつき防止\r\n        ctx.beginPath();\r\n        ctx.arc(particle.x, particle.y, particle.size, 0, Math.PI * 2);\r\n        ctx.fillStyle = particle.color;\r\n        ctx.globalAlpha = Math.max(0, particle.life); // 負の値を防止\r\n        ctx.fill();\r\n        \r\n        // 光る効果\r\n        ctx.shadowColor = particle.color;\r\n        ctx.shadowBlur = 8;\r\n        ctx.fill();\r\n        ctx.shadowBlur = 0;\r\n      }\r\n    });\r\n\r\n    ctx.globalAlpha = 1;\r\n  }, [ripples, particles]);\r\n\r\n  // RequestAnimationFrame を使った最適化されたアニメーションループ\r\n  const animationFrameRef = useRef<number>();\r\n\r\n  const animationLoop = useCallback(() => {\r\n    if (!effectEnabled || (ripples.length === 0 && particles.length === 0)) {\r\n      return;\r\n    }\r\n\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) return;\r\n\r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx) return;\r\n\r\n    // キャンバス全体をクリア\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    // 色相環を再描画（キャッシュされたデータを使用）\r\n    drawColorWheel();\r\n\r\n    // エフェクト状態を更新\r\n    animateEffects();\r\n\r\n    // エフェクトを描画\r\n    drawEffects();\r\n\r\n    // 次のフレームをスケジュール\r\n    animationFrameRef.current = requestAnimationFrame(animationLoop);\r\n  }, [effectEnabled, ripples.length, particles.length, drawColorWheel, animateEffects, drawEffects]);\r\n\r\n  // アニメーションループの開始/停止\r\n  useEffect(() => {\r\n    if (effectEnabled && (ripples.length > 0 || particles.length > 0)) {\r\n      animationFrameRef.current = requestAnimationFrame(animationLoop);\r\n    } else {\r\n      if (animationFrameRef.current) {\r\n        cancelAnimationFrame(animationFrameRef.current);\r\n      }\r\n    }\r\n\r\n    return () => {\r\n      if (animationFrameRef.current) {\r\n        cancelAnimationFrame(animationFrameRef.current);\r\n      }\r\n    };\r\n  }, [effectEnabled, ripples.length, particles.length, animationLoop]);\r\n\r\n  return (\r\n    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', gap: '1.5rem' }}>\r\n      {/* 色相環 */}\r\n      <div style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        background: '#ffffff',\r\n        borderRadius: '1rem',\r\n        boxShadow: '0 4px 6px -1px rgb(0 0 0 / 0.1)',\r\n        padding: '1.5rem',\r\n      }}>\r\n        <canvas\r\n          ref={canvasRef}\r\n          onClick={handleCanvasClick}\r\n          aria-label=\"RGB色調整の視覚化\"\r\n          width={canvasSize}\r\n          height={canvasSize}\r\n          style={{\r\n            display: 'block',\r\n            width: `${canvasSize}px`,\r\n            height: `${canvasSize}px`,\r\n            cursor: 'pointer',\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      {/* エフェクト設定チェックボックス */}\r\n      <div style={{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        gap: '0.5rem',\r\n        background: 'rgba(255, 255, 255, 0.95)',\r\n        padding: '1rem',\r\n        borderRadius: '0.5rem',\r\n        boxShadow: '0 2px 8px rgba(0, 0, 0, 0.1)',\r\n        border: '1px solid rgba(0, 0, 0, 0.1)',\r\n      }}>\r\n        <input\r\n          type=\"checkbox\"\r\n          id=\"effect-toggle\"\r\n          checked={effectEnabled}\r\n          onChange={(e) => setEffectEnabled(e.target.checked)}\r\n          style={{\r\n            width: '18px',\r\n            height: '18px',\r\n            cursor: 'pointer',\r\n          }}\r\n        />\r\n        <label \r\n          htmlFor=\"effect-toggle\"\r\n          style={{\r\n            fontSize: '0.875rem',\r\n            cursor: 'pointer',\r\n            userSelect: 'none',\r\n            color: '#333',\r\n          }}\r\n        >\r\n          ✨ エフェクトを有効にする\r\n        </label>\r\n      </div>\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport type { ColorVisionSettings } from '../types/color';\r\nimport { ColorWheel } from './ColorWheel';\r\n\r\ninterface ColorCirclesProps {\r\n  colorVisionSettings: ColorVisionSettings;\r\n  width?: number;\r\n  height?: number;\r\n}\r\n\r\n/**\r\n * 色相環を表示するコンポーネント（旧RGB円から変更）\r\n * 24色相 × 6リング = 144色を美しく配置\r\n */\r\nexport const ColorCircles: React.FC<ColorCirclesProps> = ({\r\n  colorVisionSettings,\r\n  width,\r\n  height,\r\n}) => {\r\n  return (\r\n    <div style={{\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      padding: '0',\r\n    }}>\r\n      <ColorWheel colorVisionSettings={colorVisionSettings} width={width} height={height} />\r\n      {colorVisionSettings.simulation.showSimulationInfo && (\r\n        <div style={{\r\n          position: 'absolute',\r\n          bottom: '1rem',\r\n          left: '50%',\r\n          transform: 'translateX(-50%)',\r\n          padding: '0.5rem 1rem',\r\n          background: 'rgba(240, 249, 255, 0.95)',\r\n          borderRadius: '0.5rem',\r\n          textAlign: 'center',\r\n          border: '1px solid #bfdbfe',\r\n          backdropFilter: 'blur(4px)',\r\n          boxShadow: '0 4px 6px -1px rgb(0 0 0 / 0.1)',\r\n        }}>\r\n          <span style={{\r\n            fontSize: '0.875rem',\r\n            color: '#374151',\r\n            fontWeight: '500'\r\n          }}>\r\n            {colorVisionSettings.simulation.useSimulation && (\r\n              <>\r\n                {colorVisionSettings.simulation.simulationType === 'deuteranopia' && 'デュータン'}\r\n                {colorVisionSettings.simulation.simulationType === 'protanopia' && 'プロタン'}\r\n                {colorVisionSettings.simulation.simulationType === 'tritanopia' && 'トリタン'}\r\n                シミュレーション ({(colorVisionSettings.simulation.severity * 100).toFixed(0)}%)\r\n              </>\r\n            )}\r\n            {colorVisionSettings.correction.useCorrection && (\r\n              <>\r\n                {colorVisionSettings.simulation.useSimulation && ' | '}\r\n                補正フィルター ({(colorVisionSettings.correction.strength * 100).toFixed(0)}%)\r\n              </>\r\n            )}\r\n          </span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};","import type { RGBColor, HSLColor } from '../types/color';\r\n\r\n/**\r\n * RGB値を16進数カラーコードに変換\r\n */\r\nexport function rgbToHex(rgb: RGBColor): string {\r\n  const toHex = (n: number): string => {\r\n    const hex = Math.round(n).toString(16).padStart(2, '0');\r\n    return hex;\r\n  };\r\n  return `#${toHex(rgb.r)}${toHex(rgb.g)}${toHex(rgb.b)}`;\r\n}\r\n\r\n/**\r\n * 16進数カラーコードをRGB値に変換\r\n */\r\nexport function hexToRgb(hex: string): RGBColor | null {\r\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n  return result\r\n    ? {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16),\r\n      }\r\n    : null;\r\n}\r\n\r\n/**\r\n * RGB値をHSL色空間に変換\r\n */\r\nexport function rgbToHsl(rgb: RGBColor): HSLColor {\r\n  const r = rgb.r / 255;\r\n  const g = rgb.g / 255;\r\n  const b = rgb.b / 255;\r\n\r\n  const max = Math.max(r, g, b);\r\n  const min = Math.min(r, g, b);\r\n  let h = 0;\r\n  let s = 0;\r\n  const l = (max + min) / 2;\r\n\r\n  if (max !== min) {\r\n    const d = max - min;\r\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n\r\n    switch (max) {\r\n      case r:\r\n        h = ((g - b) / d + (g < b ? 6 : 0)) / 6;\r\n        break;\r\n      case g:\r\n        h = ((b - r) / d + 2) / 6;\r\n        break;\r\n      case b:\r\n        h = ((r - g) / d + 4) / 6;\r\n        break;\r\n    }\r\n  }\r\n\r\n  return {\r\n    h: Math.round(h * 360),\r\n    s: Math.round(s * 100),\r\n    l: Math.round(l * 100),\r\n  };\r\n}\r\n\r\n/**\r\n * HSL色空間をRGB値に変換\r\n */\r\nexport function hslToRgb(hsl: HSLColor): RGBColor {\r\n  const h = hsl.h / 360;\r\n  const s = hsl.s / 100;\r\n  const l = hsl.l / 100;\r\n\r\n  let r: number, g: number, b: number;\r\n\r\n  if (s === 0) {\r\n    r = g = b = l;\r\n  } else {\r\n    const hue2rgb = (p: number, q: number, t: number): number => {\r\n      if (t < 0) t += 1;\r\n      if (t > 1) t -= 1;\r\n      if (t < 1 / 6) return p + (q - p) * 6 * t;\r\n      if (t < 1 / 2) return q;\r\n      if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\r\n      return p;\r\n    };\r\n\r\n    const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n    const p = 2 * l - q;\r\n\r\n    r = hue2rgb(p, q, h + 1 / 3);\r\n    g = hue2rgb(p, q, h);\r\n    b = hue2rgb(p, q, h - 1 / 3);\r\n  }\r\n\r\n  return {\r\n    r: Math.round(r * 255),\r\n    g: Math.round(g * 255),\r\n    b: Math.round(b * 255),\r\n  };\r\n}\r\n\r\n/**\r\n * 値を指定範囲内にクランプ\r\n */\r\nexport function clamp(value: number, min: number, max: number): number {\r\n  return Math.min(Math.max(value, min), max);\r\n}\r\n\r\n/**\r\n * ガンマ補正を適用\r\n */\r\nexport function applyGammaCorrection(value: number, gamma = 2.2): number {\r\n  return Math.pow(value / 255, gamma) * 255;\r\n}\r\n\r\n/**\r\n * 逆ガンマ補正を適用\r\n */\r\nexport function applyInverseGammaCorrection(value: number, gamma = 2.2): number {\r\n  return Math.pow(value / 255, 1 / gamma) * 255;\r\n}","import React, { useCallback } from 'react';\r\nimport type { ColorVisionSettings, ColorVisionType, SpecialEffectType } from '../types/color';\r\nimport { clamp } from '../utils/color-converter';\r\n\r\ninterface ColorAdjusterProps {\r\n  colorVisionSettings: ColorVisionSettings;\r\n  onColorVisionSettingsChange: (settings: ColorVisionSettings) => void;\r\n}\r\n\r\n/**\r\n * 色覚シミュレーション・補正設定コンポーネント\r\n */\r\nexport const ColorAdjuster: React.FC<ColorAdjusterProps> = ({\r\n  colorVisionSettings,\r\n  onColorVisionSettingsChange,\r\n}) => {\r\n\r\n  // シミュレーション設定の変更\r\n  const handleSimulationToggle = useCallback(() => {\r\n    onColorVisionSettingsChange({\r\n      ...colorVisionSettings,\r\n      simulation: {\r\n        ...colorVisionSettings.simulation,\r\n        useSimulation: !colorVisionSettings.simulation.useSimulation,\r\n      },\r\n    });\r\n  }, [colorVisionSettings, onColorVisionSettingsChange]);\r\n\r\n  const handleSimulationTypeChange = useCallback((type: ColorVisionType) => {\r\n    onColorVisionSettingsChange({\r\n      ...colorVisionSettings,\r\n      simulation: {\r\n        ...colorVisionSettings.simulation,\r\n        simulationType: type,\r\n      },\r\n    });\r\n  }, [colorVisionSettings, onColorVisionSettingsChange]);\r\n\r\n  const handleSimulationSeverityChange = useCallback((severity: number) => {\r\n    onColorVisionSettingsChange({\r\n      ...colorVisionSettings,\r\n      simulation: {\r\n        ...colorVisionSettings.simulation,\r\n        severity: clamp(severity, 0, 1),\r\n      },\r\n    });\r\n  }, [colorVisionSettings, onColorVisionSettingsChange]);\r\n\r\n  // 補正設定の変更\r\n  const handleCorrectionToggle = useCallback(() => {\r\n    onColorVisionSettingsChange({\r\n      ...colorVisionSettings,\r\n      correction: {\r\n        ...colorVisionSettings.correction,\r\n        useCorrection: !colorVisionSettings.correction.useCorrection,\r\n      },\r\n    });\r\n  }, [colorVisionSettings, onColorVisionSettingsChange]);\r\n\r\n  const handleCorrectionTypeChange = useCallback((type: ColorVisionType) => {\r\n    onColorVisionSettingsChange({\r\n      ...colorVisionSettings,\r\n      correction: {\r\n        ...colorVisionSettings.correction,\r\n        correctionType: type,\r\n      },\r\n    });\r\n  }, [colorVisionSettings, onColorVisionSettingsChange]);\r\n\r\n  const handleCorrectionStrengthChange = useCallback((strength: number) => {\r\n    onColorVisionSettingsChange({\r\n      ...colorVisionSettings,\r\n      correction: {\r\n        ...colorVisionSettings.correction,\r\n        strength: clamp(strength, 0, 1),\r\n      },\r\n    });\r\n  }, [colorVisionSettings, onColorVisionSettingsChange]);\r\n\r\n  const handleCorrectionHeadroomChange = useCallback((headroom: number | undefined) => {\r\n    onColorVisionSettingsChange({\r\n      ...colorVisionSettings,\r\n      correction: {\r\n        ...colorVisionSettings.correction,\r\n        headroom: headroom !== undefined ? clamp(headroom, 0, 1) : undefined,\r\n      },\r\n    });\r\n  }, [colorVisionSettings, onColorVisionSettingsChange]);\r\n\r\n  // 特殊効果設定の変更\r\n  const handleSpecialEffectToggle = useCallback(() => {\r\n    onColorVisionSettingsChange({\r\n      ...colorVisionSettings,\r\n      specialEffect: {\r\n        ...colorVisionSettings.specialEffect,\r\n        enabled: !colorVisionSettings.specialEffect.enabled,\r\n      },\r\n    });\r\n  }, [colorVisionSettings, onColorVisionSettingsChange]);\r\n\r\n  const handleSpecialEffectTypeChange = useCallback((type: SpecialEffectType) => {\r\n    onColorVisionSettingsChange({\r\n      ...colorVisionSettings,\r\n      specialEffect: {\r\n        ...colorVisionSettings.specialEffect,\r\n        type,\r\n      },\r\n    });\r\n  }, [colorVisionSettings, onColorVisionSettingsChange]);\r\n\r\n  const handleSpecialEffectIntensityChange = useCallback((intensity: number) => {\r\n    onColorVisionSettingsChange({\r\n      ...colorVisionSettings,\r\n      specialEffect: {\r\n        ...colorVisionSettings.specialEffect,\r\n        intensity: clamp(intensity, 0, 1),\r\n      },\r\n    });\r\n  }, [colorVisionSettings, onColorVisionSettingsChange]);\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div style={{\r\n      background: '#FFFFFF',\r\n      borderRadius: '1rem',\r\n      padding: '1.5rem',\r\n      boxShadow: '0 4px 6px -1px rgb(0 0 0 / 0.1)',\r\n      maxWidth: '500px',\r\n      width: '100%'\r\n    }}>\r\n\r\n      {/* 色覚シミュレーション設定 */}\r\n      <div style={{\r\n        marginBottom: '1.5rem',\r\n        padding: '1rem',\r\n        background: '#f8fafc',\r\n        borderRadius: '0.5rem',\r\n        border: '1px solid #e2e8f0'\r\n      }}>\r\n        <h3 style={{\r\n          fontSize: '1rem',\r\n          margin: '0 0 1rem 0',\r\n          color: '#374151'\r\n        }}>色覚シミュレーション</h3>\r\n        \r\n        <div style={{ marginBottom: '1rem' }}>\r\n          <label style={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            gap: '0.5rem',\r\n            cursor: 'pointer'\r\n          }}>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={colorVisionSettings.simulation.useSimulation}\r\n              onChange={handleSimulationToggle}\r\n              style={{ accentColor: '#3B82F6' }}\r\n            />\r\n            <span style={{ fontSize: '0.875rem', fontWeight: '500' }}>\r\n              色覚シミュレーションを有効にする\r\n            </span>\r\n          </label>\r\n        </div>\r\n\r\n        {colorVisionSettings.simulation.useSimulation && (\r\n          <>\r\n            <div style={{ marginBottom: '1rem' }}>\r\n              <label style={{\r\n                display: 'block',\r\n                fontSize: '0.875rem',\r\n                fontWeight: '500',\r\n                marginBottom: '0.5rem'\r\n              }}>\r\n                シミュレーションタイプ:\r\n              </label>\r\n              <select\r\n                value={colorVisionSettings.simulation.simulationType}\r\n                onChange={(e) => handleSimulationTypeChange(e.target.value as ColorVisionType)}\r\n                style={{\r\n                  width: '100%',\r\n                  padding: '0.5rem',\r\n                  border: '1px solid #D1D5DB',\r\n                  borderRadius: '0.375rem',\r\n                  fontSize: '0.875rem'\r\n                }}\r\n              >\r\n                <option value=\"deuteranopia\">デュータン（緑色覚異常）</option>\r\n                <option value=\"protanopia\">プロタン（赤色覚異常）</option>\r\n                <option value=\"tritanopia\">トリタン（青色覚異常）</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div style={{ marginBottom: '1rem' }}>\r\n              <label style={{\r\n                display: 'block',\r\n                fontSize: '0.875rem',\r\n                fontWeight: '500',\r\n                marginBottom: '0.5rem'\r\n              }}>\r\n                シミュレーション強度: {(colorVisionSettings.simulation.severity * 100).toFixed(0)}%\r\n              </label>\r\n              <input\r\n                type=\"range\"\r\n                min=\"0\"\r\n                max=\"1\"\r\n                step=\"0.1\"\r\n                value={colorVisionSettings.simulation.severity}\r\n                onChange={(e) => handleSimulationSeverityChange(Number(e.target.value))}\r\n                style={{\r\n                  width: '100%',\r\n                  height: '6px'\r\n                }}\r\n              />\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      {/* 色覚補正設定 */}\r\n      <div style={{\r\n        marginBottom: '1.5rem',\r\n        padding: '1rem',\r\n        background: '#fff7ed',\r\n        borderRadius: '0.5rem',\r\n        border: '1px solid #fed7aa'\r\n      }}>\r\n        <h3 style={{\r\n          fontSize: '1rem',\r\n          margin: '0 0 1rem 0',\r\n          color: '#374151'\r\n        }}>色覚補正フィルター</h3>\r\n        \r\n        <div style={{ marginBottom: '1rem' }}>\r\n          <label style={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            gap: '0.5rem',\r\n            cursor: 'pointer'\r\n          }}>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={colorVisionSettings.correction.useCorrection}\r\n              onChange={handleCorrectionToggle}\r\n              style={{ accentColor: '#ea580c' }}\r\n            />\r\n            <span style={{ fontSize: '0.875rem', fontWeight: '500' }}>\r\n              色覚補正を有効にする\r\n            </span>\r\n          </label>\r\n        </div>\r\n\r\n        {colorVisionSettings.correction.useCorrection && (\r\n          <>\r\n            <div style={{ marginBottom: '1rem' }}>\r\n              <label style={{\r\n                display: 'block',\r\n                fontSize: '0.875rem',\r\n                fontWeight: '500',\r\n                marginBottom: '0.5rem'\r\n              }}>\r\n                補正対象:\r\n              </label>\r\n              <select\r\n                value={colorVisionSettings.correction.correctionType}\r\n                onChange={(e) => handleCorrectionTypeChange(e.target.value as ColorVisionType)}\r\n                style={{\r\n                  width: '100%',\r\n                  padding: '0.5rem',\r\n                  border: '1px solid #D1D5DB',\r\n                  borderRadius: '0.375rem',\r\n                  fontSize: '0.875rem'\r\n                }}\r\n              >\r\n                <option value=\"deuteranopia\">デュータン（緑色覚異常）</option>\r\n                <option value=\"protanopia\">プロタン（赤色覚異常）</option>\r\n                <option value=\"tritanopia\">トリタン（青色覚異常）</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div style={{ marginBottom: '1rem' }}>\r\n              <label style={{\r\n                display: 'block',\r\n                fontSize: '0.875rem',\r\n                fontWeight: '500',\r\n                marginBottom: '0.5rem'\r\n              }}>\r\n                補正強度: {(colorVisionSettings.correction.strength * 100).toFixed(0)}%\r\n              </label>\r\n              <input\r\n                type=\"range\"\r\n                min=\"0\"\r\n                max=\"1\"\r\n                step=\"0.1\"\r\n                value={colorVisionSettings.correction.strength}\r\n                onChange={(e) => handleCorrectionStrengthChange(Number(e.target.value))}\r\n                style={{\r\n                  width: '100%',\r\n                  height: '6px'\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div style={{ marginBottom: '1rem' }}>\r\n              <div style={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'space-between',\r\n                marginBottom: '0.5rem'\r\n              }}>\r\n                <label style={{\r\n                  display: 'block',\r\n                  fontSize: '0.875rem',\r\n                  fontWeight: '500'\r\n                }}>\r\n                  補正ヘッドルーム: {colorVisionSettings.correction.headroom !== undefined ? (colorVisionSettings.correction.headroom * 100).toFixed(0) + '%' : '自動'}\r\n                </label>\r\n                {colorVisionSettings.correction.headroom !== undefined && (\r\n                  <button\r\n                    onClick={() => handleCorrectionHeadroomChange(undefined)}\r\n                    style={{\r\n                      padding: '0.25rem 0.5rem',\r\n                      fontSize: '0.75rem',\r\n                      background: '#E5E7EB',\r\n                      border: 'none',\r\n                      borderRadius: '0.25rem',\r\n                      cursor: 'pointer'\r\n                    }}\r\n                  >\r\n                    自動に戻す\r\n                  </button>\r\n                )}\r\n              </div>\r\n              <input\r\n                type=\"range\"\r\n                min=\"0\"\r\n                max=\"1\"\r\n                step=\"0.05\"\r\n                value={colorVisionSettings.correction.headroom ?? 0.0}\r\n                onChange={(e) => handleCorrectionHeadroomChange(Number(e.target.value))}\r\n                style={{\r\n                  width: '100%',\r\n                  height: '6px'\r\n                }}\r\n              />\r\n              <div style={{\r\n                fontSize: '0.75rem',\r\n                color: '#6B7280',\r\n                marginTop: '0.25rem'\r\n              }}>\r\n                飽和を防ぐため入力を暗くします（0%=暗くしない、100%=最大限暗く）\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      {/* 特殊視覚効果設定 */}\r\n      <div style={{\r\n        marginBottom: '1.5rem',\r\n        padding: '1rem',\r\n        background: '#f3f4ff',\r\n        borderRadius: '0.5rem',\r\n        border: '1px solid #c7d2fe'\r\n      }}>\r\n        <h3 style={{\r\n          fontSize: '1rem',\r\n          margin: '0 0 1rem 0',\r\n          color: '#374151'\r\n        }}>特殊視覚効果</h3>\r\n        \r\n        <div style={{ marginBottom: '1rem' }}>\r\n          <label style={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            gap: '0.5rem',\r\n            cursor: 'pointer'\r\n          }}>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={colorVisionSettings.specialEffect.enabled}\r\n              onChange={handleSpecialEffectToggle}\r\n              style={{ accentColor: '#7c3aed' }}\r\n            />\r\n            <span style={{ fontSize: '0.875rem', fontWeight: '500' }}>\r\n              特殊視覚効果を有効にする\r\n            </span>\r\n          </label>\r\n        </div>\r\n\r\n        {colorVisionSettings.specialEffect.enabled && (\r\n          <>\r\n            <div style={{ marginBottom: '1rem' }}>\r\n              <label style={{\r\n                display: 'block',\r\n                fontSize: '0.875rem',\r\n                fontWeight: '500',\r\n                marginBottom: '0.5rem'\r\n              }}>\r\n                効果タイプ:\r\n              </label>\r\n              <select\r\n                value={colorVisionSettings.specialEffect.type}\r\n                onChange={(e) => handleSpecialEffectTypeChange(e.target.value as SpecialEffectType)}\r\n                style={{\r\n                  width: '100%',\r\n                  padding: '0.5rem',\r\n                  border: '1px solid #D1D5DB',\r\n                  borderRadius: '0.375rem',\r\n                  fontSize: '0.875rem'\r\n                }}\r\n              >\r\n                <option value=\"double-light\">💡 ダブルライト効果</option>\r\n                <option value=\"glitch\">🔸 グリッチ効果</option>\r\n                <option value=\"depth\">🎯 遠近感効果</option>\r\n                <option value=\"watercolor\">🎨 ウォーターカラー効果</option>\r\n                <option value=\"munker\">📐 ムンカー錯視</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div style={{ marginBottom: '1rem' }}>\r\n              <label style={{\r\n                display: 'block',\r\n                fontSize: '0.875rem',\r\n                fontWeight: '500',\r\n                marginBottom: '0.5rem'\r\n              }}>\r\n                効果強度: {(colorVisionSettings.specialEffect.intensity * 100).toFixed(0)}%\r\n              </label>\r\n              <input\r\n                type=\"range\"\r\n                min=\"0\"\r\n                max=\"1\"\r\n                step=\"0.1\"\r\n                value={colorVisionSettings.specialEffect.intensity}\r\n                onChange={(e) => handleSpecialEffectIntensityChange(Number(e.target.value))}\r\n                style={{\r\n                  width: '100%',\r\n                  height: '6px'\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            {/* ムンカー錯視専用の色パターン選択 */}\r\n            {colorVisionSettings.specialEffect.type === 'munker' && (\r\n              <div style={{ marginBottom: '1rem' }}>\r\n                <label style={{\r\n                  display: 'block',\r\n                  fontSize: '0.875rem',\r\n                  fontWeight: '500',\r\n                  marginBottom: '0.5rem'\r\n                }}>\r\n                  ストライプ色パターン:\r\n                </label>\r\n                <select\r\n                  value={colorVisionSettings.specialEffect.details.munker?.stripePattern || 'red-green'}\r\n                  onChange={(e) => {\r\n                    const newPattern = e.target.value as 'red-green' | 'green-red' | 'red-blue' | 'blue-red' | 'green-blue' | 'blue-green';\r\n                    onColorVisionSettingsChange({\r\n                      ...colorVisionSettings,\r\n                      specialEffect: {\r\n                        ...colorVisionSettings.specialEffect,\r\n                        details: {\r\n                          ...colorVisionSettings.specialEffect.details,\r\n                          munker: {\r\n                            stripeWidth: colorVisionSettings.specialEffect.details.munker?.stripeWidth || 8,\r\n                            stripePattern: newPattern\r\n                          }\r\n                        }\r\n                      }\r\n                    });\r\n                  }}\r\n                  style={{\r\n                    width: '100%',\r\n                    padding: '0.5rem',\r\n                    border: '1px solid #D1D5DB',\r\n                    borderRadius: '0.375rem',\r\n                    fontSize: '0.875rem'\r\n                  }}\r\n                >\r\n                  <option value=\"red-green\">🔴Bottom 🟢Top</option>\r\n                  <option value=\"green-red\">🟢Bottom 🔴Top</option>\r\n                  <option value=\"red-blue\">🔴Bottom 🔵Top</option>\r\n                  <option value=\"blue-red\">🔵Bottom 🔴Top</option>\r\n                  <option value=\"green-blue\">🟢Bottom 🔵Top</option>\r\n                  <option value=\"blue-green\">🔵Bottom 🟢Top</option>\r\n                </select>\r\n              </div>\r\n            )}\r\n\r\n            {/* 効果の説明テキスト */}\r\n            <div style={{\r\n              fontSize: '0.75rem',\r\n              color: '#6b7280',\r\n              background: 'rgba(255,255,255,0.5)',\r\n              padding: '0.5rem',\r\n              borderRadius: '0.25rem',\r\n              marginTop: '1rem'\r\n            }}>\r\n              {colorVisionSettings.specialEffect.type === 'double-light' && \r\n                '2つの光源から照らされているような効果を追加します'}\r\n              {colorVisionSettings.specialEffect.type === 'glitch' && \r\n                '映像のバグのような色ズレやノイズを意図的に加えます'}\r\n              {colorVisionSettings.specialEffect.type === 'depth' && \r\n                '遠近感を色で表現し、選択した円を近くに見せます'}\r\n              {colorVisionSettings.specialEffect.type === 'watercolor' && \r\n                '境界線の色が内側ににじんで見えるような効果を追加します'}\r\n              {colorVisionSettings.specialEffect.type === 'munker' && \r\n                '背景のストライプパターンにより色が違って見える錯視効果'}\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};","import { simulateDeutanPoly, correctForDeutan, type RGB8 } from './deutan-simulator';\r\nimport type { ColorVisionSettings } from '../types/color';\r\n\r\n/**\r\n * 画像に色変換を適用\r\n * @param imageData Canvas ImageData\r\n * @param colorVisionSettings 色覚設定\r\n * @param onProgress 進捗コールバック\r\n * @returns 変換されたImageData\r\n */\r\nexport async function processImageData(\r\n  imageData: ImageData,\r\n  colorVisionSettings: ColorVisionSettings,\r\n  onProgress?: (progress: number) => void\r\n): Promise<ImageData> {\r\n  const data = new Uint8ClampedArray(imageData.data);\r\n  const totalPixels = data.length / 4;\r\n  const batchSize = Math.max(1000, Math.floor(totalPixels / 100)); // バッチサイズ調整\r\n\r\n  let processedPixels = 0;\r\n\r\n  // バッチ処理でメインスレッドをブロックしないように\r\n  for (let i = 0; i < data.length; i += batchSize * 4) {\r\n    const endIndex = Math.min(i + batchSize * 4, data.length);\r\n    \r\n    // バッチ内のピクセルを処理\r\n    for (let j = i; j < endIndex; j += 4) {\r\n      const originalRgb: RGB8 = [data[j], data[j + 1], data[j + 2]];\r\n      let transformedRgb = originalRgb;\r\n      \r\n      // シミュレーションを適用\r\n      if (colorVisionSettings.simulation.useSimulation &&\r\n          colorVisionSettings.simulation.simulationType === 'deuteranopia') {\r\n        transformedRgb = simulateDeutanPoly(\r\n          transformedRgb,\r\n          colorVisionSettings.simulation.severity\r\n        );\r\n      }\r\n\r\n      // 補正を適用\r\n      if (colorVisionSettings.correction.useCorrection &&\r\n          colorVisionSettings.correction.correctionType === 'deuteranopia') {\r\n        transformedRgb = correctForDeutan(\r\n          transformedRgb,\r\n          colorVisionSettings.correction.strength,\r\n          colorVisionSettings.correction.headroom\r\n        );\r\n      }\r\n      \r\n      // 結果を書き戻し\r\n      data[j] = transformedRgb[0];\r\n      data[j + 1] = transformedRgb[1];\r\n      data[j + 2] = transformedRgb[2];\r\n      // alpha channel (data[j + 3]) はそのまま\r\n      \r\n      processedPixels++;\r\n    }\r\n    \r\n    // 進捗を報告\r\n    if (onProgress) {\r\n      const progress = Math.round((processedPixels / totalPixels) * 100);\r\n      onProgress(progress);\r\n    }\r\n    \r\n    // メインスレッドに制御を戻す\r\n    await new Promise(resolve => setTimeout(resolve, 0));\r\n  }\r\n\r\n  return new ImageData(data, imageData.width, imageData.height);\r\n}\r\n\r\n/**\r\n * 画像ファイルをCanvasに読み込み\r\n * @param file 画像ファイル\r\n * @param maxWidth 最大幅（リサイズ用）\r\n * @param maxHeight 最大高さ（リサイズ用）\r\n * @returns Canvas要素とImageData\r\n */\r\nexport function loadImageToCanvas(\r\n  file: File, \r\n  maxWidth = 4096, \r\n  maxHeight = 4096\r\n): Promise<{canvas: HTMLCanvasElement, imageData: ImageData}> {\r\n  return new Promise((resolve, reject) => {\r\n    const img = new Image();\r\n    const canvas = document.createElement('canvas');\r\n    const ctx = canvas.getContext('2d');\r\n    \r\n    if (!ctx) {\r\n      reject(new Error('Canvas context not available'));\r\n      return;\r\n    }\r\n    \r\n    img.onload = () => {\r\n      // リサイズ計算\r\n      let { width, height } = img;\r\n      if (width > maxWidth || height > maxHeight) {\r\n        const ratio = Math.min(maxWidth / width, maxHeight / height);\r\n        width *= ratio;\r\n        height *= ratio;\r\n      }\r\n      \r\n      canvas.width = width;\r\n      canvas.height = height;\r\n      \r\n      // 画像を描画\r\n      ctx.drawImage(img, 0, 0, width, height);\r\n      \r\n      // ImageDataを取得\r\n      const imageData = ctx.getImageData(0, 0, width, height);\r\n      \r\n      resolve({ canvas, imageData });\r\n    };\r\n    \r\n    img.onerror = () => {\r\n      reject(new Error('Failed to load image'));\r\n    };\r\n    \r\n    img.src = URL.createObjectURL(file);\r\n  });\r\n}\r\n\r\n/**\r\n * ImageDataをCanvasに描画\r\n * @param canvas Canvas要素\r\n * @param imageData ImageData\r\n */\r\nexport function drawImageDataToCanvas(\r\n  canvas: HTMLCanvasElement, \r\n  imageData: ImageData\r\n): void {\r\n  const ctx = canvas.getContext('2d');\r\n  if (!ctx) throw new Error('Canvas context not available');\r\n  \r\n  canvas.width = imageData.width;\r\n  canvas.height = imageData.height;\r\n  ctx.putImageData(imageData, 0, 0);\r\n}\r\n\r\n/**\r\n * CanvasをBlob/File形式でダウンロード\r\n * @param canvas Canvas要素\r\n * @param filename ファイル名\r\n * @param format 画像フォーマット\r\n * @param quality 品質（JPEG用）\r\n */\r\nexport function downloadCanvasAsImage(\r\n  canvas: HTMLCanvasElement,\r\n  filename = 'colorwise-processed.png',\r\n  format: 'image/png' | 'image/jpeg' | 'image/webp' = 'image/png',\r\n  quality = 0.9\r\n): void {\r\n  canvas.toBlob((blob) => {\r\n    if (!blob) return;\r\n    \r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = filename;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    URL.revokeObjectURL(url);\r\n  }, format, quality);\r\n}\r\n\r\n/**\r\n * ファイルサイズを人間に読みやすい形式に変換\r\n * @param bytes バイト数\r\n * @returns フォーマットされた文字列\r\n */\r\nexport function formatFileSize(bytes: number): string {\r\n  if (bytes === 0) return '0 Bytes';\r\n  \r\n  const k = 1024;\r\n  const sizes = ['Bytes', 'KB', 'MB', 'GB'];\r\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n  \r\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n}\r\n\r\n/**\r\n * 画像ファイルの妥当性をチェック\r\n * @param file ファイル\r\n * @param maxSize 最大サイズ（バイト）\r\n * @returns エラーメッセージまたはnull\r\n */\r\nexport function validateImageFile(\r\n  file: File, \r\n  maxSize = 10 * 1024 * 1024 // 10MB\r\n): string | null {\r\n  // ファイルタイプチェック\r\n  if (!file.type.startsWith('image/')) {\r\n    return '画像ファイルを選択してください';\r\n  }\r\n  \r\n  // サポートされている形式チェック\r\n  const supportedTypes = ['image/jpeg', 'image/png', 'image/webp', 'image/gif'];\r\n  if (!supportedTypes.includes(file.type)) {\r\n    return 'サポートされていない画像形式です（JPEG, PNG, WebP, GIFのみ）';\r\n  }\r\n  \r\n  // ファイルサイズチェック\r\n  if (file.size > maxSize) {\r\n    return `ファイルサイズが大きすぎます（最大: ${formatFileSize(maxSize)}）`;\r\n  }\r\n  \r\n  return null;\r\n}","import React, { useCallback, useState } from 'react';\r\nimport type { ImageFileInfo, ImageProcessingState } from '../types/color';\r\nimport { validateImageFile } from '../utils/image-processor';\r\n\r\ninterface ImageUploaderProps {\r\n  onImageLoad: (imageInfo: ImageFileInfo) => void;\r\n  processingState: ImageProcessingState;\r\n  disabled?: boolean;\r\n}\r\n\r\n/**\r\n * 画像アップロードコンポーネント\r\n */\r\nexport const ImageUploader: React.FC<ImageUploaderProps> = ({\r\n  onImageLoad,\r\n  processingState,\r\n  disabled = false\r\n}) => {\r\n  const [dragOver, setDragOver] = useState(false);\r\n\r\n  const handleFileSelect = useCallback((file: File) => {\r\n    const validationError = validateImageFile(file);\r\n    if (validationError) {\r\n      alert(validationError);\r\n      return;\r\n    }\r\n\r\n    // 画像の寸法を取得\r\n    const img = new Image();\r\n    img.onload = () => {\r\n      const imageInfo: ImageFileInfo = {\r\n        file,\r\n        url: URL.createObjectURL(file),\r\n        width: img.width,\r\n        height: img.height,\r\n        size: file.size\r\n      };\r\n      onImageLoad(imageInfo);\r\n    };\r\n    img.src = URL.createObjectURL(file);\r\n  }, [onImageLoad]);\r\n\r\n  const handleFileInput = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = event.target.files?.[0];\r\n    if (file) {\r\n      handleFileSelect(file);\r\n    }\r\n  }, [handleFileSelect]);\r\n\r\n  const handleDrop = useCallback((event: React.DragEvent) => {\r\n    event.preventDefault();\r\n    setDragOver(false);\r\n    \r\n    const file = event.dataTransfer.files[0];\r\n    if (file) {\r\n      handleFileSelect(file);\r\n    }\r\n  }, [handleFileSelect]);\r\n\r\n  const handleDragOver = useCallback((event: React.DragEvent) => {\r\n    event.preventDefault();\r\n    setDragOver(true);\r\n  }, []);\r\n\r\n  const handleDragLeave = useCallback((event: React.DragEvent) => {\r\n    event.preventDefault();\r\n    setDragOver(false);\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{\r\n      background: '#FFFFFF',\r\n      borderRadius: '0.75rem',\r\n      padding: '2rem',\r\n      boxShadow: '0 4px 6px -1px rgb(0 0 0 / 0.1)',\r\n      width: '100%'\r\n    }}>\r\n      <h3 style={{\r\n        fontSize: '1.25rem',\r\n        fontWeight: '600',\r\n        color: '#111827',\r\n        margin: '0 0 1.5rem 0'\r\n      }}>\r\n        📸 写真をアップロード\r\n      </h3>\r\n\r\n      <div\r\n        onDrop={handleDrop}\r\n        onDragOver={handleDragOver}\r\n        onDragLeave={handleDragLeave}\r\n        style={{\r\n          border: dragOver \r\n            ? '2px dashed #3B82F6' \r\n            : '2px dashed #D1D5DB',\r\n          borderRadius: '0.5rem',\r\n          padding: '3rem 1rem',\r\n          textAlign: 'center',\r\n          transition: 'all 0.2s ease',\r\n          background: dragOver ? '#F0F9FF' : '#F9FAFB',\r\n          cursor: disabled ? 'not-allowed' : 'pointer',\r\n          opacity: disabled ? 0.5 : 1\r\n        }}\r\n      >\r\n        {processingState.isProcessing ? (\r\n          <div>\r\n            <div style={{\r\n              width: '48px',\r\n              height: '48px',\r\n              border: '4px solid #E5E7EB',\r\n              borderTop: '4px solid #3B82F6',\r\n              borderRadius: '50%',\r\n              animation: 'spin 1s linear infinite',\r\n              margin: '0 auto 1rem'\r\n            }} />\r\n            <p style={{\r\n              color: '#6B7280',\r\n              fontSize: '1rem',\r\n              margin: '0 0 0.5rem 0'\r\n            }}>\r\n              処理中... {processingState.progress}%\r\n            </p>\r\n            <div style={{\r\n              width: '100%',\r\n              height: '8px',\r\n              background: '#E5E7EB',\r\n              borderRadius: '4px',\r\n              overflow: 'hidden',\r\n              margin: '0 auto',\r\n              maxWidth: '200px'\r\n            }}>\r\n              <div style={{\r\n                width: `${processingState.progress}%`,\r\n                height: '100%',\r\n                background: '#3B82F6',\r\n                transition: 'width 0.3s ease'\r\n              }} />\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div style={{\r\n              fontSize: '3rem',\r\n              marginBottom: '1rem'\r\n            }}>\r\n              📷\r\n            </div>\r\n            <p style={{\r\n              color: '#374151',\r\n              fontSize: '1.125rem',\r\n              fontWeight: '500',\r\n              margin: '0 0 0.5rem 0'\r\n            }}>\r\n              写真をドラッグ&ドロップ\r\n            </p>\r\n            <p style={{\r\n              color: '#6B7280',\r\n              fontSize: '0.875rem',\r\n              margin: '0 0 1.5rem 0'\r\n            }}>\r\n              または下のボタンから選択\r\n            </p>\r\n            \r\n            <label style={{\r\n              display: 'inline-block',\r\n              background: '#3B82F6',\r\n              color: 'white',\r\n              padding: '0.75rem 2rem',\r\n              borderRadius: '0.5rem',\r\n              fontWeight: '500',\r\n              cursor: disabled ? 'not-allowed' : 'pointer',\r\n              transition: 'background-color 0.2s ease'\r\n            }}>\r\n              ファイルを選択\r\n              <input\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={handleFileInput}\r\n                disabled={disabled}\r\n                style={{ display: 'none' }}\r\n              />\r\n            </label>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div style={{\r\n        marginTop: '1rem',\r\n        padding: '1rem',\r\n        background: '#F0F9FF',\r\n        borderRadius: '0.5rem',\r\n        border: '1px solid #BFDBFE'\r\n      }}>\r\n        <p style={{\r\n          fontSize: '0.875rem',\r\n          color: '#374151',\r\n          margin: '0',\r\n          lineHeight: '1.5'\r\n        }}>\r\n          💡 <strong>対応形式:</strong> JPEG, PNG, WebP, GIF<br />\r\n          📏 <strong>推奨サイズ:</strong> 10MB以下、1920×1080px以下\r\n        </p>\r\n      </div>\r\n\r\n      {processingState.error && (\r\n        <div style={{\r\n          marginTop: '1rem',\r\n          padding: '1rem',\r\n          background: '#FEF2F2',\r\n          borderRadius: '0.5rem',\r\n          border: '1px solid #FECACA'\r\n        }}>\r\n          <p style={{\r\n            fontSize: '0.875rem',\r\n            color: '#DC2626',\r\n            margin: '0',\r\n            fontWeight: '500'\r\n          }}>\r\n            ❌ エラー: {processingState.error}\r\n          </p>\r\n        </div>\r\n      )}\r\n\r\n      <style>\r\n        {`\r\n          @keyframes spin {\r\n            0% { transform: rotate(0deg); }\r\n            100% { transform: rotate(360deg); }\r\n          }\r\n        `}\r\n      </style>\r\n    </div>\r\n  );\r\n};","import React, { useRef, useEffect, useState } from 'react';\r\nimport type { ImageFileInfo, ColorVisionSettings } from '../types/color';\r\nimport { \r\n  loadImageToCanvas, \r\n  processImageData, \r\n  drawImageDataToCanvas, \r\n  downloadCanvasAsImage,\r\n  formatFileSize \r\n} from '../utils/image-processor';\r\n\r\ninterface ImageViewerProps {\r\n  imageInfo: ImageFileInfo | null;\r\n  colorVisionSettings: ColorVisionSettings;\r\n  onProcessingStateChange: (isProcessing: boolean, progress: number, error?: string) => void;\r\n}\r\n\r\ntype ViewMode = 'original' | 'processed' | 'split';\r\n\r\n/**\r\n * 画像表示・処理コンポーネント\r\n */\r\nexport const ImageViewer: React.FC<ImageViewerProps> = ({\r\n  imageInfo,\r\n  colorVisionSettings,\r\n  onProcessingStateChange\r\n}) => {\r\n  const originalCanvasRef = useRef<HTMLCanvasElement>(null);\r\n  const processedCanvasRef = useRef<HTMLCanvasElement>(null);\r\n  const [viewMode, setViewMode] = useState<ViewMode>('processed');\r\n  const [originalImageData, setOriginalImageData] = useState<ImageData | null>(null);\r\n  const [processedImageData, setProcessedImageData] = useState<ImageData | null>(null);\r\n\r\n  // 画像読み込み\r\n  useEffect(() => {\r\n    if (!imageInfo) {\r\n      setOriginalImageData(null);\r\n      setProcessedImageData(null);\r\n      return;\r\n    }\r\n\r\n    const loadImage = async () => {\r\n      try {\r\n        onProcessingStateChange(true, 0);\r\n        \r\n        const { imageData } = await loadImageToCanvas(imageInfo.file);\r\n        setOriginalImageData(imageData);\r\n        \r\n        // オリジナル画像をcanvasに描画\r\n        if (originalCanvasRef.current) {\r\n          drawImageDataToCanvas(originalCanvasRef.current, imageData);\r\n        }\r\n\r\n        // 画像読み込み完了時は processing状態を継続（色覚処理待ち）\r\n      } catch (error) {\r\n        onProcessingStateChange(false, 0, '画像の読み込みに失敗しました');\r\n      }\r\n    };\r\n\r\n    loadImage();\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [imageInfo]); // onProcessingStateChangeは親コンポーネントで安定化すべき\r\n\r\n  // 色覚設定変更時の再処理\r\n  useEffect(() => {\r\n    if (!originalImageData) return;\r\n\r\n    // 処理を遅延させて連続実行を防ぐ\r\n    const timeoutId = setTimeout(() => {\r\n      const processImage = async () => {\r\n        try {\r\n          onProcessingStateChange(true, 0);\r\n\r\n          const processed = await processImageData(\r\n            originalImageData,\r\n            colorVisionSettings,\r\n            (progress) => {\r\n              onProcessingStateChange(true, progress);\r\n            }\r\n          );\r\n\r\n          setProcessedImageData(processed);\r\n          \r\n          // 処理済み画像をcanvasに描画\r\n          if (processedCanvasRef.current) {\r\n            drawImageDataToCanvas(processedCanvasRef.current, processed);\r\n          }\r\n          \r\n          onProcessingStateChange(false, 100);\r\n        } catch (error) {\r\n          onProcessingStateChange(false, 0, '画像処理に失敗しました');\r\n        }\r\n      };\r\n\r\n      processImage();\r\n    }, 100); // 100ms遅延\r\n\r\n    return () => clearTimeout(timeoutId);\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [originalImageData, colorVisionSettings]); // onProcessingStateChangeは親コンポーネントで安定化すべき\r\n\r\n  const handleDownload = () => {\r\n    if (!processedCanvasRef.current || !processedImageData) return;\r\n    \r\n    const filename = `colorwise-${imageInfo?.file.name || 'processed'}.png`;\r\n    downloadCanvasAsImage(processedCanvasRef.current, filename);\r\n  };\r\n\r\n  if (!imageInfo) {\r\n    return (\r\n      <div style={{\r\n        background: '#F9FAFB',\r\n        borderRadius: '0.75rem',\r\n        padding: '3rem',\r\n        textAlign: 'center',\r\n        border: '2px dashed #D1D5DB'\r\n      }}>\r\n        <div style={{ fontSize: '3rem', marginBottom: '1rem' }}>🖼️</div>\r\n        <p style={{\r\n          color: '#6B7280',\r\n          fontSize: '1.125rem',\r\n          margin: '0'\r\n        }}>\r\n          画像を選択してください\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={{\r\n      background: '#FFFFFF',\r\n      borderRadius: '0.75rem',\r\n      padding: '1.5rem',\r\n      boxShadow: '0 4px 6px -1px rgb(0 0 0 / 0.1)',\r\n      width: '100%'\r\n    }}>\r\n      <div style={{\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        marginBottom: '1.5rem',\r\n        flexWrap: 'wrap',\r\n        gap: '1rem'\r\n      }}>\r\n        <div>\r\n          <h3 style={{\r\n            fontSize: '1.25rem',\r\n            fontWeight: '600',\r\n            color: '#111827',\r\n            margin: '0 0 0.5rem 0'\r\n          }}>\r\n            🖼️ 画像プレビュー\r\n          </h3>\r\n          <p style={{\r\n            fontSize: '0.875rem',\r\n            color: '#6B7280',\r\n            margin: '0'\r\n          }}>\r\n            {imageInfo.file.name} ({imageInfo.width}×{imageInfo.height}, {formatFileSize(imageInfo.size)})\r\n          </p>\r\n        </div>\r\n        \r\n        <div style={{ display: 'flex', gap: '0.5rem', alignItems: 'center' }}>\r\n          <select\r\n            value={viewMode}\r\n            onChange={(e) => setViewMode(e.target.value as ViewMode)}\r\n            style={{\r\n              padding: '0.5rem',\r\n              border: '1px solid #D1D5DB',\r\n              borderRadius: '0.375rem',\r\n              fontSize: '0.875rem'\r\n            }}\r\n          >\r\n            <option value=\"original\">元画像</option>\r\n            <option value=\"processed\">変換済み</option>\r\n            <option value=\"split\">分割表示</option>\r\n          </select>\r\n          \r\n          <button\r\n            onClick={handleDownload}\r\n            disabled={!processedImageData}\r\n            style={{\r\n              background: processedImageData ? '#10B981' : '#D1D5DB',\r\n              color: 'white',\r\n              padding: '0.5rem 1rem',\r\n              borderRadius: '0.375rem',\r\n              fontWeight: '500',\r\n              border: 'none',\r\n              cursor: processedImageData ? 'pointer' : 'not-allowed',\r\n              fontSize: '0.875rem'\r\n            }}\r\n          >\r\n            💾 ダウンロード\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{\r\n        borderRadius: '0.5rem',\r\n        overflow: 'auto',\r\n        background: '#F3F4F6',\r\n        position: 'relative',\r\n        maxHeight: '80vh'\r\n      }}>\r\n        {viewMode === 'split' && (\r\n          <div style={{ display: 'flex', gap: '4px', justifyContent: 'center' }}>\r\n            <div style={{ position: 'relative' }}>\r\n              <canvas\r\n                ref={originalCanvasRef}\r\n                style={{\r\n                  maxWidth: '100%',\r\n                  height: 'auto',\r\n                  display: 'block'\r\n                }}\r\n              />\r\n              <div style={{\r\n                position: 'absolute',\r\n                top: '0.5rem',\r\n                left: '0.5rem',\r\n                background: 'rgba(0,0,0,0.7)',\r\n                color: 'white',\r\n                padding: '0.25rem 0.5rem',\r\n                borderRadius: '0.25rem',\r\n                fontSize: '0.75rem',\r\n                fontWeight: '500'\r\n              }}>\r\n                元画像\r\n              </div>\r\n            </div>\r\n            <div style={{ position: 'relative' }}>\r\n              <canvas\r\n                ref={processedCanvasRef}\r\n                style={{\r\n                  maxWidth: '100%',\r\n                  height: 'auto',\r\n                  display: 'block'\r\n                }}\r\n              />\r\n              <div style={{\r\n                position: 'absolute',\r\n                top: '0.5rem',\r\n                left: '0.5rem',\r\n                background: 'rgba(0,0,0,0.7)',\r\n                color: 'white',\r\n                padding: '0.25rem 0.5rem',\r\n                borderRadius: '0.25rem',\r\n                fontSize: '0.75rem',\r\n                fontWeight: '500'\r\n              }}>\r\n                変換済み\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        {viewMode === 'original' && (\r\n          <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n            <canvas\r\n              ref={originalCanvasRef}\r\n              style={{\r\n                maxWidth: '100%',\r\n                height: 'auto',\r\n                display: 'block'\r\n              }}\r\n            />\r\n          </div>\r\n        )}\r\n        \r\n        {viewMode === 'processed' && (\r\n          <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n            <canvas\r\n              ref={processedCanvasRef}\r\n              style={{\r\n                maxWidth: '100%',\r\n                height: 'auto',\r\n                display: 'block'\r\n              }}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div style={{\r\n        marginTop: '1rem',\r\n        padding: '1rem',\r\n        background: '#F0F9FF',\r\n        borderRadius: '0.5rem',\r\n        border: '1px solid #BFDBFE'\r\n      }}>\r\n        <p style={{\r\n          fontSize: '0.875rem',\r\n          color: '#374151',\r\n          margin: '0',\r\n          lineHeight: '1.5'\r\n        }}>\r\n          🔄 <strong>リアルタイム処理:</strong> 左のスライダー調整が即座に反映されます<br />\r\n          💾 <strong>ダウンロード:</strong> 処理結果をPNG形式で保存できます\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};","import React, { useRef, useEffect, useState, useCallback } from 'react';\r\nimport type { CameraConfig, ColorVisionSettings } from '../types/color';\r\nimport { processImageData, drawImageDataToCanvas, downloadCanvasAsImage } from '../utils/image-processor';\r\n\r\ninterface CameraCaptureProps {\r\n  colorVisionSettings: ColorVisionSettings;\r\n  onProcessingStateChange: (isProcessing: boolean, progress: number, error?: string) => void;\r\n}\r\n\r\n/**\r\n * カメラキャプチャ・リアルタイム処理コンポーネント\r\n */\r\nexport const CameraCapture: React.FC<CameraCaptureProps> = ({\r\n  colorVisionSettings,\r\n  onProcessingStateChange\r\n}) => {\r\n  const videoRef = useRef<HTMLVideoElement>(null);\r\n  const originalCanvasRef = useRef<HTMLCanvasElement>(null);\r\n  const processedCanvasRef = useRef<HTMLCanvasElement>(null);\r\n  \r\n  const [cameraConfig, setCameraConfig] = useState<CameraConfig>({\r\n    isActive: false,\r\n    facingMode: 'environment',\r\n    resolution: { width: 1280, height: 720 }\r\n  });\r\n  \r\n  const [devices, setDevices] = useState<MediaDeviceInfo[]>([]);\r\n  const [stream, setStream] = useState<MediaStream | null>(null);\r\n  const [isProcessingFrame, setIsProcessingFrame] = useState(false);\r\n  const [viewMode, setViewMode] = useState<'original' | 'processed' | 'split'>('processed');\r\n  \r\n  // カメラデバイス一覧を取得\r\n  useEffect(() => {\r\n    const getDevices = async () => {\r\n      try {\r\n        const deviceList = await navigator.mediaDevices.enumerateDevices();\r\n        const videoDevices = deviceList.filter(device => device.kind === 'videoinput');\r\n        setDevices(videoDevices);\r\n      } catch (error) {\r\n        console.error('デバイス取得エラー:', error);\r\n      }\r\n    };\r\n    \r\n    getDevices();\r\n  }, []);\r\n\r\n  // カメラストリーム開始/停止\r\n  const toggleCamera = useCallback(async () => {\r\n    if (cameraConfig.isActive && stream) {\r\n      // カメラ停止\r\n      stream.getTracks().forEach(track => track.stop());\r\n      setStream(null);\r\n      setCameraConfig(prev => ({ ...prev, isActive: false }));\r\n      return;\r\n    }\r\n\r\n    // getUserMedia対応チェック\r\n    if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\r\n      onProcessingStateChange(false, 0, 'お使いのブラウザはカメラアクセスに対応していません');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      onProcessingStateChange(true, 0, '');\r\n\r\n      // シンプルな設定でまず試す\r\n      const constraints = {\r\n        video: cameraConfig.deviceId\r\n          ? { deviceId: { exact: cameraConfig.deviceId } }\r\n          : { facingMode: cameraConfig.facingMode }\r\n      };\r\n\r\n      const mediaStream = await navigator.mediaDevices.getUserMedia(constraints);\r\n\r\n      setStream(mediaStream);\r\n      setCameraConfig(prev => ({ ...prev, isActive: true }));\r\n\r\n      if (videoRef.current) {\r\n        videoRef.current.srcObject = mediaStream;\r\n\r\n        // video要素の準備完了を待つ\r\n        videoRef.current.onloadedmetadata = () => {\r\n          onProcessingStateChange(false, 100, '');\r\n        };\r\n      }\r\n    } catch (error) {\r\n      let errorMessage = 'カメラにアクセスできませんでした';\r\n      if (error instanceof Error) {\r\n        if (error.name === 'NotAllowedError') {\r\n          errorMessage = 'カメラアクセスが拒否されました。ブラウザの設定を確認してください';\r\n        } else if (error.name === 'NotFoundError') {\r\n          errorMessage = 'カメラが見つかりませんでした';\r\n        } else if (error.name === 'NotReadableError') {\r\n          errorMessage = 'カメラが他のアプリケーションで使用中です';\r\n        } else {\r\n          errorMessage = `カメラエラー: ${error.message}`;\r\n        }\r\n      }\r\n      \r\n      onProcessingStateChange(false, 0, errorMessage);\r\n    }\r\n  }, [cameraConfig, stream, onProcessingStateChange]);\r\n\r\n  // 静止画キャプチャ・処理\r\n  const captureAndProcess = useCallback(async () => {\r\n    if (!videoRef.current || !originalCanvasRef.current || !processedCanvasRef.current) return;\r\n    if (isProcessingFrame) return;\r\n    \r\n    const video = videoRef.current;\r\n    const originalCanvas = originalCanvasRef.current;\r\n    const processedCanvas = processedCanvasRef.current;\r\n    \r\n    // ビデオフレームをcanvasに描画\r\n    originalCanvas.width = video.videoWidth;\r\n    originalCanvas.height = video.videoHeight;\r\n    processedCanvas.width = video.videoWidth;\r\n    processedCanvas.height = video.videoHeight;\r\n    \r\n    const ctx = originalCanvas.getContext('2d');\r\n    if (!ctx) return;\r\n    \r\n    ctx.drawImage(video, 0, 0);\r\n    const imageData = ctx.getImageData(0, 0, originalCanvas.width, originalCanvas.height);\r\n    \r\n    setIsProcessingFrame(true);\r\n    onProcessingStateChange(true, 50, '画像を処理中...');\r\n    \r\n    try {\r\n      // 色変換処理を適用\r\n      const processedImageData = await processImageData(imageData, colorVisionSettings);\r\n      drawImageDataToCanvas(processedCanvas, processedImageData);\r\n      onProcessingStateChange(false, 100, '処理完了');\r\n    } catch (error) {\r\n      console.error('フレーム処理エラー:', error);\r\n      onProcessingStateChange(false, 0, '処理中にエラーが発生しました');\r\n    } finally {\r\n      setIsProcessingFrame(false);\r\n    }\r\n  }, [colorVisionSettings, isProcessingFrame, onProcessingStateChange]);\r\n\r\n  // キャプチャ機能\r\n  const capturePhoto = useCallback(() => {\r\n    if (!processedCanvasRef.current) return;\r\n    \r\n    const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\r\n    const filename = `colorwise-capture-${timestamp}.png`;\r\n    downloadCanvasAsImage(processedCanvasRef.current, filename);\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{\r\n      background: '#FFFFFF',\r\n      borderRadius: '0.75rem',\r\n      padding: '1.5rem',\r\n      boxShadow: '0 4px 6px -1px rgb(0 0 0 / 0.1)',\r\n      width: '100%'\r\n    }}>\r\n      <div style={{\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        marginBottom: '1.5rem',\r\n        flexWrap: 'wrap',\r\n        gap: '1rem'\r\n      }}>\r\n        <h3 style={{\r\n          fontSize: '1.25rem',\r\n          fontWeight: '600',\r\n          color: '#111827',\r\n          margin: '0'\r\n        }}>\r\n          📷 カメラキャプチャ\r\n        </h3>\r\n        \r\n        <div style={{ display: 'flex', gap: '0.5rem', alignItems: 'center' }}>\r\n          {devices.length > 1 && (\r\n            <select\r\n              value={cameraConfig.deviceId || ''}\r\n              onChange={(e) => setCameraConfig(prev => ({ ...prev, deviceId: e.target.value }))}\r\n              disabled={cameraConfig.isActive}\r\n              style={{\r\n                padding: '0.5rem',\r\n                border: '1px solid #D1D5DB',\r\n                borderRadius: '0.375rem',\r\n                fontSize: '0.875rem'\r\n              }}\r\n            >\r\n              <option value=\"\">デフォルト</option>\r\n              {devices.map(device => (\r\n                <option key={device.deviceId} value={device.deviceId}>\r\n                  {device.label || `カメラ ${device.deviceId.slice(0, 8)}`}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          )}\r\n          \r\n          <select\r\n            value={viewMode}\r\n            onChange={(e) => setViewMode(e.target.value as 'original' | 'processed' | 'split')}\r\n            style={{\r\n              padding: '0.5rem',\r\n              border: '1px solid #D1D5DB',\r\n              borderRadius: '0.375rem',\r\n              fontSize: '0.875rem'\r\n            }}\r\n          >\r\n            <option value=\"original\">元画像</option>\r\n            <option value=\"processed\">変換済み</option>\r\n            <option value=\"split\">分割表示</option>\r\n          </select>\r\n          \r\n          <button\r\n            onClick={toggleCamera}\r\n            style={{\r\n              background: cameraConfig.isActive ? '#DC2626' : '#10B981',\r\n              color: 'white',\r\n              padding: '0.5rem 1rem',\r\n              borderRadius: '0.375rem',\r\n              fontWeight: '500',\r\n              border: 'none',\r\n              cursor: 'pointer',\r\n              fontSize: '0.875rem'\r\n            }}\r\n          >\r\n            {cameraConfig.isActive ? '⏹️ 停止' : '📹 カメラを起動'}\r\n          </button>\r\n          \r\n          {cameraConfig.isActive && (\r\n            <>\r\n              <button\r\n                onClick={captureAndProcess}\r\n                disabled={isProcessingFrame}\r\n                style={{\r\n                  background: isProcessingFrame ? '#9CA3AF' : '#059669',\r\n                  color: 'white',\r\n                  padding: '0.5rem 1rem',\r\n                  borderRadius: '0.375rem',\r\n                  fontWeight: '500',\r\n                  border: 'none',\r\n                  cursor: isProcessingFrame ? 'not-allowed' : 'pointer',\r\n                  fontSize: '0.875rem'\r\n                }}\r\n              >\r\n                {isProcessingFrame ? '🔄 処理中...' : '📸 撮影'}\r\n              </button>\r\n              \r\n              <button\r\n                onClick={capturePhoto}\r\n                disabled={!processedCanvasRef.current}\r\n                style={{\r\n                  background: '#3B82F6',\r\n                  color: 'white',\r\n                  padding: '0.5rem 1rem',\r\n                  borderRadius: '0.375rem',\r\n                  fontWeight: '500',\r\n                  border: 'none',\r\n                  cursor: 'pointer',\r\n                  fontSize: '0.875rem'\r\n                }}\r\n              >\r\n                💾 保存\r\n              </button>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{\r\n        borderRadius: '0.5rem',\r\n        overflow: 'auto',\r\n        background: '#F3F4F6',\r\n        position: 'relative',\r\n        minHeight: '400px',\r\n        maxHeight: '80vh'\r\n      }}>\r\n        {!cameraConfig.isActive ? (\r\n          <div style={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            height: '300px',\r\n            flexDirection: 'column',\r\n            gap: '1rem'\r\n          }}>\r\n            <div style={{ fontSize: '3rem' }}>📹</div>\r\n            <p style={{\r\n              color: '#6B7280',\r\n              fontSize: '1.125rem',\r\n              margin: '0'\r\n            }}>\r\n              カメラを起動してください\r\n            </p>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <video\r\n              ref={videoRef}\r\n              autoPlay\r\n              playsInline\r\n              muted\r\n              style={{\r\n                display: 'none'\r\n              }}\r\n            />\r\n            \r\n            {viewMode === 'split' && (\r\n              <div style={{ display: 'flex', gap: '4px', justifyContent: 'center' }}>\r\n                <div style={{ position: 'relative' }}>\r\n                  <canvas\r\n                    ref={originalCanvasRef}\r\n                    style={{\r\n                      maxWidth: '100%',\r\n                      height: 'auto',\r\n                      display: 'block'\r\n                    }}\r\n                  />\r\n                  <div style={{\r\n                    position: 'absolute',\r\n                    top: '0.5rem',\r\n                    left: '0.5rem',\r\n                    background: 'rgba(0,0,0,0.7)',\r\n                    color: 'white',\r\n                    padding: '0.25rem 0.5rem',\r\n                    borderRadius: '0.25rem',\r\n                    fontSize: '0.75rem',\r\n                    fontWeight: '500'\r\n                  }}>\r\n                    オリジナル\r\n                  </div>\r\n                </div>\r\n                <div style={{ position: 'relative' }}>\r\n                  <canvas\r\n                    ref={processedCanvasRef}\r\n                    style={{\r\n                      maxWidth: '100%',\r\n                      height: 'auto',\r\n                      display: 'block'\r\n                    }}\r\n                  />\r\n                  <div style={{\r\n                    position: 'absolute',\r\n                    top: '0.5rem',\r\n                    left: '0.5rem',\r\n                    background: 'rgba(0,0,0,0.7)',\r\n                    color: 'white',\r\n                    padding: '0.25rem 0.5rem',\r\n                    borderRadius: '0.25rem',\r\n                    fontSize: '0.75rem',\r\n                    fontWeight: '500'\r\n                  }}>\r\n                    処理後\r\n                  </div>\r\n                  {isProcessingFrame && (\r\n                    <div style={{\r\n                      position: 'absolute',\r\n                      top: '0.5rem',\r\n                      right: '0.5rem',\r\n                      background: 'rgba(0,0,0,0.7)',\r\n                      color: 'white',\r\n                      padding: '0.25rem 0.5rem',\r\n                      borderRadius: '0.25rem',\r\n                      fontSize: '0.75rem'\r\n                    }}>\r\n                      処理中...\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            )}\r\n            \r\n            {viewMode === 'original' && (\r\n              <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                <canvas\r\n                  ref={originalCanvasRef}\r\n                  style={{\r\n                    maxWidth: '100%',\r\n                    height: 'auto',\r\n                    display: 'block'\r\n                  }}\r\n                />\r\n              </div>\r\n            )}\r\n            \r\n            {viewMode === 'processed' && (\r\n              <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                <canvas\r\n                  ref={processedCanvasRef}\r\n                  style={{\r\n                    maxWidth: '100%',\r\n                    height: 'auto',\r\n                    display: 'block'\r\n                  }}\r\n                />\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      <div style={{\r\n        marginTop: '1rem',\r\n        padding: '1rem',\r\n        background: '#F0F9FF',\r\n        borderRadius: '0.5rem',\r\n        border: '1px solid #BFDBFE'\r\n      }}>\r\n        <p style={{\r\n          fontSize: '0.875rem',\r\n          color: '#374151',\r\n          margin: '0 0 0.5rem 0',\r\n          lineHeight: '1.5'\r\n        }}>\r\n          📸 <strong>撮影:</strong> 「撮影」ボタンで静止画をキャプチャし、色覚変換を適用<br />\r\n          💾 <strong>保存:</strong> 処理後の画像をPNG形式でダウンロードできます\r\n        </p>\r\n        <p style={{\r\n          fontSize: '0.75rem',\r\n          color: '#6B7280',\r\n          margin: '0',\r\n          lineHeight: '1.4',\r\n          fontStyle: 'italic'\r\n        }}>\r\n          ⚠️ <strong>カメラアクセスのヒント:</strong><br />\r\n          • ブラウザでカメラ許可が必要です<br />\r\n          • 他のアプリでカメラを使用中でないか確認してください<br />\r\n          • HTTPSでない場合、一部ブラウザで制限される場合があります\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\n\r\ninterface AboutModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  activeSection: 'about' | 'credits' | 'privacy' | 'disclaimer';\r\n}\r\n\r\nexport const AboutModal: React.FC<AboutModalProps> = ({ isOpen, onClose, activeSection }) => {\r\n  if (!isOpen) return null;\r\n\r\n  const renderContent = () => {\r\n    switch (activeSection) {\r\n      case 'about':\r\n        return (\r\n          <div>\r\n            <h2 style={{ color: '#111827', marginBottom: '1rem' }}>このアプリについて</h2>\r\n            <div style={{ lineHeight: '1.6', color: '#374151' }}>\r\n              <p><strong>ColorWise（カラーワイズ）</strong>は、色覚の多様性に配慮した色表示支援ツールです。</p>\r\n              \r\n              <h3 style={{ marginTop: '1.5rem', marginBottom: '0.5rem' }}>🎯 目的</h3>\r\n              <ul style={{ paddingLeft: '1.5rem' }}>\r\n                <li>色覚の違いによる見え方の体験・理解促進</li>\r\n                <li>デジタルコンテンツの色調整支援</li>\r\n                <li>より包括的なデザイン環境の実現</li>\r\n              </ul>\r\n\r\n              <h3 style={{ marginTop: '1.5rem', marginBottom: '0.5rem' }}>⚠️ 重要な注意</h3>\r\n              <ul style={{ paddingLeft: '1.5rem' }}>\r\n                <li>本アプリは医療機器ではありません</li>\r\n                <li>色覚異常の診断・治療を目的としていません</li>\r\n                <li>医師の診断に代わるものではありません</li>\r\n              </ul>\r\n\r\n              <h3 style={{ marginTop: '1.5rem', marginBottom: '0.5rem' }}>🔒 プライバシー</h3>\r\n              <ul style={{ paddingLeft: '1.5rem' }}>\r\n                <li>すべての処理は端末内で完結</li>\r\n                <li>画像データの外部送信なし</li>\r\n                <li>個人情報の収集なし</li>\r\n              </ul>\r\n\r\n              <div style={{\r\n                marginTop: '2rem',\r\n                paddingTop: '1rem',\r\n                borderTop: '1px solid #E5E7EB',\r\n                fontSize: '0.75rem',\r\n                color: '#6B7280'\r\n              }}>\r\n                <p style={{ margin: 0 }}>\r\n                  <strong>Version:</strong> {import.meta.env.VITE_APP_VERSION || '3.0.1'}\r\n                  {import.meta.env.VITE_BUILD_TIME && (\r\n                    <span> (Built: {new Date(import.meta.env.VITE_BUILD_TIME).toLocaleString('ja-JP')})</span>\r\n                  )}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      \r\n      case 'credits':\r\n        return (\r\n          <div>\r\n            <h2 style={{ color: '#111827', marginBottom: '1rem' }}>クレジット・謝辞</h2>\r\n            <div style={{ lineHeight: '1.6', color: '#374151' }}>\r\n              <h3 style={{ marginTop: '1.5rem', marginBottom: '0.5rem' }}>🎓 学術的基盤</h3>\r\n              <p>本アプリの色覚シミュレーション機能は、以下の研究成果を参考に実装されています：</p>\r\n              <div style={{ \r\n                background: '#F9FAFB', \r\n                padding: '1rem', \r\n                borderRadius: '0.5rem', \r\n                border: '1px solid #E5E7EB',\r\n                marginTop: '0.5rem'\r\n              }}>\r\n                <p style={{ fontWeight: 'bold', margin: '0 0 0.5rem 0' }}>\r\n                  Machado, G.M., Oliveira, M.M., and Fernandes, L.A.F. (2009)\r\n                </p>\r\n                <p style={{ fontStyle: 'italic', margin: '0 0 0.5rem 0' }}>\r\n                  \"A Physiologically-based Model for Simulation of Color Vision Deficiency\"\r\n                </p>\r\n                <p style={{ fontSize: '0.875rem', margin: '0' }}>\r\n                  IEEE Transactions on Visualization and Computer Graphics, Vol.15, No.6, pp.1291-1298\r\n                </p>\r\n              </div>\r\n              \r\n              <h3 style={{ marginTop: '1.5rem', marginBottom: '0.5rem' }}>🛠️ 技術スタック</h3>\r\n              <ul style={{ paddingLeft: '1.5rem' }}>\r\n                <li>React 18 + TypeScript</li>\r\n                <li>Vite (ビルドツール)</li>\r\n                <li>PWA (Service Worker + Manifest)</li>\r\n                <li>Canvas API (画像処理)</li>\r\n              </ul>\r\n\r\n              <h3 style={{ marginTop: '1.5rem', marginBottom: '0.5rem' }}>🙏 謝辞</h3>\r\n              <p>\r\n                色覚の多様性に関する理解促進と、より包括的な技術環境の構築に貢献してくださる\r\n                研究者・開発者・コミュニティの皆様に深く感謝いたします。\r\n              </p>\r\n\r\n              <h3 style={{ marginTop: '1.5rem', marginBottom: '0.5rem' }}>☕ 開発を支援</h3>\r\n              <p style={{ marginBottom: '1rem' }}>\r\n                このアプリが役に立ちましたら、開発継続のためのご支援をいただけると大変嬉しいです（完全任意です）。\r\n              </p>\r\n              <div style={{ textAlign: 'center' }}>\r\n                <a\r\n                  href=\"https://github.com/sponsors\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  style={{\r\n                    display: 'inline-block',\r\n                    background: '#EA4AAA',\r\n                    color: 'white',\r\n                    padding: '0.75rem 1.5rem',\r\n                    borderRadius: '0.5rem',\r\n                    textDecoration: 'none',\r\n                    fontWeight: '500',\r\n                    transition: 'background 0.2s'\r\n                  }}\r\n                >\r\n                  💝 GitHub Sponsors で支援\r\n                </a>\r\n              </div>\r\n              <p style={{ \r\n                fontSize: '0.75rem', \r\n                color: '#6B7280', \r\n                textAlign: 'center', \r\n                margin: '0.5rem 0 0 0' \r\n              }}>\r\n                ※ 機能制限はありません。すべて任意のサポートです。\r\n              </p>\r\n            </div>\r\n          </div>\r\n        );\r\n      \r\n      case 'privacy':\r\n        return (\r\n          <div>\r\n            <h2 style={{ color: '#111827', marginBottom: '1rem' }}>プライバシーポリシー</h2>\r\n            <div style={{ lineHeight: '1.6', color: '#374151' }}>\r\n              <h3 style={{ marginTop: '1.5rem', marginBottom: '0.5rem' }}>🔒 データ収集について</h3>\r\n              <p><strong>本アプリは以下のデータを一切収集しません：</strong></p>\r\n              <ul style={{ paddingLeft: '1.5rem' }}>\r\n                <li>個人識別情報</li>\r\n                <li>画像・写真データ</li>\r\n                <li>位置情報</li>\r\n                <li>閲覧履歴</li>\r\n              </ul>\r\n\r\n              <h3 style={{ marginTop: '1.5rem', marginBottom: '0.5rem' }}>💾 ローカルデータ</h3>\r\n              <ul style={{ paddingLeft: '1.5rem' }}>\r\n                <li>設定情報のみをブラウザ内に保存</li>\r\n                <li>外部サーバーへの送信なし</li>\r\n                <li>ブラウザ設定から削除可能</li>\r\n              </ul>\r\n\r\n              <h3 style={{ marginTop: '1.5rem', marginBottom: '0.5rem' }}>📷 カメラ機能</h3>\r\n              <ul style={{ paddingLeft: '1.5rem' }}>\r\n                <li>すべての処理が端末内で完結</li>\r\n                <li>撮影データの外部送信なし</li>\r\n                <li>アプリ終了時に自動削除</li>\r\n              </ul>\r\n\r\n              <p style={{ \r\n                background: '#EFF6FF', \r\n                padding: '1rem', \r\n                borderRadius: '0.5rem',\r\n                border: '1px solid #DBEAFE',\r\n                marginTop: '1rem'\r\n              }}>\r\n                詳細は <a href=\"/PRIVACY.md\" target=\"_blank\" rel=\"noopener noreferrer\" style={{ color: '#3B82F6' }}>\r\n                  完全版プライバシーポリシー\r\n                </a> をご確認ください。\r\n              </p>\r\n            </div>\r\n          </div>\r\n        );\r\n      \r\n      case 'disclaimer':\r\n        return (\r\n          <div>\r\n            <h2 style={{ color: '#111827', marginBottom: '1rem' }}>免責事項</h2>\r\n            <div style={{ lineHeight: '1.6', color: '#374151' }}>\r\n              <div style={{ \r\n                background: '#FEF3C7', \r\n                padding: '1rem', \r\n                borderRadius: '0.5rem',\r\n                border: '1px solid #FCD34D',\r\n                marginBottom: '1rem'\r\n              }}>\r\n                <p style={{ margin: 0, fontWeight: 'bold' }}>\r\n                  ⚠️ 重要：本アプリケーションは医療機器ではありません\r\n                </p>\r\n              </div>\r\n\r\n              <h3 style={{ marginTop: '1.5rem', marginBottom: '0.5rem' }}>❌ 本アプリは以下ではありません</h3>\r\n              <ul style={{ paddingLeft: '1.5rem' }}>\r\n                <li>色覚異常の診断ツール</li>\r\n                <li>治療を目的とした製品</li>\r\n                <li>医師による診断・治療の代替手段</li>\r\n              </ul>\r\n\r\n              <h3 style={{ marginTop: '1.5rem', marginBottom: '0.5rem' }}>✅ 本アプリの目的</h3>\r\n              <ul style={{ paddingLeft: '1.5rem' }}>\r\n                <li>色覚の違いによる見え方の体験・理解促進</li>\r\n                <li>デジタルコンテンツの色調整支援</li>\r\n                <li>アクセシビリティ向上のための支援</li>\r\n              </ul>\r\n\r\n              <h3 style={{ marginTop: '1.5rem', marginBottom: '0.5rem' }}>🏥 医療相談の推奨</h3>\r\n              <p>色覚に関する疑問や不安がある場合は、必ず専門の眼科医師にご相談ください。</p>\r\n\r\n              <p style={{ \r\n                background: '#FEF2F2', \r\n                padding: '1rem', \r\n                borderRadius: '0.5rem',\r\n                border: '1px solid #FECACA',\r\n                marginTop: '1rem'\r\n              }}>\r\n                詳細は <a href=\"/DISCLAIMER.md\" target=\"_blank\" rel=\"noopener noreferrer\" style={{ color: '#3B82F6' }}>\r\n                  完全版免責事項\r\n                </a> をご確認ください。\r\n              </p>\r\n            </div>\r\n          </div>\r\n        );\r\n      \r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{\r\n      position: 'fixed',\r\n      top: 0,\r\n      left: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      zIndex: 1000,\r\n      padding: '1rem'\r\n    }}>\r\n      <div style={{\r\n        backgroundColor: 'white',\r\n        borderRadius: '0.75rem',\r\n        padding: '2rem',\r\n        maxWidth: '600px',\r\n        maxHeight: '80vh',\r\n        overflow: 'auto',\r\n        position: 'relative',\r\n        boxShadow: '0 20px 25px -5px rgb(0 0 0 / 0.1), 0 10px 10px -5px rgb(0 0 0 / 0.04)'\r\n      }}>\r\n        <button\r\n          onClick={onClose}\r\n          style={{\r\n            position: 'absolute',\r\n            top: '1rem',\r\n            right: '1rem',\r\n            background: 'none',\r\n            border: 'none',\r\n            fontSize: '1.5rem',\r\n            cursor: 'pointer',\r\n            color: '#6B7280',\r\n            width: '2rem',\r\n            height: '2rem',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center'\r\n          }}\r\n        >\r\n          ×\r\n        </button>\r\n        \r\n        {renderContent()}\r\n      </div>\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\n\r\ninterface ColorWheelIconProps {\r\n  size?: 'small' | 'medium' | 'large' | number;\r\n  className?: string;\r\n  style?: React.CSSProperties;\r\n}\r\n\r\n/**\r\n * 12色の円環アイコンコンポーネント\r\n */\r\nexport const ColorWheelIcon: React.FC<ColorWheelIconProps> = ({ \r\n  size = 'medium', \r\n  className = '', \r\n  style = {} \r\n}) => {\r\n  const getSize = () => {\r\n    if (typeof size === 'number') return size;\r\n    switch (size) {\r\n      case 'small': return 24;\r\n      case 'medium': return 32;\r\n      case 'large': return 48;\r\n      default: return 32;\r\n    }\r\n  };\r\n\r\n  const iconSize = getSize();\r\n\r\n  return (\r\n    <svg\r\n      width={iconSize}\r\n      height={iconSize}\r\n      viewBox=\"0 0 512 512\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      className={className}\r\n      style={{\r\n        ...style,\r\n        shapeRendering: 'geometricPrecision',\r\n        imageRendering: 'optimizeQuality' as React.CSSProperties['imageRendering'],\r\n        filter: 'drop-shadow(0 0 8px rgba(255, 255, 255, 0.4))'\r\n      }}\r\n    >\r\n      <defs>\r\n        {/* フレア効果フィルター */}\r\n        <filter id=\"flare\" x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\r\n          <feGaussianBlur stdDeviation=\"2\" result=\"coloredBlur\"/>\r\n          <feMerge>\r\n            <feMergeNode in=\"coloredBlur\"/>\r\n            <feMergeNode in=\"SourceGraphic\"/>\r\n          </feMerge>\r\n        </filter>\r\n        \r\n        {/* 各色のグラデーション定義 */}\r\n        <radialGradient id=\"purpleGlow\">\r\n          <stop offset=\"0%\" stopColor=\"hsl(270, 85%, 75%)\" stopOpacity=\"1\"/>\r\n          <stop offset=\"70%\" stopColor=\"hsl(270, 85%, 60%)\" stopOpacity=\"1\"/>\r\n          <stop offset=\"100%\" stopColor=\"hsl(270, 85%, 50%)\" stopOpacity=\"1\"/>\r\n        </radialGradient>\r\n        <radialGradient id=\"magentaGlow\">\r\n          <stop offset=\"0%\" stopColor=\"hsl(300, 85%, 75%)\" stopOpacity=\"1\"/>\r\n          <stop offset=\"70%\" stopColor=\"hsl(300, 85%, 60%)\" stopOpacity=\"1\"/>\r\n          <stop offset=\"100%\" stopColor=\"hsl(300, 85%, 50%)\" stopOpacity=\"1\"/>\r\n        </radialGradient>\r\n        <radialGradient id=\"pinkGlow\">\r\n          <stop offset=\"0%\" stopColor=\"hsl(330, 85%, 75%)\" stopOpacity=\"1\"/>\r\n          <stop offset=\"70%\" stopColor=\"hsl(330, 85%, 60%)\" stopOpacity=\"1\"/>\r\n          <stop offset=\"100%\" stopColor=\"hsl(330, 85%, 50%)\" stopOpacity=\"1\"/>\r\n        </radialGradient>\r\n        <radialGradient id=\"redGlow\">\r\n          <stop offset=\"0%\" stopColor=\"hsl(0, 85%, 75%)\" stopOpacity=\"1\"/>\r\n          <stop offset=\"70%\" stopColor=\"hsl(0, 85%, 60%)\" stopOpacity=\"1\"/>\r\n          <stop offset=\"100%\" stopColor=\"hsl(0, 85%, 50%)\" stopOpacity=\"1\"/>\r\n        </radialGradient>\r\n        <radialGradient id=\"orangeGlow\">\r\n          <stop offset=\"0%\" stopColor=\"hsl(30, 85%, 75%)\" stopOpacity=\"1\"/>\r\n          <stop offset=\"70%\" stopColor=\"hsl(30, 85%, 60%)\" stopOpacity=\"1\"/>\r\n          <stop offset=\"100%\" stopColor=\"hsl(30, 85%, 50%)\" stopOpacity=\"1\"/>\r\n        </radialGradient>\r\n        <radialGradient id=\"yellowGlow\">\r\n          <stop offset=\"0%\" stopColor=\"hsl(60, 85%, 75%)\" stopOpacity=\"1\"/>\r\n          <stop offset=\"70%\" stopColor=\"hsl(60, 85%, 60%)\" stopOpacity=\"1\"/>\r\n          <stop offset=\"100%\" stopColor=\"hsl(60, 85%, 50%)\" stopOpacity=\"1\"/>\r\n        </radialGradient>\r\n        <radialGradient id=\"yellowGreenGlow\">\r\n          <stop offset=\"0%\" stopColor=\"hsl(90, 85%, 75%)\" stopOpacity=\"1\"/>\r\n          <stop offset=\"70%\" stopColor=\"hsl(90, 85%, 60%)\" stopOpacity=\"1\"/>\r\n          <stop offset=\"100%\" stopColor=\"hsl(90, 85%, 50%)\" stopOpacity=\"1\"/>\r\n        </radialGradient>\r\n        <radialGradient id=\"greenGlow\">\r\n          <stop offset=\"0%\" stopColor=\"hsl(120, 85%, 75%)\" stopOpacity=\"1\"/>\r\n          <stop offset=\"70%\" stopColor=\"hsl(120, 85%, 60%)\" stopOpacity=\"1\"/>\r\n          <stop offset=\"100%\" stopColor=\"hsl(120, 85%, 50%)\" stopOpacity=\"1\"/>\r\n        </radialGradient>\r\n        <radialGradient id=\"blueGreenGlow\">\r\n          <stop offset=\"0%\" stopColor=\"hsl(150, 85%, 75%)\" stopOpacity=\"1\"/>\r\n          <stop offset=\"70%\" stopColor=\"hsl(150, 85%, 60%)\" stopOpacity=\"1\"/>\r\n          <stop offset=\"100%\" stopColor=\"hsl(150, 85%, 50%)\" stopOpacity=\"1\"/>\r\n        </radialGradient>\r\n        <radialGradient id=\"cyanGlow\">\r\n          <stop offset=\"0%\" stopColor=\"hsl(180, 85%, 75%)\" stopOpacity=\"1\"/>\r\n          <stop offset=\"70%\" stopColor=\"hsl(180, 85%, 60%)\" stopOpacity=\"1\"/>\r\n          <stop offset=\"100%\" stopColor=\"hsl(180, 85%, 50%)\" stopOpacity=\"1\"/>\r\n        </radialGradient>\r\n        <radialGradient id=\"lightBlueGlow\">\r\n          <stop offset=\"0%\" stopColor=\"hsl(210, 85%, 75%)\" stopOpacity=\"1\"/>\r\n          <stop offset=\"70%\" stopColor=\"hsl(210, 85%, 60%)\" stopOpacity=\"1\"/>\r\n          <stop offset=\"100%\" stopColor=\"hsl(210, 85%, 50%)\" stopOpacity=\"1\"/>\r\n        </radialGradient>\r\n        <radialGradient id=\"blueGlow\">\r\n          <stop offset=\"0%\" stopColor=\"hsl(240, 85%, 75%)\" stopOpacity=\"1\"/>\r\n          <stop offset=\"70%\" stopColor=\"hsl(240, 85%, 60%)\" stopOpacity=\"1\"/>\r\n          <stop offset=\"100%\" stopColor=\"hsl(240, 85%, 50%)\" stopOpacity=\"1\"/>\r\n        </radialGradient>\r\n      </defs>\r\n      \r\n      {/* 12色の円を正確な円環状に配置（赤を3時の位置に）- フレア効果付き */}\r\n      {/* 中心(256,256)、半径150pxの円周上に12個の円を30度間隔で配置 */}\r\n      <circle cx=\"256\" cy=\"106\" r=\"32\" fill=\"url(#purpleGlow)\" filter=\"url(#flare)\"/> {/* 12時: 紫 */}\r\n      <circle cx=\"331\" cy=\"131\" r=\"32\" fill=\"url(#magentaGlow)\" filter=\"url(#flare)\"/> {/* 1時: マゼンタ */}\r\n      <circle cx=\"385.8\" cy=\"181\" r=\"32\" fill=\"url(#pinkGlow)\" filter=\"url(#flare)\"/> {/* 2時: ピンク */}\r\n      <circle cx=\"406\" cy=\"256\" r=\"32\" fill=\"url(#redGlow)\" filter=\"url(#flare)\"/> {/* 3時: 赤 */}\r\n      <circle cx=\"385.8\" cy=\"331\" r=\"32\" fill=\"url(#orangeGlow)\" filter=\"url(#flare)\"/> {/* 4時: オレンジ */}\r\n      <circle cx=\"331\" cy=\"381\" r=\"32\" fill=\"url(#yellowGlow)\" filter=\"url(#flare)\"/> {/* 5時: 黄 */}\r\n      <circle cx=\"256\" cy=\"406\" r=\"32\" fill=\"url(#yellowGreenGlow)\" filter=\"url(#flare)\"/> {/* 6時: 黄緑 */}\r\n      <circle cx=\"181\" cy=\"381\" r=\"32\" fill=\"url(#greenGlow)\" filter=\"url(#flare)\"/> {/* 7時: 緑 */}\r\n      <circle cx=\"126.2\" cy=\"331\" r=\"32\" fill=\"url(#blueGreenGlow)\" filter=\"url(#flare)\"/> {/* 8時: 青緑 */}\r\n      <circle cx=\"106\" cy=\"256\" r=\"32\" fill=\"url(#cyanGlow)\" filter=\"url(#flare)\"/> {/* 9時: シアン */}\r\n      <circle cx=\"126.2\" cy=\"181\" r=\"32\" fill=\"url(#lightBlueGlow)\" filter=\"url(#flare)\"/> {/* 10時: 水色 */}\r\n      <circle cx=\"181\" cy=\"131\" r=\"32\" fill=\"url(#blueGlow)\" filter=\"url(#flare)\"/> {/* 11時: 青 */}\r\n    </svg>\r\n  );\r\n};","import { useState, useEffect, useCallback } from 'react';\r\nimport { ColorCircles } from '@components/ColorCircles';\r\nimport { ColorAdjuster } from '@components/ColorAdjuster';\r\nimport { ImageUploader } from '@components/ImageUploader';\r\nimport { ImageViewer } from '@components/ImageViewer';\r\nimport { CameraCapture } from '@components/CameraCapture';\r\nimport { AboutModal } from '@components/AboutModal';\r\nimport { ColorWheelIcon } from '@components/ColorWheelIcon';\r\nimport type { ColorVisionSettings, ImageFileInfo, ImageProcessingState } from './types/color';\r\nimport './App.css';\r\n\r\n/**\r\n * ColorWise メインアプリケーションコンポーネント\r\n */\r\nfunction App() {\r\n\r\n  const [colorVisionSettings, setColorVisionSettings] = useState<ColorVisionSettings>({\r\n    simulation: {\r\n      useSimulation: false,\r\n      simulationType: 'deuteranopia',\r\n      severity: 0.2,\r\n      showSimulationInfo: false,\r\n    },\r\n    correction: {\r\n      useCorrection: false,\r\n      correctionType: 'deuteranopia',\r\n      strength: 0.2,\r\n    },\r\n    specialEffect: {\r\n      enabled: false,\r\n      type: 'double-light',\r\n      intensity: 0.5,\r\n      details: {\r\n        doubleLight: {\r\n          light1Position: { x: 0.25, y: 0.25 },\r\n          light2Position: { x: 0.75, y: 0.75 }\r\n        },\r\n        glitch: {\r\n          offsetAmount: 2,\r\n          noiseLevel: 0.1\r\n        },\r\n        depth: {\r\n          focusedRing: undefined\r\n        },\r\n        munker: {\r\n          stripeWidth: 8,\r\n          stripePattern: 'red-green'\r\n        },\r\n        watercolor: {\r\n          blurRadius: 5,\r\n          spreadAmount: 0.3\r\n        }\r\n      }\r\n    },\r\n  });\r\n\r\n  // 画像・カメラ機能の状態\r\n  const [currentTab, setCurrentTab] = useState<'rgb' | 'image' | 'camera'>('rgb');\r\n\r\n  // モーダル関連の状態\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [modalSection, setModalSection] = useState<'about' | 'credits' | 'privacy' | 'disclaimer'>('about');\r\n  const [imageInfo, setImageInfo] = useState<ImageFileInfo | null>(null);\r\n  const [processingState, setProcessingState] = useState<ImageProcessingState>({\r\n    isProcessing: false,\r\n    progress: 0,\r\n    error: null\r\n  });\r\n\r\n  // ウィンドウサイズの管理\r\n  const [windowWidth, setWindowWidth] = useState<number>(window.innerWidth);\r\n\r\n  // 処理状態変更ハンドラ（useCallbackでメモ化）\r\n  const handleProcessingStateChange = useCallback((isProcessing: boolean, progress: number, error?: string) => {\r\n    setProcessingState({\r\n      isProcessing,\r\n      progress,\r\n      error: error || null\r\n    });\r\n  }, []);\r\n\r\n  // ウィンドウサイズの変更を監視\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setWindowWidth(window.innerWidth);\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  // ローカルストレージから設定を読み込み\r\n  useEffect(() => {\r\n    const savedColorVisionSettings = localStorage.getItem('colorwise-color-vision-settings');\r\n    if (savedColorVisionSettings) {\r\n      try {\r\n        const parsed = JSON.parse(savedColorVisionSettings);\r\n        setColorVisionSettings(parsed);\r\n      } catch (error) {\r\n        console.error('色覚設定の読み込みに失敗しました:', error);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // 設定が変更されたらローカルストレージに保存\r\n  useEffect(() => {\r\n    localStorage.setItem('colorwise-color-vision-settings', JSON.stringify(colorVisionSettings));\r\n  }, [colorVisionSettings]);\r\n\r\n  // モーダル制御ハンドラー\r\n  const openModal = (section: 'about' | 'credits' | 'privacy' | 'disclaimer') => {\r\n    setModalSection(section);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <header className=\"app-header\">\r\n        <div className=\"container\">\r\n          <h1 className=\"app-title\">\r\n            <ColorWheelIcon size=\"large\" className=\"app-logo\" />\r\n            ColorWise\r\n          </h1>\r\n          <p className=\"app-subtitle\">\r\n            ColorWise - 色の世界を、もっと楽しく\r\n          </p>\r\n        </div>\r\n      </header>\r\n\r\n      <main className=\"app-main\">\r\n        {/* タブナビゲーション */}\r\n        <nav className=\"tab-navigation\">\r\n          <div className=\"tab-buttons\">\r\n            <button\r\n              onClick={() => setCurrentTab('rgb')}\r\n              className={`tab-button ${currentTab === 'rgb' ? 'active' : ''}`}\r\n            >\r\n              プレビュー\r\n            </button>\r\n            <button\r\n              onClick={() => setCurrentTab('image')}\r\n              className={`tab-button ${currentTab === 'image' ? 'active' : ''}`}\r\n            >\r\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"currentColor\" style={{ marginRight: '0.5rem', verticalAlign: 'middle' }}>\r\n                <path d=\"M9 2L7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3.17L15 2H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z\"/>\r\n                <circle cx=\"12\" cy=\"12\" r=\"3\"/>\r\n              </svg>\r\n              写真\r\n            </button>\r\n            <button\r\n              onClick={() => setCurrentTab('camera')}\r\n              className={`tab-button ${currentTab === 'camera' ? 'active' : ''}`}\r\n            >\r\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" style={{ marginRight: '0.5rem', verticalAlign: 'middle' }}>\r\n                <path d=\"M14.5 4h-5L7 7H4a2 2 0 00-2 2v9a2 2 0 002 2h16a2 2 0 002-2V9a2 2 0 00-2-2h-3l-2.5-3z\"/>\r\n                <circle cx=\"12\" cy=\"13\" r=\"3\"/>\r\n              </svg>\r\n              カメラ\r\n            </button>\r\n          </div>\r\n        </nav>\r\n        \r\n        <div className=\"container\">\r\n          <div className={currentTab === 'rgb' ? 'app-content' : ''}>\r\n            {/* RGB調整タブ */}\r\n            {currentTab === 'rgb' && (\r\n              <>\r\n                <section className=\"visualization-section\">\r\n                  <div className=\"visualization-wrapper\">\r\n                    <ColorCircles \r\n                      colorVisionSettings={colorVisionSettings}\r\n                    />\r\n                  </div>\r\n                  <div className=\"section-description\">\r\n                    <p>\r\n                      24色相環で様々な色の見え方を、色覚シミュレーションや補正の効果をリアルタイムでプレビューできます。\r\n                      設定パネルで調整してください。\r\n                    </p>\r\n                  </div>\r\n                </section>\r\n\r\n                <section className=\"adjustment-section\">\r\n                  <ColorAdjuster\r\n                    colorVisionSettings={colorVisionSettings}\r\n                    onColorVisionSettingsChange={setColorVisionSettings}\r\n                  />\r\n                </section>\r\n              </>\r\n            )}\r\n\r\n            {/* 写真処理タブ */}\r\n            {currentTab === 'image' && (\r\n              <div style={{ \r\n                display: 'grid', \r\n                gridTemplateColumns: windowWidth > 768 ? '350px 1fr' : '1fr', \r\n                gap: '2rem',\r\n                alignItems: 'start'\r\n              }}>\r\n                <div style={{ \r\n                  position: windowWidth > 1400 ? 'sticky' : 'static',\r\n                  top: '1rem'\r\n                }}>\r\n                  <h2 className=\"section-title\" style={{ color: '#9CA3AF', marginBottom: '1rem' }}>Settings</h2>\r\n                  <ColorAdjuster\r\n                    colorVisionSettings={colorVisionSettings}\r\n                    onColorVisionSettingsChange={setColorVisionSettings}\r\n                  />\r\n                  <div style={{ marginTop: '2rem' }}>\r\n                    <ImageUploader\r\n                      onImageLoad={setImageInfo}\r\n                      processingState={processingState}\r\n                      disabled={processingState.isProcessing}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div style={{ width: '100%' }}>\r\n                  <ImageViewer\r\n                    imageInfo={imageInfo}\r\n                    colorVisionSettings={colorVisionSettings}\r\n                    onProcessingStateChange={handleProcessingStateChange}\r\n                  />\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* カメラタブ */}\r\n            {currentTab === 'camera' && (\r\n              <div style={{ \r\n                display: 'grid', \r\n                gridTemplateColumns: windowWidth > 768 ? '350px 1fr' : '1fr', \r\n                gap: '2rem',\r\n                alignItems: 'start'\r\n              }}>\r\n                <div style={{ \r\n                  position: windowWidth > 1400 ? 'sticky' : 'static',\r\n                  top: '1rem'\r\n                }}>\r\n                  <h2 className=\"section-title\" style={{ color: '#9CA3AF', marginBottom: '1rem' }}>Settings</h2>\r\n                  <ColorAdjuster\r\n                    colorVisionSettings={colorVisionSettings}\r\n                    onColorVisionSettingsChange={setColorVisionSettings}\r\n                  />\r\n                </div>\r\n                <div style={{ width: '100%' }}>\r\n                  <CameraCapture\r\n                    colorVisionSettings={colorVisionSettings}\r\n                    onProcessingStateChange={handleProcessingStateChange}\r\n                  />\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n        </div>\r\n      </main>\r\n\r\n      <footer className=\"app-footer\">\r\n        <div className=\"container\">\r\n          <p className=\"footer-text\">\r\n            © 2025 ColorWise - 色の世界を、もっと楽しく | v{import.meta.env.VITE_APP_VERSION}\r\n          </p>\r\n          <p className=\"footer-links\">\r\n            <button onClick={() => openModal('about')} className=\"footer-link\" style={{ background: 'none', border: 'none', color: 'inherit', textDecoration: 'underline', cursor: 'pointer' }}>このアプリについて</button>\r\n            <span className=\"footer-separator\">|</span>\r\n            <button onClick={() => openModal('credits')} className=\"footer-link\" style={{ background: 'none', border: 'none', color: 'inherit', textDecoration: 'underline', cursor: 'pointer' }}>クレジット</button>\r\n            <span className=\"footer-separator\">|</span>\r\n            <button onClick={() => openModal('privacy')} className=\"footer-link\" style={{ background: 'none', border: 'none', color: 'inherit', textDecoration: 'underline', cursor: 'pointer' }}>プライバシーポリシー</button>\r\n            <span className=\"footer-separator\">|</span>\r\n            <button onClick={() => openModal('disclaimer')} className=\"footer-link\" style={{ background: 'none', border: 'none', color: 'inherit', textDecoration: 'underline', cursor: 'pointer' }}>免責事項</button>\r\n          </p>\r\n        </div>\r\n      </footer>\r\n\r\n      <AboutModal \r\n        isOpen={showModal}\r\n        onClose={closeModal}\r\n        activeSection={modalSection}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react'\r\nimport ReactDOM from 'react-dom/client'\r\nimport App from './App.tsx'\r\nimport './index.css'\r\n\r\nReactDOM.createRoot(document.getElementById('root')!).render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n)\r\n\r\n// Service Worker registration\r\nif ('serviceWorker' in navigator) {\r\n  window.addEventListener('load', () => {\r\n    navigator.serviceWorker.register(import.meta.env.BASE_URL + 'sw.js')\r\n      .then(async (registration) => {\r\n        // 古いSWがいる場合は更新を即時適用\r\n        if (registration.waiting) {\r\n          registration.waiting.postMessage({ type: 'SKIP_WAITING' });\r\n        } else if (registration.installing) {\r\n          registration.installing.addEventListener('statechange', () => {\r\n            if (registration.waiting) {\r\n              registration.waiting.postMessage({ type: 'SKIP_WAITING' });\r\n            }\r\n          });\r\n        }\r\n      })\r\n      .catch(() => {\r\n        // Service Worker registration failed\r\n      });\r\n  });\r\n}"],"names":["f","require$$0","k","l","m","n","p","q","c","a","g","b","d","e","h","reactJsxRuntime_production_min","jsxRuntimeModule","client","srgbToLinear","linearToSrgb","applyMat3","v","x","y","z","clamp01","clamp255","polyfitLeastSquares","xs","ys","degree","A","i","val","j","AT","transpose","ATA","matMul","ATb","matVecMul","gaussianSolve","M","rows","cols","T","B","r","out","sum","t","Ain","bIn","row","maxRow","pivot","factor","MACHADO_DEUTERANOMALY","buildPolynomialCoeffs","data","coeffs","evalPoly","acc","evaluateMatrix","s","ss","DEGREE","COEFFS","simulateDeutanPoly","rgb","severity","lin","R","G","daltonizeDeutan","alpha","steps","X","Y","simulateLin","Sx","err","correctForDeutan","strength","headroom","headroomScale","linOrig","linScaled","scaledRgb","correctedFull","blendRatio","linCorrectedFull","linOut","TM_START","TM_MAX","tt","tmStrength","mapped","hslToRgb","hue2rgb","ColorWheel","colorVisionSettings","width","height","canvasRef","useRef","selectedColor","setSelectedColor","useState","effectEnabled","setEffectEnabled","colorData","setColorData","isInitialized","setIsInitialized","defaultSize","canvasSize","setCanvasSize","ripples","setRipples","particles","setParticles","calculateColorData","useCallback","canvas","size","dpr","ctx","centerX","centerY","baseRadius","ringRadii","circleSizes","newColorData","ring","radius","circleSize","lightness","saturation","hue","angle","originalColor","finalRgb","finalColor","centerCircleSize","hexToRgb","hex","result","rgbToHsl","max","min","apply3DLighting","colorInfo","intensity","baseRgb","rgbString","match","gradient","pinkIntensity","blueIntensity","pinkLight","blueLight","applyDepthEffect","dist","maxDist","distanceFactor","saturationReduction","lightnessIncrease","hsl","adjustedRgb","adjustedColor","sizeMultiplier","applySpecialEffect","specialEffect","finalSize","skipDrawing","drawMunkerBackgroundStripes","stripeWidth","stripePattern","bgColor","drawMunkerForegroundStripes","fgColor","drawGlitchEffect","offset","smallOffset","drawColorWheel","effectResult","useEffect","handleResize","newSize","startRippleEffect","color","newRipple","prev","startParticleEffect","newParticles","speed","particleColor","particleSize","handleCanvasClick","event","rect","clickX","clickY","scaleX","scaleY","canvasX","canvasY","nearestColor","minDistance","distance","animateEffects","currentTime","easeOutCubic","ripple","progress","startRadius","endRadius","easedProgress","particle","newX","newY","newLife","drawEffects","lineWidth","animationFrameRef","animationLoop","jsxs","jsx","ColorCircles","Fragment","clamp","value","ColorAdjuster","onColorVisionSettingsChange","handleSimulationToggle","handleSimulationTypeChange","type","handleSimulationSeverityChange","handleCorrectionToggle","handleCorrectionTypeChange","handleCorrectionStrengthChange","handleCorrectionHeadroomChange","handleSpecialEffectToggle","handleSpecialEffectTypeChange","handleSpecialEffectIntensityChange","_a","newPattern","processImageData","imageData","onProgress","totalPixels","batchSize","processedPixels","endIndex","transformedRgb","resolve","loadImageToCanvas","file","maxWidth","maxHeight","reject","img","ratio","drawImageDataToCanvas","downloadCanvasAsImage","filename","format","quality","blob","url","formatFileSize","bytes","sizes","validateImageFile","maxSize","ImageUploader","onImageLoad","processingState","disabled","dragOver","setDragOver","handleFileSelect","validationError","imageInfo","handleFileInput","handleDrop","handleDragOver","handleDragLeave","ImageViewer","onProcessingStateChange","originalCanvasRef","processedCanvasRef","viewMode","setViewMode","originalImageData","setOriginalImageData","processedImageData","setProcessedImageData","timeoutId","processed","handleDownload","CameraCapture","videoRef","cameraConfig","setCameraConfig","devices","setDevices","stream","setStream","isProcessingFrame","setIsProcessingFrame","videoDevices","device","error","toggleCamera","track","constraints","mediaStream","errorMessage","captureAndProcess","video","originalCanvas","processedCanvas","capturePhoto","AboutModal","isOpen","onClose","activeSection","renderContent","ColorWheelIcon","className","style","iconSize","App","setColorVisionSettings","currentTab","setCurrentTab","showModal","setShowModal","modalSection","setModalSection","setImageInfo","setProcessingState","windowWidth","setWindowWidth","handleProcessingStateChange","isProcessing","savedColorVisionSettings","parsed","openModal","section","closeModal","ReactDOM","React","registration"],"mappings":";;;;;;;;GASa,IAAIA,GAAEC,EAAiBC,GAAE,OAAO,IAAI,eAAe,EAAEC,GAAE,OAAO,IAAI,gBAAgB,EAAEC,GAAE,OAAO,UAAU,eAAeC,GAAEL,GAAE,mDAAmD,kBAAkBM,GAAE,CAAC,IAAI,GAAG,IAAI,GAAG,OAAO,GAAG,SAAS,EAAE,EAClP,SAASC,GAAEC,EAAEC,EAAEC,EAAE,CAAC,IAAIC,EAAEC,EAAE,GAAGC,EAAE,KAAKC,EAAE,KAAcJ,IAAT,SAAaG,EAAE,GAAGH,GAAYD,EAAE,MAAX,SAAiBI,EAAE,GAAGJ,EAAE,KAAcA,EAAE,MAAX,SAAiBK,EAAEL,EAAE,KAAK,IAAIE,KAAKF,EAAEL,GAAE,KAAKK,EAAEE,CAAC,GAAG,CAACL,GAAE,eAAeK,CAAC,IAAIC,EAAED,CAAC,EAAEF,EAAEE,CAAC,GAAG,GAAGH,GAAGA,EAAE,aAAa,IAAIG,KAAKF,EAAED,EAAE,aAAaC,EAAWG,EAAED,CAAC,aAAIC,EAAED,CAAC,EAAEF,EAAEE,CAAC,GAAG,MAAM,CAAC,SAAST,GAAE,KAAKM,EAAE,IAAIK,EAAE,IAAIC,EAAE,MAAMF,EAAE,OAAOP,GAAE,OAAO,CAAC,YAAkBF,GAAEY,EAAA,IAAYR,GAAEQ,EAAA,KAAaR,GCPxWS,GAAA,QAAiBf,yBCDfG,GAAIH,GAENgB,GAAA,WAAqBb,GAAE,WACvBa,GAAA,YAAsBb,GAAE,YCC1B,SAASc,EAAaV,EAAmB,CACvC,OAAQA,GAAK,OAAWA,EAAI,MAAQ,KAAK,KAAKA,EAAI,MAAS,MAAO,GAAG,CACvE,CACA,SAASW,EAAaX,EAAmB,CACvC,OAAQA,GAAK,SAAa,MAAQA,EAAI,MAAQ,KAAK,IAAIA,EAAG,EAAE,GAAG,EAAI,IACrE,CAMA,SAASY,GAAUhB,EAASiB,EAAe,CACzC,KAAM,CAACC,EAAEC,EAAEC,CAAC,EAAIH,EAChB,MAAO,CACLjB,EAAE,CAAC,EAAE,CAAC,EAAEkB,EAAIlB,EAAE,CAAC,EAAE,CAAC,EAAEmB,EAAInB,EAAE,CAAC,EAAE,CAAC,EAAEoB,EAChCpB,EAAE,CAAC,EAAE,CAAC,EAAEkB,EAAIlB,EAAE,CAAC,EAAE,CAAC,EAAEmB,EAAInB,EAAE,CAAC,EAAE,CAAC,EAAEoB,EAChCpB,EAAE,CAAC,EAAE,CAAC,EAAEkB,EAAIlB,EAAE,CAAC,EAAE,CAAC,EAAEmB,EAAInB,EAAE,CAAC,EAAE,CAAC,EAAEoB,CAAA,CAEpC,CAEA,SAASC,EAAQH,EAAmB,CAClC,OAAO,KAAK,IAAI,EAAG,KAAK,IAAI,EAAGA,CAAC,CAAC,CACnC,CAEA,SAASI,EAASJ,EAAmB,CACnC,OAAO,KAAK,IAAI,EAAG,KAAK,IAAI,IAAK,KAAK,MAAMA,CAAC,CAAC,CAAC,CACjD,CAIA,SAASK,GAAoBC,EAAcC,EAAcC,EAA0B,CACjF,GAAIF,EAAG,SAAWC,EAAG,OAAQ,MAAM,IAAI,MAAM,qCAAqC,EAClF,MAAM,EAAID,EAAG,OACPhB,EAAIkB,EACV,GAAI,EAAIlB,EAAI,EAAG,MAAM,IAAI,MAAM,sCAAsC,CAAC,YAAYA,CAAC,GAAG,EAGtF,MAAMmB,EAAgB,MAAM,KAAK,CAAC,OAAQ,CAAA,EAAI,IAAM,MAAMnB,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,EAChED,EAAckB,EAAG,MAAA,EAEvB,QAASG,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAIC,EAAM,EACV,QAASC,EAAI,EAAGA,GAAKtB,EAAGsB,IACtBH,EAAEC,CAAC,EAAEE,CAAC,EAAID,EACVA,GAAOL,EAAGI,CAAC,CAEf,CAGA,MAAMG,EAAKC,GAAUL,CAAC,EAChBM,EAAMC,GAAOH,EAAIJ,CAAC,EAClBQ,EAAMC,GAAUL,EAAIxB,CAAC,EAI3B,OADU8B,GAAcJ,EAAKE,CAAG,CAElC,CAEA,SAASH,GAAUM,EAA2B,CAC5C,MAAMC,EAAOD,EAAE,OAAQE,EAAOF,EAAE,CAAC,EAAE,OAC7BG,EAAI,MAAM,KAAK,CAAC,OAAQD,GAAO,IAAM,MAAMD,CAAI,EAAE,KAAK,CAAC,CAAC,EAC9D,QAASX,EAAI,EAAGA,EAAIW,EAAMX,IAAK,QAASE,EAAI,EAAGA,EAAIU,EAAMV,IAAKW,EAAEX,CAAC,EAAEF,CAAC,EAAIU,EAAEV,CAAC,EAAEE,CAAC,EAC9E,OAAOW,CACT,CAEA,SAASP,GAAOP,EAAee,EAA2B,CACxD,MAAMC,EAAIhB,EAAE,OAAQ7B,EAAI6B,EAAE,CAAC,EAAE,OAAQvB,EAAIsC,EAAE,CAAC,EAAE,OACxCE,EAAM,MAAM,KAAK,CAAC,OAAQD,GAAI,IAAM,MAAMvC,CAAC,EAAE,KAAK,CAAC,CAAC,EAC1D,QAASwB,EAAI,EAAGA,EAAIe,EAAGf,IACrB,QAASE,EAAI,EAAGA,EAAI1B,EAAG0B,IAAK,CAC1B,IAAIe,EAAM,EACV,QAASC,EAAI,EAAGA,EAAIhD,EAAGgD,IAAKD,GAAOlB,EAAEC,CAAC,EAAEkB,CAAC,EAAIJ,EAAEI,CAAC,EAAEhB,CAAC,EACnDc,EAAIhB,CAAC,EAAEE,CAAC,EAAIe,CACd,CAEF,OAAOD,CACT,CAEA,SAASR,GAAUT,EAAeV,EAAuB,CACvD,MAAM0B,EAAIhB,EAAE,OAAQvB,EAAIuB,EAAE,CAAC,EAAE,OACvBiB,EAAM,MAAMD,CAAC,EAAE,KAAK,CAAC,EAC3B,QAAS,EAAI,EAAG,EAAIA,EAAG,IAAK,CAC1B,IAAIE,EAAM,EACV,QAASf,EAAI,EAAGA,EAAI1B,EAAG0B,IAAKe,GAAOlB,EAAE,CAAC,EAAEG,CAAC,EAAIb,EAAEa,CAAC,EAChDc,EAAI,CAAC,EAAIC,CACX,CACA,OAAOD,CACT,CAEA,SAASP,GAAcU,EAAiBC,EAAyB,CAE/D,MAAM/C,EAAI8C,EAAI,OACRpB,EAAIoB,EAAI,IAAI,CAACE,EAAKrB,IAAMqB,EAAI,OAAO,CAACD,EAAIpB,CAAC,CAAC,CAAC,CAAC,EAGlD,QAAS,EAAI,EAAG,EAAI3B,EAAG,IAAK,CAE1B,IAAIiD,EAAS,EACb,QAASP,EAAI,EAAE,EAAGA,EAAI1C,EAAG0C,IAAS,KAAK,IAAIhB,EAAEgB,CAAC,EAAE,CAAC,CAAC,EAAI,KAAK,IAAIhB,EAAEuB,CAAM,EAAE,CAAC,CAAC,IAAGA,EAASP,GACvF,CAAChB,EAAE,CAAC,EAAGA,EAAEuB,CAAM,CAAC,EAAI,CAACvB,EAAEuB,CAAM,EAAGvB,EAAE,CAAC,CAAC,EAEpC,MAAMwB,EAAQxB,EAAE,CAAC,EAAE,CAAC,EACpB,GAAI,KAAK,IAAIwB,CAAK,EAAI,MAAO,MAAM,IAAI,MAAM,kCAAkC,EAG/E,QAASrB,EAAI,EAAGA,GAAK7B,EAAG6B,IAAKH,EAAE,CAAC,EAAEG,CAAC,GAAKqB,EAGxC,QAASR,EAAI,EAAGA,EAAI1C,EAAG0C,IAAK,CAC1B,GAAIA,IAAM,EAAG,SACb,MAAMS,EAASzB,EAAEgB,CAAC,EAAE,CAAC,EACrB,QAASb,EAAI,EAAGA,GAAK7B,EAAG6B,IAAKH,EAAEgB,CAAC,EAAEb,CAAC,GAAKsB,EAASzB,EAAE,CAAC,EAAEG,CAAC,CACzD,CACF,CAIA,OADUH,EAAE,IAAIsB,GAAOA,EAAIhD,CAAC,CAAC,CAE/B,CAKA,MAAMoD,GAAuC,CAC3C,CAAE,EAAG,EAAK,EAAG,CACX,CAAC,EAAU,EAAU,EAAS,EAC9B,CAAC,EAAU,EAAW,CAAQ,EAC9B,CAAC,GAAU,GAAW,CAAQ,CAAA,CAChC,EACA,CAAE,EAAG,GAAK,EAAG,CACX,CAAC,QAAU,QAAU,QAAS,EAC9B,CAAC,QAAU,QAAW,MAAQ,EAC9B,CAAC,SAAW,QAAU,MAAQ,CAAA,CAChC,EACA,CAAE,EAAG,GAAK,EAAG,CACX,CAAC,QAAU,QAAU,QAAS,EAC9B,CAAC,QAAU,QAAW,OAAQ,EAC9B,CAAC,SAAW,QAAU,OAAQ,CAAA,CAChC,EACA,CAAE,EAAG,GAAK,EAAG,CACX,CAAC,QAAU,OAAU,QAAS,EAC9B,CAAC,QAAU,QAAW,OAAQ,EAC9B,CAAC,QAAW,QAAU,OAAQ,CAAA,CAChC,EACA,CAAE,EAAG,GAAK,EAAG,CACX,CAAC,QAAU,OAAU,QAAS,EAC9B,CAAC,QAAU,QAAW,OAAQ,EAC9B,CAAC,SAAW,QAAU,KAAQ,CAAA,CAChC,EACA,CAAE,EAAG,GAAK,EAAG,CACX,CAAC,QAAU,QAAU,QAAS,EAC9B,CAAC,QAAU,QAAW,OAAQ,EAC9B,CAAC,QAAW,QAAU,OAAQ,CAAA,CAChC,EACA,CAAE,EAAG,GAAK,EAAG,CACX,CAAC,QAAU,QAAU,QAAS,EAC9B,CAAC,QAAU,QAAW,OAAQ,EAC9B,CAAC,SAAW,QAAU,OAAQ,CAAA,CAChC,EACA,CAAE,EAAG,GAAK,EAAG,CACX,CAAC,QAAU,QAAU,OAAS,EAC9B,CAAC,QAAU,QAAW,OAAQ,EAC9B,CAAC,SAAW,QAAU,OAAQ,CAAA,CAChC,EACA,CAAE,EAAG,GAAK,EAAG,CACX,CAAC,QAAU,QAAU,QAAS,EAC9B,CAAC,QAAU,QAAW,OAAQ,EAC9B,CAAC,SAAW,QAAU,OAAQ,CAAA,CAChC,EACA,CAAE,EAAG,GAAK,EAAG,CACX,CAAC,QAAU,OAAU,QAAS,EAC9B,CAAC,QAAU,OAAW,OAAQ,EAC9B,CAAC,QAAW,QAAU,MAAQ,CAAA,CAChC,EACA,CAAE,EAAG,EAAK,EAAG,CACX,CAAC,QAAU,QAAU,QAAS,EAC9B,CAAC,QAAU,QAAW,OAAQ,EAC9B,CAAC,QAAW,OAAU,OAAQ,CAAA,CAChC,CACF,EAIA,SAASC,GAAsBC,EAAqB7B,EAA0B,CAE5E,MAAMF,EAAK+B,EAAK,IAAIrD,GAAKA,EAAE,CAAC,EACtBsD,EAAmB,CAAC,GAAG,CAAA,EAAG,CAAA,CAAE,EAElC,QAAS5B,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B4B,EAAO5B,CAAC,EAAI,CAAA,EACZ,QAASE,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,MAAML,EAAK8B,EAAK,IAAIrD,GAAKA,EAAE,EAAE0B,CAAC,EAAEE,CAAC,CAAC,EAC5B1B,EAAImB,GAAoBC,EAAIC,EAAIC,CAAM,EAC5C8B,EAAO5B,CAAC,EAAEE,CAAC,EAAI1B,CACjB,CACF,CACA,OAAOoD,CACT,CAEA,SAASC,GAASrD,EAAac,EAAmB,CAEhD,IAAIwC,EAAM,EACV,QAAS5D,EAAIM,EAAE,OAAS,EAAGN,GAAK,EAAGA,IAAK4D,EAAMA,EAAMxC,EAAId,EAAEN,CAAC,EAC3D,OAAO4D,CACT,CAEA,SAASC,GAAeH,EAAkBI,EAAiB,CACzD,MAAMC,EAAKxC,EAAQuC,CAAC,EACdtB,EAAU,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EACxC,QAASV,EAAI,EAAGA,EAAI,EAAGA,IACrB,QAASE,EAAI,EAAGA,EAAI,EAAGA,IACrBQ,EAAEV,CAAC,EAAEE,CAAC,EAAI2B,GAASD,EAAO5B,CAAC,EAAEE,CAAC,EAAG+B,CAAE,EAGvC,OAAOvB,CACT,CAGA,MAAMwB,GAAS,EACTC,GAAmBT,GAAsBD,GAAuBS,EAAM,EAMrE,SAASE,GAAmBC,EAAWC,EAAwB,CACpE,MAAMC,EAAY,CAChBrD,EAAamD,EAAI,CAAC,EAAE,GAAG,EACvBnD,EAAamD,EAAI,CAAC,EAAE,GAAG,EACvBnD,EAAamD,EAAI,CAAC,EAAE,GAAG,CAAA,EAEnB3B,EAAIqB,GAAeI,GAAQG,CAAQ,EACnC,CAACE,EAAEC,EAAE3B,CAAC,EAAI1B,GAAUsB,EAAG6B,CAAG,EAChC,MAAO,CACL7C,EAASP,EAAaM,EAAQ+C,CAAC,CAAC,EAAE,GAAG,EACrC9C,EAASP,EAAaM,EAAQgD,CAAC,CAAC,EAAE,GAAG,EACrC/C,EAASP,EAAaM,EAAQqB,CAAC,CAAC,EAAE,GAAG,CAAA,CAEzC,CAQO,SAAS4B,GAAgBL,EAAWC,EAAkBK,EAAM,GAAKC,EAAM,EAAS,CAErF,IAAIC,EAAU,CACZ3D,EAAamD,EAAI,CAAC,EAAE,GAAG,EACvBnD,EAAamD,EAAI,CAAC,EAAE,GAAG,EACvBnD,EAAamD,EAAI,CAAC,EAAE,GAAG,CAAA,EAEzB,MAAMS,EAAU,CAAC,GAAGD,CAAC,EACfnC,EAAIqB,GAAeI,GAAQG,CAAQ,EAEnCS,EAAe1D,GAAkBD,GAAUsB,EAAGrB,CAAC,EAErD,QAAS6B,EAAI,EAAGA,EAAI0B,EAAO1B,IAAK,CAC9B,MAAM8B,EAAKD,EAAYF,CAAC,EAElBI,EAAY,CAACH,EAAE,CAAC,EAAEE,EAAG,CAAC,EAAGF,EAAE,CAAC,EAAEE,EAAG,CAAC,EAAGF,EAAE,CAAC,EAAEE,EAAG,CAAC,CAAC,EACrDH,EAAI,CACFpD,EAAQoD,EAAE,CAAC,EAAIF,EAAQM,EAAI,CAAC,CAAC,EAC7BxD,EAAQoD,EAAE,CAAC,EAAIF,EAAQM,EAAI,CAAC,CAAC,EAC7BxD,EAAQoD,EAAE,CAAC,EAAIF,EAAQM,EAAI,CAAC,CAAC,CAAA,CAEjC,CAEA,MAAO,CACLvD,EAASP,EAAa0D,EAAE,CAAC,CAAC,EAAE,GAAG,EAC/BnD,EAASP,EAAa0D,EAAE,CAAC,CAAC,EAAE,GAAG,EAC/BnD,EAASP,EAAa0D,EAAE,CAAC,CAAC,EAAE,GAAG,CAAA,CAEnC,CAmCO,SAASK,GAAiBb,EAAWc,EAAmB,GAAKC,EAAyB,CAC3F,MAAMpB,EAAI,KAAK,IAAI,EAAG,KAAK,IAAI,EAAGmB,CAAQ,CAAC,EAG3C,IAAIE,EACAD,IAAa,OAEfC,EAAgB,EAAI,KAAK,IAAI,EAAG,KAAK,IAAI,EAAGD,CAAQ,CAAC,EAGrDC,EAAgB,EAIlB,MAAMC,EAAgB,CAAEpE,EAAamD,EAAI,CAAC,EAAE,GAAG,EAAGnD,EAAamD,EAAI,CAAC,EAAE,GAAG,EAAGnD,EAAamD,EAAI,CAAC,EAAE,GAAG,CAAE,EAC/FkB,EAAkB,CAAED,EAAQ,CAAC,EAAED,EAAeC,EAAQ,CAAC,EAAED,EAAeC,EAAQ,CAAC,EAAED,CAAc,EACjGG,EAAkB,CAAE9D,EAASP,EAAaoE,EAAU,CAAC,CAAC,EAAE,GAAG,EAAG7D,EAASP,EAAaoE,EAAU,CAAC,CAAC,EAAE,GAAG,EAAG7D,EAASP,EAAaoE,EAAU,CAAC,CAAC,EAAE,GAAG,CAAE,EAEjJE,EAAgBf,GAAgBc,EAAWxB,EAAG,GAAK,CAAC,EAEjC0B,EAAa,KAAK,IAAI1B,EAAjC,GAAyC,EACjD2B,EAAyB,CAAEzE,EAAauE,EAAc,CAAC,EAAE,GAAG,EAAGvE,EAAauE,EAAc,CAAC,EAAE,GAAG,EAAGvE,EAAauE,EAAc,CAAC,EAAE,GAAG,CAAE,EAC5I,IAAIG,EAAe,CAAEL,EAAU,CAAC,GAAG,EAAEG,GAAYC,EAAiB,CAAC,EAAED,EAAYH,EAAU,CAAC,GAAG,EAAEG,GAAYC,EAAiB,CAAC,EAAED,EAAYH,EAAU,CAAC,GAAG,EAAEG,GAAYC,EAAiB,CAAC,EAAED,CAAW,EAExM,MAAMG,EAAW,IAAMC,EAAS,GAChC,GAAI9B,EAAI6B,EAAU,CAChB,MAAME,GAAM/B,EAAI6B,IAAW,EAAIA,GAAiBG,EAAaF,EAASC,EACtEH,EAASA,EAAO,IAAIpF,GAAK,CAAE,MAAMyF,EAASzF,GAAG,EAAEA,GAAI,OAAOA,GAAG,EAAEwF,GAAYC,EAAOD,CAAY,CAAC,CACjG,CACA,MAAO,CAAEtE,EAASP,EAAaM,EAAQmE,EAAO,CAAC,CAAC,CAAC,EAAE,GAAG,EAAGlE,EAASP,EAAaM,EAAQmE,EAAO,CAAC,CAAC,CAAC,EAAE,GAAG,EAAGlE,EAASP,EAAaM,EAAQmE,EAAO,CAAC,CAAC,CAAC,EAAE,GAAG,CAAE,CAC1J,CCpVA,SAASM,GAASpF,EAAWkD,EAAW7D,EAAqC,CAC3EW,EAAIA,EAAI,IACRkD,EAAIA,EAAI,IACR7D,EAAIA,EAAI,IAER,MAAMgG,EAAU,CAAC7F,EAAWC,EAAW2C,KACjCA,EAAI,IAAGA,GAAK,GACZA,EAAI,IAAGA,GAAK,GACZA,EAAI,EAAE,EAAU5C,GAAKC,EAAID,GAAK,EAAI4C,EAClCA,EAAI,EAAE,EAAU3C,EAChB2C,EAAI,EAAE,EAAU5C,GAAKC,EAAID,IAAM,EAAE,EAAI4C,GAAK,EACvC5C,GAGT,IAAIyC,EAAWrC,EAAWC,EAE1B,GAAIqD,IAAM,EACRjB,EAAIrC,EAAIC,EAAIR,MACP,CACL,MAAMI,EAAIJ,EAAI,GAAMA,GAAK,EAAI6D,GAAK7D,EAAI6D,EAAI7D,EAAI6D,EACxC1D,EAAI,EAAIH,EAAII,EAClBwC,EAAIoD,EAAQ7F,EAAGC,EAAGO,EAAI,EAAE,CAAC,EACzBJ,EAAIyF,EAAQ7F,EAAGC,EAAGO,CAAC,EACnBH,EAAIwF,EAAQ7F,EAAGC,EAAGO,EAAI,EAAE,CAAC,CAC3B,CAEA,MAAO,CAAC,KAAK,MAAMiC,EAAI,GAAG,EAAG,KAAK,MAAMrC,EAAI,GAAG,EAAG,KAAK,MAAMC,EAAI,GAAG,CAAC,CACvE,CA0BO,MAAMyF,GAAwC,CAAC,CAAE,oBAAAC,EAAqB,MAAAC,EAAO,OAAAC,KAAa,CAC/F,MAAMC,EAAYC,EAAAA,OAA0B,IAAI,EAC1C,CAACC,EAAeC,CAAgB,EAAIC,EAAAA,SAA2B,IAAI,EACnE,CAACC,EAAeC,CAAgB,EAAIF,EAAAA,SAAkB,EAAI,EAC1D,CAACG,EAAWC,CAAY,EAAIJ,EAAAA,SAAsB,CAAA,CAAE,EACpD,CAACK,EAAeC,CAAgB,EAAIN,EAAAA,SAAkB,EAAK,EAC3DO,EAAc,KAAK,IAAI,OAAO,WAAa,GAAI,GAAG,EAClD,CAACC,EAAYC,CAAa,EAAIT,EAAAA,SAAiBN,GAASC,GAAUY,CAAW,EAC7E,CAACG,EAASC,CAAU,EAAIX,EAAAA,SAS1B,CAAA,CAAE,EACA,CAACY,EAAWC,CAAY,EAAIb,EAAAA,SAU9B,CAAA,CAAE,EAGAc,EAAqBC,EAAAA,YAAY,IAAM,CAC3C,MAAMC,EAASpB,EAAU,QACzB,GAAI,CAACoB,EAAQ,MAAO,CAAA,EAGpB,MAAMC,EAAOT,EACPU,EAAM,OAAO,kBAAoB,EAGvCF,EAAO,MAAQC,EAAOC,EACtBF,EAAO,OAASC,EAAOC,EAKvB,MAAMC,EAAMH,EAAO,WAAW,IAAI,EAC9BG,GACFA,EAAI,MAAMD,EAAKA,CAAG,EAGpB,MAAME,EAAUH,EAAO,EACjBI,EAAUJ,EAAO,EAGjBK,EAAaL,EAAO,EAAI,GACxBM,EAAY,CAChBD,EAAa,IACbA,EAAa,IACbA,EAAa,IACbA,EAAa,IACbA,EAAa,IACbA,EAAa,GAAA,EAITE,EAAc,CAClBF,EAAa,KACbA,EAAa,IACbA,EAAa,KACbA,EAAa,KACbA,EAAa,KACbA,EAAa,IAAA,EAITG,EAA4B,CAAA,EAGlC,QAASC,EAAO,EAAGA,EAAO,EAAGA,IAAQ,CACnC,MAAMC,EAASJ,EAAUG,CAAI,EACvBE,EAAaJ,EAAYE,CAAI,EAG7BG,EAAY,GAAKH,EAAO,EACxBI,EAAa,IAAMJ,EAAO,GAGhC,QAAStG,GAAI,EAAGA,GAAI,GAAIA,KAAK,CAC3B,MAAM2G,EAAM3G,GAAI,GACV4G,GAASD,EAAM,KAAK,GAAM,IAG1BrH,GAAI0G,EAAU,KAAK,IAAIY,EAAK,EAAIL,EAChChH,GAAI0G,EAAU,KAAK,IAAIW,EAAK,EAAIL,EAGhCM,GAAgB,OAAOF,CAAG,KAAKD,CAAU,MAAMD,CAAS,KAG9D,IAAIpE,EAAY6B,GAASyC,EAAKD,EAAYD,CAAS,EAC/CK,GAAqC,CAACzE,EAAI,CAAC,EAAGA,EAAI,CAAC,EAAGA,EAAI,CAAC,CAAC,EA6B5DgC,EAAoB,WAAW,eAC/BA,EAAoB,WAAW,iBAAmB,iBAEpDhC,EAAMD,GAAmBC,EAAKgC,EAAoB,WAAW,QAAQ,EACrEyC,GAAW,CAACzE,EAAI,CAAC,EAAGA,EAAI,CAAC,EAAGA,EAAI,CAAC,CAAC,GAMhCgC,EAAoB,WAAW,eAC/BA,EAAoB,WAAW,iBAAmB,iBACpDhC,EAAMa,GAAiBb,EAAKgC,EAAoB,WAAW,SAAUA,EAAoB,WAAW,QAAQ,EAC5GyC,GAAW,CAACzE,EAAI,CAAC,EAAGA,EAAI,CAAC,EAAGA,EAAI,CAAC,CAAC,GAGpC,MAAM0E,GAAa,OAAO1E,EAAI,CAAC,CAAC,KAAKA,EAAI,CAAC,CAAC,KAAKA,EAAI,CAAC,CAAC,IAGtDgE,EAAa,KAAK,CAChB,IAAAM,EACA,WAAAD,EACA,UAAAD,EACA,IAAKK,GACL,SAAU,CAAE,EAAAxH,GAAG,EAAAC,EAAA,EACf,KAAM+G,EAAO,EACb,cAAAO,GACA,WAAAE,GACA,WAAAP,CAAA,CACD,CACH,CACF,CAGA,MAAMQ,EAAmBd,EAAa,IACtC,OAAAG,EAAa,KAAK,CAChB,IAAK,EACL,WAAY,EACZ,UAAW,IACX,IAAK,CAAC,IAAK,IAAK,GAAG,EACnB,SAAU,CAAE,EAAGL,EAAS,EAAGC,CAAA,EAC3B,KAAM,EACN,cAAe,mBACf,WAAY,UACZ,WAAYe,CAAA,CACb,EAEMX,CACT,EAAG,CAAChC,EAAqBe,CAAU,CAAC,EAG9B6B,EAAYC,GAAgB,CAChC,MAAMC,EAAS,4CAA4C,KAAKD,CAAG,EACnE,OAAOC,EAAS,CACd,EAAG,SAASA,EAAO,CAAC,EAAG,EAAE,EACzB,EAAG,SAASA,EAAO,CAAC,EAAG,EAAE,EACzB,EAAG,SAASA,EAAO,CAAC,EAAG,EAAE,CAAA,EACvB,IACN,EAIMC,EAAW,CAACrG,EAAWrC,EAAWC,IAAc,CACpDoC,GAAK,IACLrC,GAAK,IACLC,GAAK,IAEL,MAAM0I,EAAM,KAAK,IAAItG,EAAGrC,EAAGC,CAAC,EACtB2I,EAAM,KAAK,IAAIvG,EAAGrC,EAAGC,CAAC,EAC5B,IAAIG,EAAI,EAAGkD,EAAI,EACf,MAAM7D,GAAKkJ,EAAMC,GAAO,EAExB,GAAID,IAAQC,EAAK,CACf,MAAM1I,EAAIyI,EAAMC,EAGhB,OAFAtF,EAAI7D,EAAI,GAAMS,GAAK,EAAIyI,EAAMC,GAAO1I,GAAKyI,EAAMC,GAEvCD,EAAA,CACN,KAAKtG,EAAGjC,GAAKJ,EAAIC,GAAKC,GAAKF,EAAIC,EAAI,EAAI,GAAI,MAC3C,KAAKD,EAAGI,GAAKH,EAAIoC,GAAKnC,EAAI,EAAG,MAC7B,KAAKD,EAAGG,GAAKiC,EAAIrC,GAAKE,EAAI,EAAG,KAAA,CAE/BE,GAAK,CACP,CAEA,MAAO,CAAE,EAAGA,EAAI,IAAK,EAAGkD,EAAI,IAAK,EAAG7D,EAAI,GAAA,CAC1C,EAKMoJ,EAAkB5B,EAAAA,YAAY,CAACI,EAA+ByB,EAAsBhB,EAAoBiB,IAAsB,CAElI,GAAI,CADWjD,EAAU,QACZ,OAAO,KAapB,MAAMkD,GAVkBC,GAAsB,CAC5C,MAAMC,EAAQD,EAAU,MAAM,gCAAgC,EAC9D,OAAOC,EAAQ,CACb,EAAG,SAASA,EAAM,CAAC,EAAG,EAAE,EACxB,EAAG,SAASA,EAAM,CAAC,EAAG,EAAE,EACxB,EAAG,SAASA,EAAM,CAAC,EAAG,EAAE,CAAA,EACtB,IACN,GAG+BJ,EAAU,UAAU,EACnD,GAAI,CAACE,EACH,OAAO,KAOT3B,EAAI,KAAA,EAGJA,EAAI,UAAA,EACJA,EAAI,IAAIyB,EAAU,SAAS,EAAGA,EAAU,SAAS,EAAGhB,EAAY,EAAG,EAAI,KAAK,EAAE,EAC9ET,EAAI,KAAA,EAGJ,MAAM8B,EAAW9B,EAAI,qBACnByB,EAAU,SAAS,EAAIhB,EACvBgB,EAAU,SAAS,EACnBA,EAAU,SAAS,EAAIhB,EACvBgB,EAAU,SAAS,CAAA,EAIfM,EAAgBL,EAAY,GAC5BM,EAAgBN,EAAY,GAG5BO,EAAY,CAChB,EAAG,KAAK,IAAI,IAAKN,EAAQ,GAAK,IAAMA,EAAQ,GAAKI,EAAgB,EAAG,EACpE,EAAG,KAAK,IAAI,IAAKJ,EAAQ,EAAK,GAAMI,EAAgB,EAAG,EACvD,EAAG,KAAK,IAAI,IAAKJ,EAAQ,EAAK,IAAOI,EAAgB,EAAG,CAAA,EAIpDG,EAAY,CAChB,EAAG,KAAK,IAAI,IAAKP,EAAQ,EAAK,GAAMK,EAAgB,EAAG,EACvD,EAAG,KAAK,IAAI,IAAKL,EAAQ,EAAK,IAAOK,EAAgB,EAAG,EACxD,EAAG,KAAK,IAAI,IAAKL,EAAQ,GAAK,IAAMA,EAAQ,GAAKK,EAAgB,EAAG,CAAA,EAItE,OAAAF,EAAS,aAAa,EAAG,OAAO,KAAK,MAAMG,EAAU,CAAC,CAAC,KAAK,KAAK,MAAMA,EAAU,CAAC,CAAC,KAAK,KAAK,MAAMA,EAAU,CAAC,CAAC,GAAG,EAClHH,EAAS,aAAa,GAAKL,EAAU,UAAU,EAC/CK,EAAS,aAAa,EAAG,OAAO,KAAK,MAAMI,EAAU,CAAC,CAAC,KAAK,KAAK,MAAMA,EAAU,CAAC,CAAC,KAAK,KAAK,MAAMA,EAAU,CAAC,CAAC,GAAG,EAGlHlC,EAAI,UAAY8B,EAChB9B,EAAI,UAAA,EACJA,EAAI,IAAIyB,EAAU,SAAS,EAAGA,EAAU,SAAS,EAAGhB,EAAY,EAAG,EAAI,KAAK,EAAE,EAC9ET,EAAI,KAAA,EAGJA,EAAI,yBAA2B,UAC/BA,EAAI,YAAc0B,EAAY,GAG9B1B,EAAI,UAAA,EACJA,EAAI,IAAIyB,EAAU,SAAS,EAAGA,EAAU,SAAS,EAAGhB,EAAY,EAAG,EAAI,KAAK,EAAE,EAC9ET,EAAI,KAAA,EAGJA,EAAI,QAAA,EAGG,IACT,EAAG,CAAA,CAAE,EAGCmC,EAAmBvC,EAAAA,YAAY,CAAC6B,EAAsBC,IAAsB,CAChF,GAAI,CAAC/C,EAAe,MAAO,CAAE,MAAO8C,EAAU,WAAY,KAAM,CAAA,EAEhE,MAAM5B,EAASpB,EAAU,QACzB,GAAI,CAACoB,EAAQ,MAAO,CAAE,MAAO4B,EAAU,WAAY,KAAM,CAAA,EAGzD,MAAMW,EAAO,KAAK,KAChB,KAAK,IAAIX,EAAU,SAAS,EAAI9C,EAAc,SAAS,EAAG,CAAC,EAC3D,KAAK,IAAI8C,EAAU,SAAS,EAAI9C,EAAc,SAAS,EAAG,CAAC,CAAA,EAGvD0D,EAAUxC,EAAO,MAAQ,GACzByC,EAAiB,KAAK,IAAI,EAAGF,EAAOC,CAAO,EAG3C/F,EAAM4E,EAASO,EAAU,UAAU,EACzC,GAAI,CAACnF,EAAK,MAAO,CAAE,MAAOmF,EAAU,WAAY,KAAM,CAAA,EAEtD,MAAMc,EAAsBD,EAAiBZ,EAAY,GACnDc,EAAoBF,EAAiBZ,EAAY,GAGjDe,EAAMpB,EAAS/E,EAAI,EAAGA,EAAI,EAAGA,EAAI,CAAC,EACxCmG,EAAI,GAAM,EAAIF,EACdE,EAAI,EAAI,KAAK,IAAI,IAAKA,EAAI,EAAID,EAAoB,GAAG,EAErD,MAAME,EAAcvE,GAASsE,EAAI,EAAGA,EAAI,EAAGA,EAAI,CAAC,EAC1CE,EAAgB,OAAOD,EAAY,CAAC,CAAC,KAAKA,EAAY,CAAC,CAAC,KAAKA,EAAY,CAAC,CAAC,IAG3EE,EAAiB,GAAK,EAAIN,GAAkBZ,EAAY,GAE9D,MAAO,CAAE,MAAOiB,EAAe,KAAMC,CAAA,CACvC,EAAG,CAACjE,CAAa,CAAC,EAGZkE,GAAqBjD,EAAAA,YAAY,CAACI,EAA+ByB,EAAsBhB,IAAuB,CAClH,KAAM,CAAE,cAAAqC,GAAkBxE,EAC1B,GAAI,CAACwE,EAAc,QAAS,MAAO,CAAE,MAAOrB,EAAU,WAAY,KAAMhB,EAAY,SAAU,KAAM,YAAa,EAAA,EAEjH,IAAIO,EAAaS,EAAU,WACvBsB,EAAYtC,EAChB,MAAMqB,EAAW,KACjB,IAAIkB,EAAc,GAElB,OAAQF,EAAc,KAAA,CACpB,IAAK,eAEHtB,EAAgBxB,EAAKyB,EAAWhB,EAAYqC,EAAc,SAAS,EACnEE,EAAc,GACd,MAEF,IAAK,QAAS,CACZ,MAAM5B,EAASe,EAAiBV,EAAWqB,EAAc,SAAS,EAClE9B,EAAaI,EAAO,MACpB2B,EAAYtC,EAAaW,EAAO,KAChC,KACF,CAGE,CAGJ,MAAO,CAAE,MAAOJ,EAAY,KAAM+B,EAAW,SAAAjB,EAAU,YAAAkB,CAAA,CACzD,EAAG,CAAC1E,EAAqBkD,EAAiBW,CAAgB,CAAC,EAGrDc,GAA8B,CAACjD,EAA+BF,EAAcxB,IAA6C,OAC7H,MAAM4E,EAAc,KAAK,IAAI,EAAG,KAAK,MAAMpD,EAAO,IAAK,CAAC,EAClDlD,EAAQ,KAAK,IAAI,GAAK0B,EAAoB,cAAc,UAAY,EAAG,EACvE6E,IAAgB7E,EAAAA,EAAoB,cAAc,QAAQ,SAA1CA,YAAAA,EAAkD,gBAAiB,YAGzF,IAAI8E,EACJ,OAAQD,EAAA,CACN,IAAK,YACL,IAAK,WAAYC,EAAU,qBAAqBxG,CAAK,IAAK,MAC1D,IAAK,YACL,IAAK,aAAcwG,EAAU,qBAAqBxG,CAAK,IAAK,MAC5D,IAAK,WACL,IAAK,aAAcwG,EAAU,qBAAqBxG,CAAK,IAAK,KAAA,CAG9DoD,EAAI,KAAA,EACJA,EAAI,UAAYoD,EAGhB,QAAS7J,EAAI,EAAGA,EAAIuG,EAAMvG,GAAK2J,EAAc,EAC3ClD,EAAI,SAASzG,EAAG,EAAG2J,EAAapD,CAAI,EAGtCE,EAAI,QAAA,CACN,EAEMqD,GAA8B,CAACrD,EAA+BF,EAAcxB,IAA6C,OAC7H,MAAM4E,EAAc,KAAK,IAAI,EAAG,KAAK,MAAMpD,EAAO,IAAK,CAAC,EAClDlD,EAAQ,KAAK,IAAI,GAAK0B,EAAoB,cAAc,UAAY,EAAG,EACvE6E,IAAgB7E,EAAAA,EAAoB,cAAc,QAAQ,SAA1CA,YAAAA,EAAkD,gBAAiB,YAGzF,IAAIgF,EACJ,OAAQH,EAAA,CACN,IAAK,YACL,IAAK,aAAcG,EAAU,qBAAqB1G,CAAK,IAAK,MAC5D,IAAK,YACL,IAAK,WAAY0G,EAAU,qBAAqB1G,CAAK,IAAK,MAC1D,IAAK,WACL,IAAK,aAAc0G,EAAU,qBAAqB1G,CAAK,IAAK,KAAA,CAG9DoD,EAAI,KAAA,EACJA,EAAI,UAAYsD,EAGhB,QAAS/J,EAAI2J,EAAa3J,EAAIuG,EAAMvG,GAAK2J,EAAc,EACrDlD,EAAI,SAASzG,EAAG,EAAG2J,EAAapD,CAAI,EAGtCE,EAAI,QAAA,CACN,EAGMuD,GAAmB,CAACvD,EAA+ByB,EAAsBhB,EAAoBiB,IAAsB,CACvH,MAAM8B,EAAS9B,EAAY,EAwB3B,GArBA1B,EAAI,UAAA,EACJA,EAAI,IAAIyB,EAAU,SAAS,EAAGA,EAAU,SAAS,EAAGhB,EAAY,EAAG,KAAK,GAAK,CAAC,EAC9ET,EAAI,UAAYyB,EAAU,WAC1BzB,EAAI,KAAA,EAGJA,EAAI,YAAc,GAGlBA,EAAI,UAAA,EACJA,EAAI,IAAIyB,EAAU,SAAS,EAAI+B,EAAQ/B,EAAU,SAAS,EAAGhB,EAAY,EAAG,KAAK,GAAK,CAAC,EACvFT,EAAI,UAAY,yBAChBA,EAAI,KAAA,EAGJA,EAAI,UAAA,EACJA,EAAI,IAAIyB,EAAU,SAAS,EAAI+B,EAAQ/B,EAAU,SAAS,EAAGhB,EAAY,EAAG,KAAK,GAAK,CAAC,EACvFT,EAAI,UAAY,0BAChBA,EAAI,KAAA,EAGA0B,EAAY,GAAK,CACnB1B,EAAI,YAAc,GAClB,MAAMyD,EAAcD,EAAS,GAG7BxD,EAAI,UAAA,EACJA,EAAI,IAAIyB,EAAU,SAAS,EAAGA,EAAU,SAAS,EAAIgC,EAAahD,EAAY,EAAG,KAAK,GAAK,CAAC,EAC5FT,EAAI,UAAY,yBAChBA,EAAI,KAAA,EAEJA,EAAI,UAAA,EACJA,EAAI,IAAIyB,EAAU,SAAS,EAAGA,EAAU,SAAS,EAAIgC,EAAahD,EAAY,EAAG,KAAK,GAAK,CAAC,EAC5FT,EAAI,UAAY,0BAChBA,EAAI,KAAA,CACN,CAEAA,EAAI,YAAc,CACpB,EAGM0D,EAAiB9D,EAAAA,YAAY,IAAM,CACvC,MAAMC,EAASpB,EAAU,QACzB,GAAI,CAACoB,GAAUb,EAAU,SAAW,EAAG,OAEvC,MAAMgB,EAAMH,EAAO,WAAW,IAAI,EAClC,GAAI,CAACG,EAAK,OAGV,MAAMF,EAAOT,EAGbW,EAAI,UAAY,UAChBA,EAAI,SAAS,EAAG,EAAGF,EAAMA,CAAI,EAGzBxB,EAAoB,cAAc,SAAWA,EAAoB,cAAc,OAAS,UAC1F2E,GAA4BjD,EAAKF,EAAMxB,CAAmB,EAI5D,MAAM6B,EAAaL,EAAO,EAAI,GACxBO,EAAc,CAClBF,EAAa,KACbA,EAAa,IACbA,EAAa,KACbA,EAAa,KACbA,EAAa,KACbA,EAAa,IAAA,EAIfnB,EAAU,QAAQyC,GAAa,CAE7B,GAAIA,EAAU,OAAS,EAAG,OAG1B,IAAIhB,EAAaJ,EAAYoB,EAAU,KAAO,CAAC,EAG/C,MAAMkC,EAAed,GAAmB7C,EAAKyB,EAAWhB,CAAU,EAClEA,EAAakD,EAAa,KAGtB,CAAAA,EAAa,cAKbrF,EAAoB,cAAc,SAAWA,EAAoB,cAAc,OAAS,eAC1F0B,EAAI,YAAc2D,EAAa,MAC/B3D,EAAI,WAAa1B,EAAoB,cAAc,UAAY,GAC/D0B,EAAI,cAAgB,EACpBA,EAAI,cAAgB,GAIlB1B,EAAoB,cAAc,SAAWA,EAAoB,cAAc,OAAS,SAC1FiF,GAAiBvD,EAAKyB,EAAWhB,EAAYnC,EAAoB,cAAc,SAAS,GAGxF0B,EAAI,UAAA,EACJA,EAAI,IAAIyB,EAAU,SAAS,EAAGA,EAAU,SAAS,EAAGhB,EAAY,EAAG,KAAK,GAAK,CAAC,EAG9ET,EAAI,UAAY2D,EAAa,MAC7B3D,EAAI,KAAA,GAINA,EAAI,WAAa,EACnB,CAAC,EAGG1B,EAAoB,cAAc,SAAWA,EAAoB,cAAc,OAAS,UAC1F+E,GAA4BrD,EAAKF,EAAMxB,CAAmB,CAE9D,EAAG,CAACU,EAAWV,EAAqBuE,GAAoBxD,CAAU,CAAC,EAInEuE,EAAAA,UAAU,IAAM,CACd,GAAI,CAAC1E,EAAe,CAClB,MAAMoB,EAAeX,EAAA,EACrBV,EAAaqB,CAAY,EACzBnB,EAAiB,EAAI,CACvB,CACF,EAAG,CAACD,EAAeS,CAAkB,CAAC,EAGtCiE,EAAAA,UAAU,IAAM,CACd,MAAMC,EAAe,IAAM,CACzB,MAAMC,EAAU,KAAK,IAAI,OAAO,WAAa,GAAI,GAAG,EACpDxE,EAAcwE,CAAO,CACvB,EAEA,cAAO,iBAAiB,SAAUD,CAAY,EACvC,IAAM,OAAO,oBAAoB,SAAUA,CAAY,CAChE,EAAG,CAAA,CAAE,EAGLD,EAAAA,UAAU,IAAM,CACd,GAAI1E,EAAe,CACjB,MAAMoB,EAAeX,EAAA,EACrBV,EAAaqB,CAAY,CAC3B,CACF,EAAG,CAAChC,EAAqBqB,EAAoBT,CAAa,CAAC,EAG3D0E,EAAAA,UAAU,IAAM,CACV5E,EAAU,OAAS,GACrB0E,EAAA,CAEJ,EAAG,CAAC1E,EAAW0E,EAAgB/E,EAAeG,CAAa,CAAC,EAG5D8E,EAAAA,UAAU,IAAM,CACVjF,GAAiBL,EAAoB,cAAc,SACnDA,EAAoB,cAAc,OAAS,SAAWU,EAAU,OAAS,GAE3E0E,EAAA,CAEJ,EAAG,CAAC/E,EAAeL,EAAoB,cAAc,QAASA,EAAoB,cAAc,KAAMU,EAAU,OAAQ0E,CAAc,CAAC,EAGvI,MAAMK,EAAoBnE,cAAaoE,GAAqB,CAG1D,MAAMC,EAAY,CAChB,GAAI,KAAK,MAAQ,KAAK,OAAA,EACtB,EAAGD,EAAM,SAAS,EAClB,EAAGA,EAAM,SAAS,EAClB,OAAQ,GACR,QAAS,EACT,MAAO,OAAOA,EAAM,GAAG,KAAKA,EAAM,UAAU,MAAMA,EAAM,SAAS,KACjE,UAAW,KAAK,IAAA,EAChB,aAAA,EAGFxE,EAAW0E,GAAQ,CAAC,GAAGA,EAAMD,CAAS,CAAC,CACzC,EAAG,CAAA,CAAE,EAGCE,GAAsBvE,cAAaoE,GAAqB,CAC5D,MAAMI,EAUD,CAAA,EAGL,QAASnK,EAAI,EAAGA,EAAI,EAAeA,IAAK,CACtC,MAAM4G,EAAS5G,EAAI,EAAiB,KAAK,GAAK,GAAK,KAAK,OAAA,EAAW,IAAO,GACpEoK,EAAQ,EAAI,KAAK,OAAA,EAAW,EAG5BC,EAAgBN,EAAM,OAAS,EACjC,UACA,OAAOA,EAAM,GAAG,KAAK,KAAK,IAAI,IAAKA,EAAM,WAAa,EAAE,CAAC,MAAM,KAAK,IAAI,GAAIA,EAAM,UAAY,EAAE,CAAC,KAE/FO,EAAeP,EAAM,OAAS,EAChC,EAAI,KAAK,OAAA,EAAW,EACpB,EAAI,KAAK,OAAA,EAAW,EAExBI,EAAa,KAAK,CAChB,GAAI,KAAK,IAAA,EAAQnK,EACjB,EAAG+J,EAAM,SAAS,EAClB,EAAGA,EAAM,SAAS,EAClB,GAAI,KAAK,IAAInD,CAAK,EAAIwD,EACtB,GAAI,KAAK,IAAIxD,CAAK,EAAIwD,EACtB,KAAM,EACN,QAAS,IAAM,KAAK,OAAA,EAAW,IAC/B,KAAME,EACN,MAAOD,CAAA,CACR,CACH,CAEA5E,KAAqB,CAAC,GAAGwE,EAAM,GAAGE,CAAY,CAAC,CACjD,EAAG,CAAA,CAAE,EAGCI,GAAoB5E,cAAa6E,GAA+C,CACpF,MAAM5E,EAASpB,EAAU,QACzB,GAAI,CAACoB,EAAQ,OAEb,MAAM6E,EAAO7E,EAAO,sBAAA,EACd8E,EAASF,EAAM,QAAUC,EAAK,KAC9BE,EAASH,EAAM,QAAUC,EAAK,IAG9BG,EAASxF,EAAaqF,EAAK,MAC3BI,EAASzF,EAAaqF,EAAK,OAC3BK,EAAUJ,EAASE,EACnBG,EAAUJ,EAASE,EAGzB,IAAIG,EAAiC,KACjCC,EAAc,IAElBlG,EAAU,QAAQgF,GAAS,CACzB,MAAMmB,EAAW,KAAK,KACpB,KAAK,IAAIJ,EAAUf,EAAM,SAAS,EAAG,CAAC,EACtC,KAAK,IAAIgB,EAAUhB,EAAM,SAAS,EAAG,CAAC,CAAA,EAEpCmB,EAAWD,IACbA,EAAcC,EACdF,EAAejB,EAEnB,CAAC,EAGGiB,GAAgBC,EAAc,KAE5B5G,EAAoB,cAAc,SAAWA,EAAoB,cAAc,OAAS,SAC1FM,EAAiBqG,CAAY,EAEzBnG,GACFiF,EAAkBkB,CAAY,IAGhCrG,EAAiBqG,CAAY,EAEzBnG,IACFiF,EAAkBkB,CAAY,EAC9Bd,GAAoBc,CAAY,IAIxC,EAAG,CAACjG,EAAWF,EAAeiF,EAAmBI,GAAqB7F,EAAqBe,CAAU,CAAC,EAGhG+F,GAAiBxF,EAAAA,YAAY,IAAM,CACvC,MAAMyF,EAAc,KAAK,IAAA,EAGnBC,EAAgBnK,GAAc,EAAI,KAAK,IAAI,EAAIA,EAAG,CAAC,EAGzDqE,EAAW0E,GAAQA,EAAK,IAAIqB,GAAU,CAEpC,MAAMC,GADUH,EAAcE,EAAO,WACV,IAE3B,GAAIC,GAAY,EAAG,OAAO,KAE1B,MAAMC,EAAcF,EAAO,OACrBG,EAAYH,EAAO,WAAa,GAGhCI,EAAgBL,EAAaE,CAAQ,EAE3C,MAAO,CACL,GAAGD,EACH,OAAQE,EAAcE,GAAiBD,EAAYD,GACnD,QAAS,KAAK,IAAI,CAACD,EAAW,CAAC,EAAID,EAAO,OAAA,CAE9C,CAAC,EAAE,OAAQA,GAAiDA,IAAW,IAAI,CAAC,EAG5E7F,EAAawE,GAAQA,EAAK,IAAI0B,GAAY,CACxC,MAAM/F,EAASpB,EAAU,QACzB,GAAI,CAACoB,EAAQ,OAAO,KAEpB,MAAMgG,EAAOD,EAAS,EAAIA,EAAS,GAC7BE,EAAOF,EAAS,EAAIA,EAAS,GAC7BG,EAAUH,EAAS,KAAO,EAAEA,EAAS,QAG3C,OAAIG,GAAW,GACXF,EAAO,CAACD,EAAS,MAAQC,EAAOhG,EAAO,MAAQ+F,EAAS,MACxDE,EAAO,CAACF,EAAS,MAAQE,EAAOjG,EAAO,OAAS+F,EAAS,KACpD,KAGF,CACL,GAAGA,EACH,EAAGC,EACH,EAAGC,EACH,KAAMC,EACN,GAAIH,EAAS,GAAK,KAClB,GAAIA,EAAS,GAAK,IAAA,CAEtB,CAAC,EAAE,OAAQA,GAAuDA,IAAa,IAAI,CAAC,CACtF,EAAG,CAAA,CAAE,EAGCI,GAAcpG,EAAAA,YAAY,IAAM,CACpC,MAAMC,EAASpB,EAAU,QACzB,GAAI,CAACoB,GAAWN,EAAQ,SAAW,GAAKE,EAAU,SAAW,EAAI,OAEjE,MAAMO,EAAMH,EAAO,WAAW,IAAI,EAC7BG,IAGLT,EAAQ,QAAQgG,GAAU,CACxBvF,EAAI,UAAA,EACJA,EAAI,IAAIuF,EAAO,EAAGA,EAAO,EAAGA,EAAO,OAAQ,EAAG,KAAK,GAAK,CAAC,EACzDvF,EAAI,YAAcuF,EAAO,MAGzB,MAAMC,GAAY,KAAK,IAAA,EAAQD,EAAO,WAAa,IAC7CU,EAAY,KAAK,IAAI,IAAK,GAAK,EAAIT,EAAW,GAAI,EACxDxF,EAAI,UAAYiG,EAEhBjG,EAAI,YAAcuF,EAAO,QACzBvF,EAAI,OAAA,CACN,CAAC,EAGDP,EAAU,QAAQmG,GAAY,CACxBA,EAAS,KAAO,MAClB5F,EAAI,UAAA,EACJA,EAAI,IAAI4F,EAAS,EAAGA,EAAS,EAAGA,EAAS,KAAM,EAAG,KAAK,GAAK,CAAC,EAC7D5F,EAAI,UAAY4F,EAAS,MACzB5F,EAAI,YAAc,KAAK,IAAI,EAAG4F,EAAS,IAAI,EAC3C5F,EAAI,KAAA,EAGJA,EAAI,YAAc4F,EAAS,MAC3B5F,EAAI,WAAa,EACjBA,EAAI,KAAA,EACJA,EAAI,WAAa,EAErB,CAAC,EAEDA,EAAI,YAAc,EACpB,EAAG,CAACT,EAASE,CAAS,CAAC,EAGjByG,EAAoBxH,EAAAA,OAAA,EAEpByH,EAAgBvG,EAAAA,YAAY,IAAM,CACtC,GAAI,CAACd,GAAkBS,EAAQ,SAAW,GAAKE,EAAU,SAAW,EAClE,OAGF,MAAMI,EAASpB,EAAU,QACzB,GAAI,CAACoB,EAAQ,OAEb,MAAMG,EAAMH,EAAO,WAAW,IAAI,EAC7BG,IAGLA,EAAI,UAAU,EAAG,EAAGH,EAAO,MAAOA,EAAO,MAAM,EAG/C6D,EAAA,EAGA0B,GAAA,EAGAY,GAAA,EAGAE,EAAkB,QAAU,sBAAsBC,CAAa,EACjE,EAAG,CAACrH,EAAeS,EAAQ,OAAQE,EAAU,OAAQiE,EAAgB0B,GAAgBY,EAAW,CAAC,EAGjGpC,OAAAA,EAAAA,UAAU,KACJ9E,IAAkBS,EAAQ,OAAS,GAAKE,EAAU,OAAS,GAC7DyG,EAAkB,QAAU,sBAAsBC,CAAa,EAE3DD,EAAkB,SACpB,qBAAqBA,EAAkB,OAAO,EAI3C,IAAM,CACPA,EAAkB,SACpB,qBAAqBA,EAAkB,OAAO,CAElD,GACC,CAACpH,EAAeS,EAAQ,OAAQE,EAAU,OAAQ0G,CAAa,CAAC,EAGjEC,EAAAA,KAAC,MAAA,CAAI,MAAO,CAAE,QAAS,OAAQ,cAAe,SAAU,WAAY,SAAU,IAAK,QAAA,EAEjF,SAAA,CAAAC,MAAC,OAAI,MAAO,CACV,QAAS,OACT,eAAgB,SAChB,WAAY,SACZ,WAAY,UACZ,aAAc,OACd,UAAW,kCACX,QAAS,QAAA,EAET,SAAAA,EAAAA,IAAC,SAAA,CACC,IAAK5H,EACL,QAAS+F,GACT,aAAW,aACX,MAAOnF,EACP,OAAQA,EACR,MAAO,CACL,QAAS,QACT,MAAO,GAAGA,CAAU,KACpB,OAAQ,GAAGA,CAAU,KACrB,OAAQ,SAAA,CACV,CAAA,EAEJ,EAGA+G,OAAC,OAAI,MAAO,CACV,QAAS,OACT,WAAY,SACZ,IAAK,SACL,WAAY,4BACZ,QAAS,OACT,aAAc,SACd,UAAW,+BACX,OAAQ,8BAAA,EAER,SAAA,CAAAC,EAAAA,IAAC,QAAA,CACC,KAAK,WACL,GAAG,gBACH,QAASvH,EACT,SAAWhG,GAAMiG,EAAiBjG,EAAE,OAAO,OAAO,EAClD,MAAO,CACL,MAAO,OACP,OAAQ,OACR,OAAQ,SAAA,CACV,CAAA,EAEFuN,EAAAA,IAAC,QAAA,CACC,QAAQ,gBACR,MAAO,CACL,SAAU,WACV,OAAQ,UACR,WAAY,OACZ,MAAO,MAAA,EAEV,SAAA,eAAA,CAAA,CAED,CAAA,CACF,CAAA,EACF,CAEJ,EC/7BaC,GAA4C,CAAC,CACxD,oBAAAhI,EACA,MAAAC,EACA,OAAAC,CACF,IAEI4H,EAAAA,KAAC,OAAI,MAAO,CACV,QAAS,OACT,eAAgB,SAChB,WAAY,SACZ,QAAS,GAAA,EAET,SAAA,CAAAC,EAAAA,IAAChI,GAAA,CAAW,oBAAAC,EAA0C,MAAAC,EAAc,OAAAC,CAAA,CAAgB,EACnFF,EAAoB,WAAW,oBAC9B+H,EAAAA,IAAC,OAAI,MAAO,CACV,SAAU,WACV,OAAQ,OACR,KAAM,MACN,UAAW,mBACX,QAAS,cACT,WAAY,4BACZ,aAAc,SACd,UAAW,SACX,OAAQ,oBACR,eAAgB,YAChB,UAAW,iCAAA,EAEX,SAAAD,EAAAA,KAAC,OAAA,CAAK,MAAO,CACX,SAAU,WACV,MAAO,UACP,WAAY,KAAA,EAEX,SAAA,CAAA9H,EAAoB,WAAW,eAC9B8H,EAAAA,KAAAG,EAAAA,SAAA,CACG,SAAA,CAAAjI,EAAoB,WAAW,iBAAmB,gBAAkB,QACpEA,EAAoB,WAAW,iBAAmB,cAAgB,OAClEA,EAAoB,WAAW,iBAAmB,cAAgB,OAAO,cAC9DA,EAAoB,WAAW,SAAW,KAAK,QAAQ,CAAC,EAAE,IAAA,EACxE,EAEDA,EAAoB,WAAW,eAC9B8H,EAAAA,KAAAG,EAAAA,SAAA,CACG,SAAA,CAAAjI,EAAoB,WAAW,eAAiB,MAAM,aAC5CA,EAAoB,WAAW,SAAW,KAAK,QAAQ,CAAC,EAAE,IAAA,CAAA,CACvE,CAAA,CAAA,CAEJ,CAAA,CACF,CAAA,EAEJ,EC0CG,SAASkI,EAAMC,EAAelF,EAAaD,EAAqB,CACrE,OAAO,KAAK,IAAI,KAAK,IAAImF,EAAOlF,CAAG,EAAGD,CAAG,CAC3C,CC/FO,MAAMoF,GAA8C,CAAC,CAC1D,oBAAApI,EACA,4BAAAqI,CACF,IAAM,OAGJ,MAAMC,EAAyBhH,EAAAA,YAAY,IAAM,CAC/C+G,EAA4B,CAC1B,GAAGrI,EACH,WAAY,CACV,GAAGA,EAAoB,WACvB,cAAe,CAACA,EAAoB,WAAW,aAAA,CACjD,CACD,CACH,EAAG,CAACA,EAAqBqI,CAA2B,CAAC,EAE/CE,EAA6BjH,cAAakH,GAA0B,CACxEH,EAA4B,CAC1B,GAAGrI,EACH,WAAY,CACV,GAAGA,EAAoB,WACvB,eAAgBwI,CAAA,CAClB,CACD,CACH,EAAG,CAACxI,EAAqBqI,CAA2B,CAAC,EAE/CI,EAAiCnH,cAAarD,GAAqB,CACvEoK,EAA4B,CAC1B,GAAGrI,EACH,WAAY,CACV,GAAGA,EAAoB,WACvB,SAAUkI,EAAMjK,EAAU,EAAG,CAAC,CAAA,CAChC,CACD,CACH,EAAG,CAAC+B,EAAqBqI,CAA2B,CAAC,EAG/CK,EAAyBpH,EAAAA,YAAY,IAAM,CAC/C+G,EAA4B,CAC1B,GAAGrI,EACH,WAAY,CACV,GAAGA,EAAoB,WACvB,cAAe,CAACA,EAAoB,WAAW,aAAA,CACjD,CACD,CACH,EAAG,CAACA,EAAqBqI,CAA2B,CAAC,EAE/CM,EAA6BrH,cAAakH,GAA0B,CACxEH,EAA4B,CAC1B,GAAGrI,EACH,WAAY,CACV,GAAGA,EAAoB,WACvB,eAAgBwI,CAAA,CAClB,CACD,CACH,EAAG,CAACxI,EAAqBqI,CAA2B,CAAC,EAE/CO,EAAiCtH,cAAaxC,GAAqB,CACvEuJ,EAA4B,CAC1B,GAAGrI,EACH,WAAY,CACV,GAAGA,EAAoB,WACvB,SAAUkI,EAAMpJ,EAAU,EAAG,CAAC,CAAA,CAChC,CACD,CACH,EAAG,CAACkB,EAAqBqI,CAA2B,CAAC,EAE/CQ,EAAiCvH,cAAavC,GAAiC,CACnFsJ,EAA4B,CAC1B,GAAGrI,EACH,WAAY,CACV,GAAGA,EAAoB,WACvB,SAAUjB,IAAa,OAAYmJ,EAAMnJ,EAAU,EAAG,CAAC,EAAI,MAAA,CAC7D,CACD,CACH,EAAG,CAACiB,EAAqBqI,CAA2B,CAAC,EAG/CS,EAA4BxH,EAAAA,YAAY,IAAM,CAClD+G,EAA4B,CAC1B,GAAGrI,EACH,cAAe,CACb,GAAGA,EAAoB,cACvB,QAAS,CAACA,EAAoB,cAAc,OAAA,CAC9C,CACD,CACH,EAAG,CAACA,EAAqBqI,CAA2B,CAAC,EAE/CU,EAAgCzH,cAAakH,GAA4B,CAC7EH,EAA4B,CAC1B,GAAGrI,EACH,cAAe,CACb,GAAGA,EAAoB,cACvB,KAAAwI,CAAA,CACF,CACD,CACH,EAAG,CAACxI,EAAqBqI,CAA2B,CAAC,EAE/CW,EAAqC1H,cAAa8B,GAAsB,CAC5EiF,EAA4B,CAC1B,GAAGrI,EACH,cAAe,CACb,GAAGA,EAAoB,cACvB,UAAWkI,EAAM9E,EAAW,EAAG,CAAC,CAAA,CAClC,CACD,CACH,EAAG,CAACpD,EAAqBqI,CAA2B,CAAC,EAKrD,OACEP,EAAAA,KAAC,OAAI,MAAO,CACV,WAAY,UACZ,aAAc,OACd,QAAS,SACT,UAAW,kCACX,SAAU,QACV,MAAO,MAAA,EAIP,SAAA,CAAAA,OAAC,OAAI,MAAO,CACV,aAAc,SACd,QAAS,OACT,WAAY,UACZ,aAAc,SACd,OAAQ,mBAAA,EAER,SAAA,CAAAC,MAAC,MAAG,MAAO,CACT,SAAU,OACV,OAAQ,aACR,MAAO,SAAA,EACN,SAAA,aAAU,EAEbA,EAAAA,IAAC,OAAI,MAAO,CAAE,aAAc,MAAA,EAC1B,SAAAD,EAAAA,KAAC,QAAA,CAAM,MAAO,CACZ,QAAS,OACT,WAAY,SACZ,IAAK,SACL,OAAQ,SAAA,EAER,SAAA,CAAAC,EAAAA,IAAC,QAAA,CACC,KAAK,WACL,QAAS/H,EAAoB,WAAW,cACxC,SAAUsI,EACV,MAAO,CAAE,YAAa,SAAA,CAAU,CAAA,EAElCP,EAAAA,IAAC,QAAK,MAAO,CAAE,SAAU,WAAY,WAAY,KAAA,EAAS,SAAA,kBAAA,CAE1D,CAAA,CAAA,CACF,CAAA,CACF,EAEC/H,EAAoB,WAAW,eAC9B8H,EAAAA,KAAAG,EAAAA,SAAA,CACE,SAAA,CAAAH,EAAAA,KAAC,MAAA,CAAI,MAAO,CAAE,aAAc,QAC1B,SAAA,CAAAC,MAAC,SAAM,MAAO,CACZ,QAAS,QACT,SAAU,WACV,WAAY,MACZ,aAAc,QAAA,EACb,SAAA,eAEH,EACAD,EAAAA,KAAC,SAAA,CACC,MAAO9H,EAAoB,WAAW,eACtC,SAAWxF,GAAM+N,EAA2B/N,EAAE,OAAO,KAAwB,EAC7E,MAAO,CACL,MAAO,OACP,QAAS,SACT,OAAQ,oBACR,aAAc,WACd,SAAU,UAAA,EAGZ,SAAA,CAAAuN,EAAAA,IAAC,SAAA,CAAO,MAAM,eAAe,SAAA,eAAY,EACzCA,EAAAA,IAAC,SAAA,CAAO,MAAM,aAAa,SAAA,cAAW,EACtCA,EAAAA,IAAC,SAAA,CAAO,MAAM,aAAa,SAAA,aAAA,CAAW,CAAA,CAAA,CAAA,CACxC,EACF,SAEC,MAAA,CAAI,MAAO,CAAE,aAAc,QAC1B,SAAA,CAAAD,OAAC,SAAM,MAAO,CACZ,QAAS,QACT,SAAU,WACV,WAAY,MACZ,aAAc,QAAA,EACb,SAAA,CAAA,gBACa9H,EAAoB,WAAW,SAAW,KAAK,QAAQ,CAAC,EAAE,GAAA,EAC1E,EACA+H,EAAAA,IAAC,QAAA,CACC,KAAK,QACL,IAAI,IACJ,IAAI,IACJ,KAAK,MACL,MAAO/H,EAAoB,WAAW,SACtC,SAAWxF,GAAMiO,EAA+B,OAAOjO,EAAE,OAAO,KAAK,CAAC,EACtE,MAAO,CACL,MAAO,OACP,OAAQ,KAAA,CACV,CAAA,CACF,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EAEJ,EAGAsN,OAAC,OAAI,MAAO,CACV,aAAc,SACd,QAAS,OACT,WAAY,UACZ,aAAc,SACd,OAAQ,mBAAA,EAER,SAAA,CAAAC,MAAC,MAAG,MAAO,CACT,SAAU,OACV,OAAQ,aACR,MAAO,SAAA,EACN,SAAA,YAAS,EAEZA,EAAAA,IAAC,OAAI,MAAO,CAAE,aAAc,MAAA,EAC1B,SAAAD,EAAAA,KAAC,QAAA,CAAM,MAAO,CACZ,QAAS,OACT,WAAY,SACZ,IAAK,SACL,OAAQ,SAAA,EAER,SAAA,CAAAC,EAAAA,IAAC,QAAA,CACC,KAAK,WACL,QAAS/H,EAAoB,WAAW,cACxC,SAAU0I,EACV,MAAO,CAAE,YAAa,SAAA,CAAU,CAAA,EAElCX,EAAAA,IAAC,QAAK,MAAO,CAAE,SAAU,WAAY,WAAY,KAAA,EAAS,SAAA,YAAA,CAE1D,CAAA,CAAA,CACF,CAAA,CACF,EAEC/H,EAAoB,WAAW,eAC9B8H,EAAAA,KAAAG,EAAAA,SAAA,CACE,SAAA,CAAAH,EAAAA,KAAC,MAAA,CAAI,MAAO,CAAE,aAAc,QAC1B,SAAA,CAAAC,MAAC,SAAM,MAAO,CACZ,QAAS,QACT,SAAU,WACV,WAAY,MACZ,aAAc,QAAA,EACb,SAAA,QAEH,EACAD,EAAAA,KAAC,SAAA,CACC,MAAO9H,EAAoB,WAAW,eACtC,SAAWxF,GAAMmO,EAA2BnO,EAAE,OAAO,KAAwB,EAC7E,MAAO,CACL,MAAO,OACP,QAAS,SACT,OAAQ,oBACR,aAAc,WACd,SAAU,UAAA,EAGZ,SAAA,CAAAuN,EAAAA,IAAC,SAAA,CAAO,MAAM,eAAe,SAAA,eAAY,EACzCA,EAAAA,IAAC,SAAA,CAAO,MAAM,aAAa,SAAA,cAAW,EACtCA,EAAAA,IAAC,SAAA,CAAO,MAAM,aAAa,SAAA,aAAA,CAAW,CAAA,CAAA,CAAA,CACxC,EACF,SAEC,MAAA,CAAI,MAAO,CAAE,aAAc,QAC1B,SAAA,CAAAD,OAAC,SAAM,MAAO,CACZ,QAAS,QACT,SAAU,WACV,WAAY,MACZ,aAAc,QAAA,EACb,SAAA,CAAA,UACO9H,EAAoB,WAAW,SAAW,KAAK,QAAQ,CAAC,EAAE,GAAA,EACpE,EACA+H,EAAAA,IAAC,QAAA,CACC,KAAK,QACL,IAAI,IACJ,IAAI,IACJ,KAAK,MACL,MAAO/H,EAAoB,WAAW,SACtC,SAAWxF,GAAMoO,EAA+B,OAAOpO,EAAE,OAAO,KAAK,CAAC,EACtE,MAAO,CACL,MAAO,OACP,OAAQ,KAAA,CACV,CAAA,CACF,EACF,SAEC,MAAA,CAAI,MAAO,CAAE,aAAc,QAC1B,SAAA,CAAAsN,OAAC,OAAI,MAAO,CACV,QAAS,OACT,WAAY,SACZ,eAAgB,gBAChB,aAAc,QAAA,EAEd,SAAA,CAAAA,OAAC,SAAM,MAAO,CACZ,QAAS,QACT,SAAU,WACV,WAAY,KAAA,EACX,SAAA,CAAA,aACU9H,EAAoB,WAAW,WAAa,QAAaA,EAAoB,WAAW,SAAW,KAAK,QAAQ,CAAC,EAAI,IAAM,IAAA,EACxI,EACCA,EAAoB,WAAW,WAAa,QAC3C+H,EAAAA,IAAC,SAAA,CACC,QAAS,IAAMc,EAA+B,MAAS,EACvD,MAAO,CACL,QAAS,iBACT,SAAU,UACV,WAAY,UACZ,OAAQ,OACR,aAAc,UACd,OAAQ,SAAA,EAEX,SAAA,OAAA,CAAA,CAED,EAEJ,EACAd,EAAAA,IAAC,QAAA,CACC,KAAK,QACL,IAAI,IACJ,IAAI,IACJ,KAAK,OACL,MAAO/H,EAAoB,WAAW,UAAY,EAClD,SAAWxF,GAAMqO,EAA+B,OAAOrO,EAAE,OAAO,KAAK,CAAC,EACtE,MAAO,CACL,MAAO,OACP,OAAQ,KAAA,CACV,CAAA,EAEFuN,MAAC,OAAI,MAAO,CACV,SAAU,UACV,MAAO,UACP,UAAW,SAAA,EACV,SAAA,sCAAA,CAEH,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EAEJ,EAGAD,OAAC,OAAI,MAAO,CACV,aAAc,SACd,QAAS,OACT,WAAY,UACZ,aAAc,SACd,OAAQ,mBAAA,EAER,SAAA,CAAAC,MAAC,MAAG,MAAO,CACT,SAAU,OACV,OAAQ,aACR,MAAO,SAAA,EACN,SAAA,SAAM,EAETA,EAAAA,IAAC,OAAI,MAAO,CAAE,aAAc,MAAA,EAC1B,SAAAD,EAAAA,KAAC,QAAA,CAAM,MAAO,CACZ,QAAS,OACT,WAAY,SACZ,IAAK,SACL,OAAQ,SAAA,EAER,SAAA,CAAAC,EAAAA,IAAC,QAAA,CACC,KAAK,WACL,QAAS/H,EAAoB,cAAc,QAC3C,SAAU8I,EACV,MAAO,CAAE,YAAa,SAAA,CAAU,CAAA,EAElCf,EAAAA,IAAC,QAAK,MAAO,CAAE,SAAU,WAAY,WAAY,KAAA,EAAS,SAAA,cAAA,CAE1D,CAAA,CAAA,CACF,CAAA,CACF,EAEC/H,EAAoB,cAAc,SACjC8H,EAAAA,KAAAG,EAAAA,SAAA,CACE,SAAA,CAAAH,EAAAA,KAAC,MAAA,CAAI,MAAO,CAAE,aAAc,QAC1B,SAAA,CAAAC,MAAC,SAAM,MAAO,CACZ,QAAS,QACT,SAAU,WACV,WAAY,MACZ,aAAc,QAAA,EACb,SAAA,SAEH,EACAD,EAAAA,KAAC,SAAA,CACC,MAAO9H,EAAoB,cAAc,KACzC,SAAWxF,GAAMuO,EAA8BvO,EAAE,OAAO,KAA0B,EAClF,MAAO,CACL,MAAO,OACP,QAAS,SACT,OAAQ,oBACR,aAAc,WACd,SAAU,UAAA,EAGZ,SAAA,CAAAuN,EAAAA,IAAC,SAAA,CAAO,MAAM,eAAe,SAAA,cAAW,EACxCA,EAAAA,IAAC,SAAA,CAAO,MAAM,SAAS,SAAA,YAAS,EAChCA,EAAAA,IAAC,SAAA,CAAO,MAAM,QAAQ,SAAA,WAAQ,EAC9BA,EAAAA,IAAC,SAAA,CAAO,MAAM,aAAa,SAAA,gBAAa,EACxCA,EAAAA,IAAC,SAAA,CAAO,MAAM,SAAS,SAAA,WAAA,CAAS,CAAA,CAAA,CAAA,CAClC,EACF,SAEC,MAAA,CAAI,MAAO,CAAE,aAAc,QAC1B,SAAA,CAAAD,OAAC,SAAM,MAAO,CACZ,QAAS,QACT,SAAU,WACV,WAAY,MACZ,aAAc,QAAA,EACb,SAAA,CAAA,UACO9H,EAAoB,cAAc,UAAY,KAAK,QAAQ,CAAC,EAAE,GAAA,EACxE,EACA+H,EAAAA,IAAC,QAAA,CACC,KAAK,QACL,IAAI,IACJ,IAAI,IACJ,KAAK,MACL,MAAO/H,EAAoB,cAAc,UACzC,SAAWxF,GAAMwO,EAAmC,OAAOxO,EAAE,OAAO,KAAK,CAAC,EAC1E,MAAO,CACL,MAAO,OACP,OAAQ,KAAA,CACV,CAAA,CACF,EACF,EAGCwF,EAAoB,cAAc,OAAS,UAC1C8H,EAAAA,KAAC,OAAI,MAAO,CAAE,aAAc,MAAA,EAC1B,SAAA,CAAAC,MAAC,SAAM,MAAO,CACZ,QAAS,QACT,SAAU,WACV,WAAY,MACZ,aAAc,QAAA,EACb,SAAA,cAEH,EACAD,EAAAA,KAAC,SAAA,CACC,QAAOmB,EAAAjJ,EAAoB,cAAc,QAAQ,SAA1C,YAAAiJ,EAAkD,gBAAiB,YAC1E,SAAWzO,GAAM,OACf,MAAM0O,EAAa1O,EAAE,OAAO,MAC5B6N,EAA4B,CAC1B,GAAGrI,EACH,cAAe,CACb,GAAGA,EAAoB,cACvB,QAAS,CACP,GAAGA,EAAoB,cAAc,QACrC,OAAQ,CACN,cAAaiJ,EAAAjJ,EAAoB,cAAc,QAAQ,SAA1C,YAAAiJ,EAAkD,cAAe,EAC9E,cAAeC,CAAA,CACjB,CACF,CACF,CACD,CACH,EACA,MAAO,CACL,MAAO,OACP,QAAS,SACT,OAAQ,oBACR,aAAc,WACd,SAAU,UAAA,EAGZ,SAAA,CAAAnB,EAAAA,IAAC,SAAA,CAAO,MAAM,YAAY,SAAA,iBAAc,EACxCA,EAAAA,IAAC,SAAA,CAAO,MAAM,YAAY,SAAA,iBAAc,EACxCA,EAAAA,IAAC,SAAA,CAAO,MAAM,WAAW,SAAA,iBAAc,EACvCA,EAAAA,IAAC,SAAA,CAAO,MAAM,WAAW,SAAA,iBAAc,EACvCA,EAAAA,IAAC,SAAA,CAAO,MAAM,aAAa,SAAA,iBAAc,EACzCA,EAAAA,IAAC,SAAA,CAAO,MAAM,aAAa,SAAA,gBAAA,CAAc,CAAA,CAAA,CAAA,CAC3C,EACF,EAIFD,OAAC,OAAI,MAAO,CACV,SAAU,UACV,MAAO,UACP,WAAY,wBACZ,QAAS,SACT,aAAc,UACd,UAAW,MAAA,EAEV,SAAA,CAAA9H,EAAoB,cAAc,OAAS,gBAC1C,4BACDA,EAAoB,cAAc,OAAS,UAC1C,4BACDA,EAAoB,cAAc,OAAS,SAC1C,0BACDA,EAAoB,cAAc,OAAS,cAC1C,8BACDA,EAAoB,cAAc,OAAS,UAC1C,6BAAA,CAAA,CACJ,CAAA,CAAA,CACF,CAAA,CAAA,CAEJ,CAAA,EACF,CAEJ,EC1fA,eAAsBmJ,GACpBC,EACApJ,EACAqJ,EACoB,CACpB,MAAM/L,EAAO,IAAI,kBAAkB8L,EAAU,IAAI,EAC3CE,EAAchM,EAAK,OAAS,EAC5BiM,EAAY,KAAK,IAAI,IAAM,KAAK,MAAMD,EAAc,GAAG,CAAC,EAE9D,IAAIE,EAAkB,EAGtB,QAAS7N,EAAI,EAAGA,EAAI2B,EAAK,OAAQ3B,GAAK4N,EAAY,EAAG,CACnD,MAAME,EAAW,KAAK,IAAI9N,EAAI4N,EAAY,EAAGjM,EAAK,MAAM,EAGxD,QAASzB,EAAIF,EAAGE,EAAI4N,EAAU5N,GAAK,EAAG,CAEpC,IAAI6N,EADsB,CAACpM,EAAKzB,CAAC,EAAGyB,EAAKzB,EAAI,CAAC,EAAGyB,EAAKzB,EAAI,CAAC,CAAC,EAIxDmE,EAAoB,WAAW,eAC/BA,EAAoB,WAAW,iBAAmB,iBACpD0J,EAAiB3L,GACf2L,EACA1J,EAAoB,WAAW,QAAA,GAK/BA,EAAoB,WAAW,eAC/BA,EAAoB,WAAW,iBAAmB,iBACpD0J,EAAiB7K,GACf6K,EACA1J,EAAoB,WAAW,SAC/BA,EAAoB,WAAW,QAAA,GAKnC1C,EAAKzB,CAAC,EAAI6N,EAAe,CAAC,EAC1BpM,EAAKzB,EAAI,CAAC,EAAI6N,EAAe,CAAC,EAC9BpM,EAAKzB,EAAI,CAAC,EAAI6N,EAAe,CAAC,EAG9BF,GACF,CAGA,GAAIH,EAAY,CACd,MAAMnC,EAAW,KAAK,MAAOsC,EAAkBF,EAAe,GAAG,EACjED,EAAWnC,CAAQ,CACrB,CAGA,MAAM,IAAI,QAAQyC,GAAW,WAAWA,EAAS,CAAC,CAAC,CACrD,CAEA,OAAO,IAAI,UAAUrM,EAAM8L,EAAU,MAAOA,EAAU,MAAM,CAC9D,CASO,SAASQ,GACdC,EACAC,EAAW,KACXC,EAAY,KACgD,CAC5D,OAAO,IAAI,QAAQ,CAACJ,EAASK,IAAW,CACtC,MAAMC,EAAM,IAAI,MACV1I,EAAS,SAAS,cAAc,QAAQ,EACxCG,EAAMH,EAAO,WAAW,IAAI,EAElC,GAAI,CAACG,EAAK,CACRsI,EAAO,IAAI,MAAM,8BAA8B,CAAC,EAChD,MACF,CAEAC,EAAI,OAAS,IAAM,CAEjB,GAAI,CAAE,MAAAhK,EAAO,OAAAC,CAAA,EAAW+J,EACxB,GAAIhK,EAAQ6J,GAAY5J,EAAS6J,EAAW,CAC1C,MAAMG,EAAQ,KAAK,IAAIJ,EAAW7J,EAAO8J,EAAY7J,CAAM,EAC3DD,GAASiK,EACThK,GAAUgK,CACZ,CAEA3I,EAAO,MAAQtB,EACfsB,EAAO,OAASrB,EAGhBwB,EAAI,UAAUuI,EAAK,EAAG,EAAGhK,EAAOC,CAAM,EAGtC,MAAMkJ,EAAY1H,EAAI,aAAa,EAAG,EAAGzB,EAAOC,CAAM,EAEtDyJ,EAAQ,CAAE,OAAApI,EAAQ,UAAA6H,EAAW,CAC/B,EAEAa,EAAI,QAAU,IAAM,CAClBD,EAAO,IAAI,MAAM,sBAAsB,CAAC,CAC1C,EAEAC,EAAI,IAAM,IAAI,gBAAgBJ,CAAI,CACpC,CAAC,CACH,CAOO,SAASM,GACd5I,EACA6H,EACM,CACN,MAAM1H,EAAMH,EAAO,WAAW,IAAI,EAClC,GAAI,CAACG,EAAK,MAAM,IAAI,MAAM,8BAA8B,EAExDH,EAAO,MAAQ6H,EAAU,MACzB7H,EAAO,OAAS6H,EAAU,OAC1B1H,EAAI,aAAa0H,EAAW,EAAG,CAAC,CAClC,CASO,SAASgB,GACd7I,EACA8I,EAAW,0BACXC,EAAoD,YACpDC,EAAU,GACJ,CACNhJ,EAAO,OAAQiJ,GAAS,CACtB,GAAI,CAACA,EAAM,OAEX,MAAMC,EAAM,IAAI,gBAAgBD,CAAI,EAC9BpQ,EAAI,SAAS,cAAc,GAAG,EACpCA,EAAE,KAAOqQ,EACTrQ,EAAE,SAAWiQ,EACb,SAAS,KAAK,YAAYjQ,CAAC,EAC3BA,EAAE,MAAA,EACF,SAAS,KAAK,YAAYA,CAAC,EAC3B,IAAI,gBAAgBqQ,CAAG,CACzB,EAAGH,EAAQC,CAAO,CACpB,CAOO,SAASG,GAAeC,EAAuB,CACpD,GAAIA,IAAU,EAAG,MAAO,UAExB,MAAM9Q,EAAI,KACJ+Q,EAAQ,CAAC,QAAS,KAAM,KAAM,IAAI,EAClCjP,EAAI,KAAK,MAAM,KAAK,IAAIgP,CAAK,EAAI,KAAK,IAAI9Q,CAAC,CAAC,EAElD,OAAO,YAAY8Q,EAAQ,KAAK,IAAI9Q,EAAG8B,CAAC,GAAG,QAAQ,CAAC,CAAC,EAAI,IAAMiP,EAAMjP,CAAC,CACxE,CAQO,SAASkP,GACdhB,EACAiB,EAAU,GAAK,KAAO,KACP,CAEf,OAAKjB,EAAK,KAAK,WAAW,QAAQ,EAKX,CAAC,aAAc,YAAa,aAAc,WAAW,EACxD,SAASA,EAAK,IAAI,EAKlCA,EAAK,KAAOiB,EACP,sBAAsBJ,GAAeI,CAAO,CAAC,IAG/C,KARE,2CANA,iBAeX,CCnMO,MAAMC,GAA8C,CAAC,CAC1D,YAAAC,EACA,gBAAAC,EACA,SAAAC,EAAW,EACb,IAAM,CACJ,KAAM,CAACC,EAAUC,CAAW,EAAI7K,EAAAA,SAAS,EAAK,EAExC8K,EAAmB/J,cAAauI,GAAe,CACnD,MAAMyB,EAAkBT,GAAkBhB,CAAI,EAC9C,GAAIyB,EAAiB,CACnB,MAAMA,CAAe,EACrB,MACF,CAGA,MAAMrB,EAAM,IAAI,MAChBA,EAAI,OAAS,IAAM,CACjB,MAAMsB,EAA2B,CAC/B,KAAA1B,EACA,IAAK,IAAI,gBAAgBA,CAAI,EAC7B,MAAOI,EAAI,MACX,OAAQA,EAAI,OACZ,KAAMJ,EAAK,IAAA,EAEbmB,EAAYO,CAAS,CACvB,EACAtB,EAAI,IAAM,IAAI,gBAAgBJ,CAAI,CACpC,EAAG,CAACmB,CAAW,CAAC,EAEVQ,EAAkBlK,cAAa6E,GAA+C,OAClF,MAAM0D,GAAOZ,EAAA9C,EAAM,OAAO,QAAb,YAAA8C,EAAqB,GAC9BY,GACFwB,EAAiBxB,CAAI,CAEzB,EAAG,CAACwB,CAAgB,CAAC,EAEfI,EAAanK,cAAa6E,GAA2B,CACzDA,EAAM,eAAA,EACNiF,EAAY,EAAK,EAEjB,MAAMvB,EAAO1D,EAAM,aAAa,MAAM,CAAC,EACnC0D,GACFwB,EAAiBxB,CAAI,CAEzB,EAAG,CAACwB,CAAgB,CAAC,EAEfK,EAAiBpK,cAAa6E,GAA2B,CAC7DA,EAAM,eAAA,EACNiF,EAAY,EAAI,CAClB,EAAG,CAAA,CAAE,EAECO,EAAkBrK,cAAa6E,GAA2B,CAC9DA,EAAM,eAAA,EACNiF,EAAY,EAAK,CACnB,EAAG,CAAA,CAAE,EAEL,OACEtD,EAAAA,KAAC,OAAI,MAAO,CACV,WAAY,UACZ,aAAc,UACd,QAAS,OACT,UAAW,kCACX,MAAO,MAAA,EAEP,SAAA,CAAAC,MAAC,MAAG,MAAO,CACT,SAAU,UACV,WAAY,MACZ,MAAO,UACP,OAAQ,cAAA,EACP,SAAA,eAEH,EAEAA,EAAAA,IAAC,MAAA,CACC,OAAQ0D,EACR,WAAYC,EACZ,YAAaC,EACb,MAAO,CACL,OAAQR,EACJ,qBACA,qBACJ,aAAc,SACd,QAAS,YACT,UAAW,SACX,WAAY,gBACZ,WAAYA,EAAW,UAAY,UACnC,OAAQD,EAAW,cAAgB,UACnC,QAASA,EAAW,GAAM,CAAA,EAG3B,SAAAD,EAAgB,aACfnD,EAAAA,KAAC,MAAA,CACC,SAAA,CAAAC,MAAC,OAAI,MAAO,CACV,MAAO,OACP,OAAQ,OACR,OAAQ,oBACR,UAAW,oBACX,aAAc,MACd,UAAW,0BACX,OAAQ,aAAA,EACP,EACHD,OAAC,KAAE,MAAO,CACR,MAAO,UACP,SAAU,OACV,OAAQ,cAAA,EACP,SAAA,CAAA,UACOmD,EAAgB,SAAS,GAAA,EACnC,EACAlD,MAAC,OAAI,MAAO,CACV,MAAO,OACP,OAAQ,MACR,WAAY,UACZ,aAAc,MACd,SAAU,SACV,OAAQ,SACR,SAAU,OAAA,EAEV,SAAAA,EAAAA,IAAC,MAAA,CAAI,MAAO,CACV,MAAO,GAAGkD,EAAgB,QAAQ,IAClC,OAAQ,OACR,WAAY,UACZ,WAAY,iBAAA,EACX,CAAA,CACL,CAAA,CAAA,CACF,SAEC,MAAA,CACC,SAAA,CAAAlD,MAAC,OAAI,MAAO,CACV,SAAU,OACV,aAAc,MAAA,EACb,SAAA,KAEH,EACAA,MAAC,KAAE,MAAO,CACR,MAAO,UACP,SAAU,WACV,WAAY,MACZ,OAAQ,cAAA,EACP,SAAA,eAEH,EACAA,MAAC,KAAE,MAAO,CACR,MAAO,UACP,SAAU,WACV,OAAQ,cAAA,EACP,SAAA,eAEH,EAEAD,OAAC,SAAM,MAAO,CACZ,QAAS,eACT,WAAY,UACZ,MAAO,QACP,QAAS,eACT,aAAc,SACd,WAAY,MACZ,OAAQoD,EAAW,cAAgB,UACnC,WAAY,4BAAA,EACX,SAAA,CAAA,UAEDnD,EAAAA,IAAC,QAAA,CACC,KAAK,OACL,OAAO,UACP,SAAUyD,EACV,SAAAN,EACA,MAAO,CAAE,QAAS,MAAA,CAAO,CAAA,CAC3B,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EAIJnD,MAAC,OAAI,MAAO,CACV,UAAW,OACX,QAAS,OACT,WAAY,UACZ,aAAc,SACd,OAAQ,mBAAA,EAER,SAAAD,EAAAA,KAAC,IAAA,CAAE,MAAO,CACR,SAAU,WACV,MAAO,UACP,OAAQ,IACR,WAAY,KAAA,EACX,SAAA,CAAA,MACEC,EAAAA,IAAC,UAAO,SAAA,OAAA,CAAK,EAAS,8BAAsB,KAAA,EAAG,EAAE,MACjDA,EAAAA,IAAC,UAAO,SAAA,QAAA,CAAM,EAAS,uBAAA,CAAA,CAC5B,CAAA,CACF,EAECkD,EAAgB,OACflD,EAAAA,IAAC,MAAA,CAAI,MAAO,CACV,UAAW,OACX,QAAS,OACT,WAAY,UACZ,aAAc,SACd,OAAQ,mBAAA,EAER,SAAAD,EAAAA,KAAC,IAAA,CAAE,MAAO,CACR,SAAU,WACV,MAAO,UACP,OAAQ,IACR,WAAY,KAAA,EACX,SAAA,CAAA,UACOmD,EAAgB,KAAA,CAAA,CAC1B,CAAA,CACF,QAGD,QAAA,CACE,SAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAA,CAMH,CAAA,EACF,CAEJ,ECnNaW,GAA0C,CAAC,CACtD,UAAAL,EACA,oBAAAvL,EACA,wBAAA6L,CACF,IAAM,CACJ,MAAMC,EAAoB1L,EAAAA,OAA0B,IAAI,EAClD2L,EAAqB3L,EAAAA,OAA0B,IAAI,EACnD,CAAC4L,EAAUC,CAAW,EAAI1L,EAAAA,SAAmB,WAAW,EACxD,CAAC2L,EAAmBC,CAAoB,EAAI5L,EAAAA,SAA2B,IAAI,EAC3E,CAAC6L,EAAoBC,CAAqB,EAAI9L,EAAAA,SAA2B,IAAI,EAGnF+E,EAAAA,UAAU,IAAM,CACd,GAAI,CAACiG,EAAW,CACdY,EAAqB,IAAI,EACzBE,EAAsB,IAAI,EAC1B,MACF,EAEkB,SAAY,CAC5B,GAAI,CACFR,EAAwB,GAAM,CAAC,EAE/B,KAAM,CAAE,UAAAzC,CAAA,EAAc,MAAMQ,GAAkB2B,EAAU,IAAI,EAC5DY,EAAqB/C,CAAS,EAG1B0C,EAAkB,SACpB3B,GAAsB2B,EAAkB,QAAS1C,CAAS,CAI9D,MAAgB,CACdyC,EAAwB,GAAO,EAAG,gBAAgB,CACpD,CACF,GAEA,CAEF,EAAG,CAACN,CAAS,CAAC,EAGdjG,EAAAA,UAAU,IAAM,CACd,GAAI,CAAC4G,EAAmB,OAGxB,MAAMI,EAAY,WAAW,IAAM,EACZ,SAAY,CAC/B,GAAI,CACFT,EAAwB,GAAM,CAAC,EAE/B,MAAMU,EAAY,MAAMpD,GACtB+C,EACAlM,EACCkH,GAAa,CACZ2E,EAAwB,GAAM3E,CAAQ,CACxC,CAAA,EAGFmF,EAAsBE,CAAS,EAG3BR,EAAmB,SACrB5B,GAAsB4B,EAAmB,QAASQ,CAAS,EAG7DV,EAAwB,GAAO,GAAG,CACpC,MAAgB,CACdA,EAAwB,GAAO,EAAG,aAAa,CACjD,CACF,GAEA,CACF,EAAG,GAAG,EAEN,MAAO,IAAM,aAAaS,CAAS,CAErC,EAAG,CAACJ,EAAmBlM,CAAmB,CAAC,EAE3C,MAAMwM,EAAiB,IAAM,CAC3B,GAAI,CAACT,EAAmB,SAAW,CAACK,EAAoB,OAExD,MAAM/B,EAAW,cAAakB,GAAA,YAAAA,EAAW,KAAK,OAAQ,WAAW,OACjEnB,GAAsB2B,EAAmB,QAAS1B,CAAQ,CAC5D,EAEA,OAAKkB,EAsBHzD,EAAAA,KAAC,OAAI,MAAO,CACV,WAAY,UACZ,aAAc,UACd,QAAS,SACT,UAAW,kCACX,MAAO,MAAA,EAEP,SAAA,CAAAA,OAAC,OAAI,MAAO,CACV,QAAS,OACT,eAAgB,gBAChB,WAAY,SACZ,aAAc,SACd,SAAU,OACV,IAAK,MAAA,EAEL,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAC,MAAC,MAAG,MAAO,CACT,SAAU,UACV,WAAY,MACZ,MAAO,UACP,OAAQ,cAAA,EACP,SAAA,cAEH,EACAD,OAAC,KAAE,MAAO,CACR,SAAU,WACV,MAAO,UACP,OAAQ,GAAA,EAEP,SAAA,CAAAyD,EAAU,KAAK,KAAK,KAAGA,EAAU,MAAM,IAAEA,EAAU,OAAO,KAAGb,GAAea,EAAU,IAAI,EAAE,GAAA,CAAA,CAC/F,CAAA,EACF,EAEAzD,EAAAA,KAAC,MAAA,CAAI,MAAO,CAAE,QAAS,OAAQ,IAAK,SAAU,WAAY,QAAA,EACxD,SAAA,CAAAA,EAAAA,KAAC,SAAA,CACC,MAAOkE,EACP,SAAWxR,GAAMyR,EAAYzR,EAAE,OAAO,KAAiB,EACvD,MAAO,CACL,QAAS,SACT,OAAQ,oBACR,aAAc,WACd,SAAU,UAAA,EAGZ,SAAA,CAAAuN,EAAAA,IAAC,SAAA,CAAO,MAAM,WAAW,SAAA,MAAG,EAC5BA,EAAAA,IAAC,SAAA,CAAO,MAAM,YAAY,SAAA,OAAI,EAC9BA,EAAAA,IAAC,SAAA,CAAO,MAAM,QAAQ,SAAA,MAAA,CAAI,CAAA,CAAA,CAAA,EAG5BA,EAAAA,IAAC,SAAA,CACC,QAASyE,EACT,SAAU,CAACJ,EACX,MAAO,CACL,WAAYA,EAAqB,UAAY,UAC7C,MAAO,QACP,QAAS,cACT,aAAc,WACd,WAAY,MACZ,OAAQ,OACR,OAAQA,EAAqB,UAAY,cACzC,SAAU,UAAA,EAEb,SAAA,WAAA,CAAA,CAED,CAAA,CACF,CAAA,EACF,EAEAtE,OAAC,OAAI,MAAO,CACV,aAAc,SACd,SAAU,OACV,WAAY,UACZ,SAAU,WACV,UAAW,MAAA,EAEV,SAAA,CAAAkE,IAAa,SACZlE,EAAAA,KAAC,MAAA,CAAI,MAAO,CAAE,QAAS,OAAQ,IAAK,MAAO,eAAgB,QAAA,EACzD,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,MAAO,CAAE,SAAU,YACtB,SAAA,CAAAC,EAAAA,IAAC,SAAA,CACC,IAAK+D,EACL,MAAO,CACL,SAAU,OACV,OAAQ,OACR,QAAS,OAAA,CACX,CAAA,EAEF/D,MAAC,OAAI,MAAO,CACV,SAAU,WACV,IAAK,SACL,KAAM,SACN,WAAY,kBACZ,MAAO,QACP,QAAS,iBACT,aAAc,UACd,SAAU,UACV,WAAY,KAAA,EACX,SAAA,KAAA,CAEH,CAAA,EACF,SACC,MAAA,CAAI,MAAO,CAAE,SAAU,YACtB,SAAA,CAAAA,EAAAA,IAAC,SAAA,CACC,IAAKgE,EACL,MAAO,CACL,SAAU,OACV,OAAQ,OACR,QAAS,OAAA,CACX,CAAA,EAEFhE,MAAC,OAAI,MAAO,CACV,SAAU,WACV,IAAK,SACL,KAAM,SACN,WAAY,kBACZ,MAAO,QACP,QAAS,iBACT,aAAc,UACd,SAAU,UACV,WAAY,KAAA,EACX,SAAA,MAAA,CAEH,CAAA,CAAA,CACF,CAAA,EACF,EAGDiE,IAAa,YACZjE,MAAC,MAAA,CAAI,MAAO,CAAE,QAAS,OAAQ,eAAgB,QAAA,EAC7C,SAAAA,EAAAA,IAAC,SAAA,CACC,IAAK+D,EACL,MAAO,CACL,SAAU,OACV,OAAQ,OACR,QAAS,OAAA,CACX,CAAA,EAEJ,EAGDE,IAAa,aACZjE,MAAC,MAAA,CAAI,MAAO,CAAE,QAAS,OAAQ,eAAgB,QAAA,EAC7C,SAAAA,EAAAA,IAAC,SAAA,CACC,IAAKgE,EACL,MAAO,CACL,SAAU,OACV,OAAQ,OACR,QAAS,OAAA,CACX,CAAA,CACF,CACF,CAAA,EAEJ,EAEAhE,MAAC,OAAI,MAAO,CACV,UAAW,OACX,QAAS,OACT,WAAY,UACZ,aAAc,SACd,OAAQ,mBAAA,EAER,SAAAD,EAAAA,KAAC,IAAA,CAAE,MAAO,CACR,SAAU,WACV,MAAO,UACP,OAAQ,IACR,WAAY,KAAA,EACX,SAAA,CAAA,MACEC,EAAAA,IAAC,UAAO,SAAA,WAAA,CAAS,EAAS,6BAAqB,KAAA,EAAG,EAAE,MACpDA,EAAAA,IAAC,UAAO,SAAA,SAAA,CAAO,EAAS,oBAAA,CAAA,CAC7B,CAAA,CACF,CAAA,EACF,EA9LED,EAAAA,KAAC,OAAI,MAAO,CACV,WAAY,UACZ,aAAc,UACd,QAAS,OACT,UAAW,SACX,OAAQ,oBAAA,EAER,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,MAAO,CAAE,SAAU,OAAQ,aAAc,MAAA,EAAU,SAAA,KAAA,CAAG,EAC3DA,MAAC,KAAE,MAAO,CACR,MAAO,UACP,SAAU,WACV,OAAQ,GAAA,EACP,SAAA,aAAA,CAEH,CAAA,EACF,CAiLN,ECjSa0E,GAA8C,CAAC,CAC1D,oBAAAzM,EACA,wBAAA6L,CACF,IAAM,CACJ,MAAMa,EAAWtM,EAAAA,OAAyB,IAAI,EACxC0L,EAAoB1L,EAAAA,OAA0B,IAAI,EAClD2L,EAAqB3L,EAAAA,OAA0B,IAAI,EAEnD,CAACuM,EAAcC,CAAe,EAAIrM,WAAuB,CAC7D,SAAU,GACV,WAAY,cACZ,WAAY,CAAE,MAAO,KAAM,OAAQ,GAAA,CAAI,CACxC,EAEK,CAACsM,EAASC,CAAU,EAAIvM,EAAAA,SAA4B,CAAA,CAAE,EACtD,CAACwM,EAAQC,CAAS,EAAIzM,EAAAA,SAA6B,IAAI,EACvD,CAAC0M,EAAmBC,CAAoB,EAAI3M,EAAAA,SAAS,EAAK,EAC1D,CAACyL,EAAUC,CAAW,EAAI1L,EAAAA,SAA6C,WAAW,EAGxF+E,EAAAA,UAAU,IAAM,EACK,SAAY,CAC7B,GAAI,CAEF,MAAM6H,GADa,MAAM,UAAU,aAAa,iBAAA,GAChB,OAAOC,GAAUA,EAAO,OAAS,YAAY,EAC7EN,EAAWK,CAAY,CACzB,OAASE,EAAO,CACd,QAAQ,MAAM,aAAcA,CAAK,CACnC,CACF,GAEA,CACF,EAAG,CAAA,CAAE,EAGL,MAAMC,EAAehM,EAAAA,YAAY,SAAY,CAC3C,GAAIqL,EAAa,UAAYI,EAAQ,CAEnCA,EAAO,YAAY,QAAQQ,GAASA,EAAM,MAAM,EAChDP,EAAU,IAAI,EACdJ,MAAyB,CAAE,GAAGhH,EAAM,SAAU,IAAQ,EACtD,MACF,CAGA,GAAI,CAAC,UAAU,cAAgB,CAAC,UAAU,aAAa,aAAc,CACnEiG,EAAwB,GAAO,EAAG,2BAA2B,EAC7D,MACF,CAEA,GAAI,CACFA,EAAwB,GAAM,EAAG,EAAE,EAGnC,MAAM2B,EAAc,CAClB,MAAOb,EAAa,SAChB,CAAE,SAAU,CAAE,MAAOA,EAAa,QAAA,CAAS,EAC3C,CAAE,WAAYA,EAAa,UAAA,CAAW,EAGtCc,EAAc,MAAM,UAAU,aAAa,aAAaD,CAAW,EAEzER,EAAUS,CAAW,EACrBb,MAAyB,CAAE,GAAGhH,EAAM,SAAU,IAAO,EAEjD8G,EAAS,UACXA,EAAS,QAAQ,UAAYe,EAG7Bf,EAAS,QAAQ,iBAAmB,IAAM,CACxCb,EAAwB,GAAO,IAAK,EAAE,CACxC,EAEJ,OAASwB,EAAO,CACd,IAAIK,EAAe,mBACfL,aAAiB,QACfA,EAAM,OAAS,kBACjBK,EAAe,mCACNL,EAAM,OAAS,gBACxBK,EAAe,iBACNL,EAAM,OAAS,mBACxBK,EAAe,uBAEfA,EAAe,WAAWL,EAAM,OAAO,IAI3CxB,EAAwB,GAAO,EAAG6B,CAAY,CAChD,CACF,EAAG,CAACf,EAAcI,EAAQlB,CAAuB,CAAC,EAG5C8B,EAAoBrM,EAAAA,YAAY,SAAY,CAEhD,GADI,CAACoL,EAAS,SAAW,CAACZ,EAAkB,SAAW,CAACC,EAAmB,SACvEkB,EAAmB,OAEvB,MAAMW,EAAQlB,EAAS,QACjBmB,EAAiB/B,EAAkB,QACnCgC,EAAkB/B,EAAmB,QAG3C8B,EAAe,MAAQD,EAAM,WAC7BC,EAAe,OAASD,EAAM,YAC9BE,EAAgB,MAAQF,EAAM,WAC9BE,EAAgB,OAASF,EAAM,YAE/B,MAAMlM,EAAMmM,EAAe,WAAW,IAAI,EAC1C,GAAI,CAACnM,EAAK,OAEVA,EAAI,UAAUkM,EAAO,EAAG,CAAC,EACzB,MAAMxE,EAAY1H,EAAI,aAAa,EAAG,EAAGmM,EAAe,MAAOA,EAAe,MAAM,EAEpFX,EAAqB,EAAI,EACzBrB,EAAwB,GAAM,GAAI,WAAW,EAE7C,GAAI,CAEF,MAAMO,EAAqB,MAAMjD,GAAiBC,EAAWpJ,CAAmB,EAChFmK,GAAsB2D,EAAiB1B,CAAkB,EACzDP,EAAwB,GAAO,IAAK,MAAM,CAC5C,OAASwB,EAAO,CACd,QAAQ,MAAM,aAAcA,CAAK,EACjCxB,EAAwB,GAAO,EAAG,gBAAgB,CACpD,QAAA,CACEqB,EAAqB,EAAK,CAC5B,CACF,EAAG,CAAClN,EAAqBiN,EAAmBpB,CAAuB,CAAC,EAG9DkC,EAAezM,EAAAA,YAAY,IAAM,CACrC,GAAI,CAACyK,EAAmB,QAAS,OAGjC,MAAM1B,EAAW,yBADK,KAAA,EAAO,cAAc,QAAQ,QAAS,GAAG,CAChB,OAC/CD,GAAsB2B,EAAmB,QAAS1B,CAAQ,CAC5D,EAAG,CAAA,CAAE,EAEL,OACEvC,EAAAA,KAAC,OAAI,MAAO,CACV,WAAY,UACZ,aAAc,UACd,QAAS,SACT,UAAW,kCACX,MAAO,MAAA,EAEP,SAAA,CAAAA,OAAC,OAAI,MAAO,CACV,QAAS,OACT,eAAgB,gBAChB,WAAY,SACZ,aAAc,SACd,SAAU,OACV,IAAK,MAAA,EAEL,SAAA,CAAAC,MAAC,MAAG,MAAO,CACT,SAAU,UACV,WAAY,MACZ,MAAO,UACP,OAAQ,GAAA,EACP,SAAA,cAEH,EAEAD,EAAAA,KAAC,MAAA,CAAI,MAAO,CAAE,QAAS,OAAQ,IAAK,SAAU,WAAY,QAAA,EACvD,SAAA,CAAA+E,EAAQ,OAAS,GAChB/E,EAAAA,KAAC,SAAA,CACC,MAAO6E,EAAa,UAAY,GAChC,SAAWnS,GAAMoS,EAAgBhH,IAAS,CAAE,GAAGA,EAAM,SAAUpL,EAAE,OAAO,KAAA,EAAQ,EAChF,SAAUmS,EAAa,SACvB,MAAO,CACL,QAAS,SACT,OAAQ,oBACR,aAAc,WACd,SAAU,UAAA,EAGZ,SAAA,CAAA5E,EAAAA,IAAC,SAAA,CAAO,MAAM,GAAG,SAAA,QAAK,EACrB8E,EAAQ,IAAIO,GACXrF,MAAC,UAA6B,MAAOqF,EAAO,SACzC,SAAAA,EAAO,OAAS,OAAOA,EAAO,SAAS,MAAM,EAAG,CAAC,CAAC,EAAA,EADxCA,EAAO,QAEpB,CACD,CAAA,CAAA,CAAA,EAILtF,EAAAA,KAAC,SAAA,CACC,MAAOkE,EACP,SAAWxR,GAAMyR,EAAYzR,EAAE,OAAO,KAA2C,EACjF,MAAO,CACL,QAAS,SACT,OAAQ,oBACR,aAAc,WACd,SAAU,UAAA,EAGZ,SAAA,CAAAuN,EAAAA,IAAC,SAAA,CAAO,MAAM,WAAW,SAAA,MAAG,EAC5BA,EAAAA,IAAC,SAAA,CAAO,MAAM,YAAY,SAAA,OAAI,EAC9BA,EAAAA,IAAC,SAAA,CAAO,MAAM,QAAQ,SAAA,MAAA,CAAI,CAAA,CAAA,CAAA,EAG5BA,EAAAA,IAAC,SAAA,CACC,QAASuF,EACT,MAAO,CACL,WAAYX,EAAa,SAAW,UAAY,UAChD,MAAO,QACP,QAAS,cACT,aAAc,WACd,WAAY,MACZ,OAAQ,OACR,OAAQ,UACR,SAAU,UAAA,EAGX,SAAAA,EAAa,SAAW,QAAU,WAAA,CAAA,EAGpCA,EAAa,UACZ7E,EAAAA,KAAAG,EAAAA,SAAA,CACE,SAAA,CAAAF,EAAAA,IAAC,SAAA,CACC,QAAS4F,EACT,SAAUV,EACV,MAAO,CACL,WAAYA,EAAoB,UAAY,UAC5C,MAAO,QACP,QAAS,cACT,aAAc,WACd,WAAY,MACZ,OAAQ,OACR,OAAQA,EAAoB,cAAgB,UAC5C,SAAU,UAAA,EAGX,WAAoB,YAAc,OAAA,CAAA,EAGrClF,EAAAA,IAAC,SAAA,CACC,QAASgG,EACT,SAAU,CAAChC,EAAmB,QAC9B,MAAO,CACL,WAAY,UACZ,MAAO,QACP,QAAS,cACT,aAAc,WACd,WAAY,MACZ,OAAQ,OACR,OAAQ,UACR,SAAU,UAAA,EAEb,SAAA,OAAA,CAAA,CAED,CAAA,CACF,CAAA,CAAA,CAEJ,CAAA,EACF,EAEAhE,MAAC,OAAI,MAAO,CACV,aAAc,SACd,SAAU,OACV,WAAY,UACZ,SAAU,WACV,UAAW,QACX,UAAW,MAAA,EAEV,SAAC4E,EAAa,SAmBb7E,EAAAA,KAAAG,EAAAA,SAAA,CACE,SAAA,CAAAF,EAAAA,IAAC,QAAA,CACC,IAAK2E,EACL,SAAQ,GACR,YAAW,GACX,MAAK,GACL,MAAO,CACL,QAAS,MAAA,CACX,CAAA,EAGDV,IAAa,SACZlE,EAAAA,KAAC,MAAA,CAAI,MAAO,CAAE,QAAS,OAAQ,IAAK,MAAO,eAAgB,QAAA,EACzD,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,MAAO,CAAE,SAAU,YACtB,SAAA,CAAAC,EAAAA,IAAC,SAAA,CACC,IAAK+D,EACL,MAAO,CACL,SAAU,OACV,OAAQ,OACR,QAAS,OAAA,CACX,CAAA,EAEF/D,MAAC,OAAI,MAAO,CACV,SAAU,WACV,IAAK,SACL,KAAM,SACN,WAAY,kBACZ,MAAO,QACP,QAAS,iBACT,aAAc,UACd,SAAU,UACV,WAAY,KAAA,EACX,SAAA,OAAA,CAEH,CAAA,EACF,SACC,MAAA,CAAI,MAAO,CAAE,SAAU,YACtB,SAAA,CAAAA,EAAAA,IAAC,SAAA,CACC,IAAKgE,EACL,MAAO,CACL,SAAU,OACV,OAAQ,OACR,QAAS,OAAA,CACX,CAAA,EAEFhE,MAAC,OAAI,MAAO,CACV,SAAU,WACV,IAAK,SACL,KAAM,SACN,WAAY,kBACZ,MAAO,QACP,QAAS,iBACT,aAAc,UACd,SAAU,UACV,WAAY,KAAA,EACX,SAAA,MAEH,EACCkF,GACClF,EAAAA,IAAC,MAAA,CAAI,MAAO,CACV,SAAU,WACV,IAAK,SACL,MAAO,SACP,WAAY,kBACZ,MAAO,QACP,QAAS,iBACT,aAAc,UACd,SAAU,SAAA,EACT,SAAA,QAAA,CAEH,CAAA,CAAA,CAEJ,CAAA,EACF,EAGDiE,IAAa,YACZjE,MAAC,MAAA,CAAI,MAAO,CAAE,QAAS,OAAQ,eAAgB,QAAA,EAC7C,SAAAA,EAAAA,IAAC,SAAA,CACC,IAAK+D,EACL,MAAO,CACL,SAAU,OACV,OAAQ,OACR,QAAS,OAAA,CACX,CAAA,EAEJ,EAGDE,IAAa,aACZjE,MAAC,MAAA,CAAI,MAAO,CAAE,QAAS,OAAQ,eAAgB,QAAA,EAC7C,SAAAA,EAAAA,IAAC,SAAA,CACC,IAAKgE,EACL,MAAO,CACL,SAAU,OACV,OAAQ,OACR,QAAS,OAAA,CACX,CAAA,CACF,CACF,CAAA,CAAA,CAEJ,EAvHAjE,EAAAA,KAAC,OAAI,MAAO,CACV,QAAS,OACT,WAAY,SACZ,eAAgB,SAChB,OAAQ,QACR,cAAe,SACf,IAAK,MAAA,EAEL,SAAA,CAAAC,MAAC,OAAI,MAAO,CAAE,SAAU,MAAA,EAAU,SAAA,KAAE,EACpCA,MAAC,KAAE,MAAO,CACR,MAAO,UACP,SAAU,WACV,OAAQ,GAAA,EACP,SAAA,cAAA,CAEH,CAAA,CAAA,CACF,CAuGA,CAEJ,EAEAD,OAAC,OAAI,MAAO,CACV,UAAW,OACX,QAAS,OACT,WAAY,UACZ,aAAc,SACd,OAAQ,mBAAA,EAER,SAAA,CAAAA,OAAC,KAAE,MAAO,CACR,SAAU,WACV,MAAO,UACP,OAAQ,eACR,WAAY,KAAA,EACX,SAAA,CAAA,MACEC,EAAAA,IAAC,UAAO,SAAA,KAAA,CAAG,EAAS,oCAA4B,KAAA,EAAG,EAAE,MACrDA,EAAAA,IAAC,UAAO,SAAA,KAAA,CAAG,EAAS,0BAAA,EACzB,EACAD,OAAC,KAAE,MAAO,CACR,SAAU,UACV,MAAO,UACP,OAAQ,IACR,WAAY,MACZ,UAAW,QAAA,EACV,SAAA,CAAA,MACEC,EAAAA,IAAC,UAAO,SAAA,cAAA,CAAY,QAAU,KAAA,EAAG,EAAE,0BACpB,KAAA,EAAG,EAAE,oCACK,KAAA,EAAG,EAAE,kCAAA,CAAA,CAEnC,CAAA,CAAA,CACF,CAAA,EACF,CAEJ,ECtaaiG,GAAwC,CAAC,CAAE,OAAAC,EAAQ,QAAAC,EAAS,cAAAC,KAAoB,CAC3F,GAAI,CAACF,EAAQ,OAAO,KAEpB,MAAMG,EAAgB,IAAM,CAC1B,OAAQD,EAAA,CACN,IAAK,QACH,cACG,MAAA,CACC,SAAA,CAAApG,EAAAA,IAAC,KAAA,CAAG,MAAO,CAAE,MAAO,UAAW,aAAc,MAAA,EAAU,SAAA,WAAA,CAAS,EAChED,OAAC,OAAI,MAAO,CAAE,WAAY,MAAO,MAAO,SAAA,EACtC,SAAA,CAAAA,OAAC,IAAA,CAAE,SAAA,CAAAC,EAAAA,IAAC,UAAO,SAAA,oBAAiB,EAAS,0BAAA,EAAwB,EAE7DA,EAAAA,IAAC,MAAG,MAAO,CAAE,UAAW,SAAU,aAAc,QAAA,EAAY,SAAA,OAAA,CAAK,SAChE,KAAA,CAAG,MAAO,CAAE,YAAa,QAAA,EACxB,SAAA,CAAAA,EAAAA,IAAC,MAAG,SAAA,sBAAmB,EACvBA,EAAAA,IAAC,MAAG,SAAA,kBAAe,EACnBA,EAAAA,IAAC,MAAG,SAAA,kBAAe,CAAA,EACrB,EAEAA,EAAAA,IAAC,MAAG,MAAO,CAAE,UAAW,SAAU,aAAc,QAAA,EAAY,SAAA,UAAA,CAAQ,SACnE,KAAA,CAAG,MAAO,CAAE,YAAa,QAAA,EACxB,SAAA,CAAAA,EAAAA,IAAC,MAAG,SAAA,mBAAgB,EACpBA,EAAAA,IAAC,MAAG,SAAA,uBAAoB,EACxBA,EAAAA,IAAC,MAAG,SAAA,qBAAkB,CAAA,EACxB,EAEAA,EAAAA,IAAC,MAAG,MAAO,CAAE,UAAW,SAAU,aAAc,QAAA,EAAY,SAAA,WAAA,CAAS,SACpE,KAAA,CAAG,MAAO,CAAE,YAAa,QAAA,EACxB,SAAA,CAAAA,EAAAA,IAAC,MAAG,SAAA,gBAAa,EACjBA,EAAAA,IAAC,MAAG,SAAA,eAAY,EAChBA,EAAAA,IAAC,MAAG,SAAA,YAAS,CAAA,EACf,EAEAA,MAAC,OAAI,MAAO,CACV,UAAW,OACX,WAAY,OACZ,UAAW,oBACX,SAAU,UACV,MAAO,SAAA,EAEP,SAAAD,EAAAA,KAAC,IAAA,CAAE,MAAO,CAAE,OAAQ,CAAA,EAClB,SAAA,CAAAC,EAAAA,IAAC,UAAO,SAAA,WAAQ,EAAS,IAAE,QAEzBD,OAAC,OAAA,CAAK,SAAA,CAAA,YAAU,IAAI,KAAK,0BAA+B,EAAE,eAAe,OAAO,EAAE,GAAA,EAAC,CAAA,CAAA,CAEvF,CAAA,CACF,CAAA,EACF,CAAA,EACF,EAGJ,IAAK,UACH,cACG,MAAA,CACC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAG,MAAO,CAAE,MAAO,UAAW,aAAc,MAAA,EAAU,SAAA,UAAA,CAAQ,EAC/DD,OAAC,OAAI,MAAO,CAAE,WAAY,MAAO,MAAO,SAAA,EACtC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAG,MAAO,CAAE,UAAW,SAAU,aAAc,QAAA,EAAY,SAAA,UAAA,CAAQ,EACpEA,EAAAA,IAAC,KAAE,SAAA,0CAAuC,EAC1CD,OAAC,OAAI,MAAO,CACV,WAAY,UACZ,QAAS,OACT,aAAc,SACd,OAAQ,oBACR,UAAW,QAAA,EAEX,SAAA,CAAAC,EAAAA,IAAC,IAAA,CAAE,MAAO,CAAE,WAAY,OAAQ,OAAQ,cAAA,EAAkB,SAAA,6DAAA,CAE1D,EACAA,EAAAA,IAAC,KAAE,MAAO,CAAE,UAAW,SAAU,OAAQ,cAAA,EAAkB,SAAA,2EAAA,CAE3D,EACAA,EAAAA,IAAC,KAAE,MAAO,CAAE,SAAU,WAAY,OAAQ,GAAA,EAAO,SAAA,sFAAA,CAEjD,CAAA,EACF,EAEAA,EAAAA,IAAC,MAAG,MAAO,CAAE,UAAW,SAAU,aAAc,QAAA,EAAY,SAAA,YAAA,CAAU,SACrE,KAAA,CAAG,MAAO,CAAE,YAAa,QAAA,EACxB,SAAA,CAAAA,EAAAA,IAAC,MAAG,SAAA,wBAAqB,EACzBA,EAAAA,IAAC,MAAG,SAAA,gBAAa,EACjBA,EAAAA,IAAC,MAAG,SAAA,kCAA+B,EACnCA,EAAAA,IAAC,MAAG,SAAA,oBAAiB,CAAA,EACvB,EAEAA,EAAAA,IAAC,MAAG,MAAO,CAAE,UAAW,SAAU,aAAc,QAAA,EAAY,SAAA,OAAA,CAAK,EACjEA,EAAAA,IAAC,KAAE,SAAA,sEAGH,EAEAA,EAAAA,IAAC,MAAG,MAAO,CAAE,UAAW,SAAU,aAAc,QAAA,EAAY,SAAA,SAAA,CAAO,QAClE,IAAA,CAAE,MAAO,CAAE,aAAc,MAAA,EAAU,SAAA,oDAEpC,QACC,MAAA,CAAI,MAAO,CAAE,UAAW,QAAA,EACvB,SAAAA,EAAAA,IAAC,IAAA,CACC,KAAK,8BACL,OAAO,SACP,IAAI,sBACJ,MAAO,CACL,QAAS,eACT,WAAY,UACZ,MAAO,QACP,QAAS,iBACT,aAAc,SACd,eAAgB,OAChB,WAAY,MACZ,WAAY,iBAAA,EAEf,SAAA,wBAAA,CAAA,EAGH,EACAA,MAAC,KAAE,MAAO,CACR,SAAU,UACV,MAAO,UACP,UAAW,SACX,OAAQ,cAAA,EACP,SAAA,4BAAA,CAEH,CAAA,EACF,CAAA,EACF,EAGJ,IAAK,UACH,cACG,MAAA,CACC,SAAA,CAAAA,EAAAA,IAAC,KAAA,CAAG,MAAO,CAAE,MAAO,UAAW,aAAc,MAAA,EAAU,SAAA,YAAA,CAAU,EACjED,OAAC,OAAI,MAAO,CAAE,WAAY,MAAO,MAAO,SAAA,EACtC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAG,MAAO,CAAE,UAAW,SAAU,aAAc,QAAA,EAAY,SAAA,cAAA,CAAY,EACxEA,MAAC,IAAA,CAAE,SAAAA,EAAAA,IAAC,SAAA,CAAO,iCAAqB,EAAS,SACxC,KAAA,CAAG,MAAO,CAAE,YAAa,QAAA,EACxB,SAAA,CAAAA,EAAAA,IAAC,MAAG,SAAA,SAAM,EACVA,EAAAA,IAAC,MAAG,SAAA,WAAQ,EACZA,EAAAA,IAAC,MAAG,SAAA,OAAI,EACRA,EAAAA,IAAC,MAAG,SAAA,OAAI,CAAA,EACV,EAEAA,EAAAA,IAAC,MAAG,MAAO,CAAE,UAAW,SAAU,aAAc,QAAA,EAAY,SAAA,YAAA,CAAU,SACrE,KAAA,CAAG,MAAO,CAAE,YAAa,QAAA,EACxB,SAAA,CAAAA,EAAAA,IAAC,MAAG,SAAA,kBAAe,EACnBA,EAAAA,IAAC,MAAG,SAAA,eAAY,EAChBA,EAAAA,IAAC,MAAG,SAAA,eAAY,CAAA,EAClB,EAEAA,EAAAA,IAAC,MAAG,MAAO,CAAE,UAAW,SAAU,aAAc,QAAA,EAAY,SAAA,UAAA,CAAQ,SACnE,KAAA,CAAG,MAAO,CAAE,YAAa,QAAA,EACxB,SAAA,CAAAA,EAAAA,IAAC,MAAG,SAAA,gBAAa,EACjBA,EAAAA,IAAC,MAAG,SAAA,eAAY,EAChBA,EAAAA,IAAC,MAAG,SAAA,cAAW,CAAA,EACjB,EAEAD,OAAC,KAAE,MAAO,CACR,WAAY,UACZ,QAAS,OACT,aAAc,SACd,OAAQ,oBACR,UAAW,MAAA,EACV,SAAA,CAAA,aACI,IAAA,CAAE,KAAK,cAAc,OAAO,SAAS,IAAI,sBAAsB,MAAO,CAAE,MAAO,SAAA,EAAa,SAAA,gBAEjG,EAAI,YAAA,EACN,CAAA,EACF,CAAA,EACF,EAGJ,IAAK,aACH,cACG,MAAA,CACC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAG,MAAO,CAAE,MAAO,UAAW,aAAc,MAAA,EAAU,SAAA,MAAA,CAAI,EAC3DD,OAAC,OAAI,MAAO,CAAE,WAAY,MAAO,MAAO,SAAA,EACtC,SAAA,CAAAC,MAAC,OAAI,MAAO,CACV,WAAY,UACZ,QAAS,OACT,aAAc,SACd,OAAQ,oBACR,aAAc,MAAA,EAEd,SAAAA,EAAAA,IAAC,IAAA,CAAE,MAAO,CAAE,OAAQ,EAAG,WAAY,QAAU,SAAA,6BAAA,CAE7C,EACF,EAEAA,EAAAA,IAAC,MAAG,MAAO,CAAE,UAAW,SAAU,aAAc,QAAA,EAAY,SAAA,kBAAA,CAAgB,SAC3E,KAAA,CAAG,MAAO,CAAE,YAAa,QAAA,EACxB,SAAA,CAAAA,EAAAA,IAAC,MAAG,SAAA,aAAU,EACdA,EAAAA,IAAC,MAAG,SAAA,aAAU,EACdA,EAAAA,IAAC,MAAG,SAAA,kBAAe,CAAA,EACrB,EAEAA,EAAAA,IAAC,MAAG,MAAO,CAAE,UAAW,SAAU,aAAc,QAAA,EAAY,SAAA,WAAA,CAAS,SACpE,KAAA,CAAG,MAAO,CAAE,YAAa,QAAA,EACxB,SAAA,CAAAA,EAAAA,IAAC,MAAG,SAAA,sBAAmB,EACvBA,EAAAA,IAAC,MAAG,SAAA,kBAAe,EACnBA,EAAAA,IAAC,MAAG,SAAA,mBAAgB,CAAA,EACtB,EAEAA,EAAAA,IAAC,MAAG,MAAO,CAAE,UAAW,SAAU,aAAc,QAAA,EAAY,SAAA,YAAA,CAAU,EACtEA,EAAAA,IAAC,KAAE,SAAA,uCAAoC,EAEvCD,OAAC,KAAE,MAAO,CACR,WAAY,UACZ,QAAS,OACT,aAAc,SACd,OAAQ,oBACR,UAAW,MAAA,EACV,SAAA,CAAA,aACI,IAAA,CAAE,KAAK,iBAAiB,OAAO,SAAS,IAAI,sBAAsB,MAAO,CAAE,MAAO,SAAA,EAAa,SAAA,UAEpG,EAAI,YAAA,EACN,CAAA,EACF,CAAA,EACF,EAGJ,QACE,OAAO,IAAA,CAEb,EAEA,OACEC,EAAAA,IAAC,OAAI,MAAO,CACV,SAAU,QACV,IAAK,EACL,KAAM,EACN,MAAO,EACP,OAAQ,EACR,gBAAiB,qBACjB,QAAS,OACT,WAAY,SACZ,eAAgB,SAChB,OAAQ,IACR,QAAS,MAAA,EAET,SAAAD,EAAAA,KAAC,MAAA,CAAI,MAAO,CACV,gBAAiB,QACjB,aAAc,UACd,QAAS,OACT,SAAU,QACV,UAAW,OACX,SAAU,OACV,SAAU,WACV,UAAW,uEAAA,EAEX,SAAA,CAAAC,EAAAA,IAAC,SAAA,CACC,QAASmG,EACT,MAAO,CACL,SAAU,WACV,IAAK,OACL,MAAO,OACP,WAAY,OACZ,OAAQ,OACR,SAAU,SACV,OAAQ,UACR,MAAO,UACP,MAAO,OACP,OAAQ,OACR,QAAS,OACT,WAAY,SACZ,eAAgB,QAAA,EAEnB,SAAA,GAAA,CAAA,EAIAE,EAAA,CAAc,CAAA,CACjB,CAAA,CACF,CAEJ,EC5QaC,GAAgD,CAAC,CAC5D,KAAA7M,EAAO,SACP,UAAA8M,EAAY,GACZ,MAAAC,EAAQ,CAAA,CACV,IAAM,CAWJ,MAAMC,GAVU,IAAM,CACpB,GAAI,OAAOhN,GAAS,SAAU,OAAOA,EACrC,OAAQA,EAAA,CACN,IAAK,QAAS,MAAO,IACrB,IAAK,SAAU,MAAO,IACtB,IAAK,QAAS,MAAO,IACrB,QAAS,MAAO,GAAA,CAEpB,GAEiB,EAEjB,OACEsG,EAAAA,KAAC,MAAA,CACC,MAAO0G,EACP,OAAQA,EACR,QAAQ,cACR,MAAM,6BACN,UAAAF,EACA,MAAO,CACL,GAAGC,EACH,eAAgB,qBAChB,eAAgB,kBAChB,OAAQ,+CAAA,EAGV,SAAA,CAAAzG,OAAC,OAAA,CAEC,SAAA,CAAAA,EAAAA,KAAC,SAAA,CAAO,GAAG,QAAQ,EAAE,OAAO,EAAE,OAAO,MAAM,OAAO,OAAO,OACvD,SAAA,CAAAC,EAAAA,IAAC,iBAAA,CAAe,aAAa,IAAI,OAAO,cAAa,SACpD,UAAA,CACC,SAAA,CAAAA,EAAAA,IAAC,cAAA,CAAY,GAAG,aAAA,CAAa,EAC7BA,EAAAA,IAAC,cAAA,CAAY,GAAG,eAAA,CAAe,CAAA,CAAA,CACjC,CAAA,EACF,EAGAD,EAAAA,KAAC,iBAAA,CAAe,GAAG,aACjB,SAAA,CAAAC,MAAC,QAAK,OAAO,KAAK,UAAU,qBAAqB,YAAY,IAAG,QAC/D,OAAA,CAAK,OAAO,MAAM,UAAU,qBAAqB,YAAY,IAAG,QAChE,OAAA,CAAK,OAAO,OAAO,UAAU,qBAAqB,YAAY,GAAA,CAAG,CAAA,EACpE,EACAD,EAAAA,KAAC,iBAAA,CAAe,GAAG,cACjB,SAAA,CAAAC,MAAC,QAAK,OAAO,KAAK,UAAU,qBAAqB,YAAY,IAAG,QAC/D,OAAA,CAAK,OAAO,MAAM,UAAU,qBAAqB,YAAY,IAAG,QAChE,OAAA,CAAK,OAAO,OAAO,UAAU,qBAAqB,YAAY,GAAA,CAAG,CAAA,EACpE,EACAD,EAAAA,KAAC,iBAAA,CAAe,GAAG,WACjB,SAAA,CAAAC,MAAC,QAAK,OAAO,KAAK,UAAU,qBAAqB,YAAY,IAAG,QAC/D,OAAA,CAAK,OAAO,MAAM,UAAU,qBAAqB,YAAY,IAAG,QAChE,OAAA,CAAK,OAAO,OAAO,UAAU,qBAAqB,YAAY,GAAA,CAAG,CAAA,EACpE,EACAD,EAAAA,KAAC,iBAAA,CAAe,GAAG,UACjB,SAAA,CAAAC,MAAC,QAAK,OAAO,KAAK,UAAU,mBAAmB,YAAY,IAAG,QAC7D,OAAA,CAAK,OAAO,MAAM,UAAU,mBAAmB,YAAY,IAAG,QAC9D,OAAA,CAAK,OAAO,OAAO,UAAU,mBAAmB,YAAY,GAAA,CAAG,CAAA,EAClE,EACAD,EAAAA,KAAC,iBAAA,CAAe,GAAG,aACjB,SAAA,CAAAC,MAAC,QAAK,OAAO,KAAK,UAAU,oBAAoB,YAAY,IAAG,QAC9D,OAAA,CAAK,OAAO,MAAM,UAAU,oBAAoB,YAAY,IAAG,QAC/D,OAAA,CAAK,OAAO,OAAO,UAAU,oBAAoB,YAAY,GAAA,CAAG,CAAA,EACnE,EACAD,EAAAA,KAAC,iBAAA,CAAe,GAAG,aACjB,SAAA,CAAAC,MAAC,QAAK,OAAO,KAAK,UAAU,oBAAoB,YAAY,IAAG,QAC9D,OAAA,CAAK,OAAO,MAAM,UAAU,oBAAoB,YAAY,IAAG,QAC/D,OAAA,CAAK,OAAO,OAAO,UAAU,oBAAoB,YAAY,GAAA,CAAG,CAAA,EACnE,EACAD,EAAAA,KAAC,iBAAA,CAAe,GAAG,kBACjB,SAAA,CAAAC,MAAC,QAAK,OAAO,KAAK,UAAU,oBAAoB,YAAY,IAAG,QAC9D,OAAA,CAAK,OAAO,MAAM,UAAU,oBAAoB,YAAY,IAAG,QAC/D,OAAA,CAAK,OAAO,OAAO,UAAU,oBAAoB,YAAY,GAAA,CAAG,CAAA,EACnE,EACAD,EAAAA,KAAC,iBAAA,CAAe,GAAG,YACjB,SAAA,CAAAC,MAAC,QAAK,OAAO,KAAK,UAAU,qBAAqB,YAAY,IAAG,QAC/D,OAAA,CAAK,OAAO,MAAM,UAAU,qBAAqB,YAAY,IAAG,QAChE,OAAA,CAAK,OAAO,OAAO,UAAU,qBAAqB,YAAY,GAAA,CAAG,CAAA,EACpE,EACAD,EAAAA,KAAC,iBAAA,CAAe,GAAG,gBACjB,SAAA,CAAAC,MAAC,QAAK,OAAO,KAAK,UAAU,qBAAqB,YAAY,IAAG,QAC/D,OAAA,CAAK,OAAO,MAAM,UAAU,qBAAqB,YAAY,IAAG,QAChE,OAAA,CAAK,OAAO,OAAO,UAAU,qBAAqB,YAAY,GAAA,CAAG,CAAA,EACpE,EACAD,EAAAA,KAAC,iBAAA,CAAe,GAAG,WACjB,SAAA,CAAAC,MAAC,QAAK,OAAO,KAAK,UAAU,qBAAqB,YAAY,IAAG,QAC/D,OAAA,CAAK,OAAO,MAAM,UAAU,qBAAqB,YAAY,IAAG,QAChE,OAAA,CAAK,OAAO,OAAO,UAAU,qBAAqB,YAAY,GAAA,CAAG,CAAA,EACpE,EACAD,EAAAA,KAAC,iBAAA,CAAe,GAAG,gBACjB,SAAA,CAAAC,MAAC,QAAK,OAAO,KAAK,UAAU,qBAAqB,YAAY,IAAG,QAC/D,OAAA,CAAK,OAAO,MAAM,UAAU,qBAAqB,YAAY,IAAG,QAChE,OAAA,CAAK,OAAO,OAAO,UAAU,qBAAqB,YAAY,GAAA,CAAG,CAAA,EACpE,EACAD,EAAAA,KAAC,iBAAA,CAAe,GAAG,WACjB,SAAA,CAAAC,MAAC,QAAK,OAAO,KAAK,UAAU,qBAAqB,YAAY,IAAG,QAC/D,OAAA,CAAK,OAAO,MAAM,UAAU,qBAAqB,YAAY,IAAG,QAChE,OAAA,CAAK,OAAO,OAAO,UAAU,qBAAqB,YAAY,GAAA,CAAG,CAAA,CAAA,CACpE,CAAA,EACF,EAIAA,EAAAA,IAAC,SAAA,CAAO,GAAG,MAAM,GAAG,MAAM,EAAE,KAAK,KAAK,mBAAmB,OAAO,aAAA,CAAa,EAAE,IAC/EA,EAAAA,IAAC,SAAA,CAAO,GAAG,MAAM,GAAG,MAAM,EAAE,KAAK,KAAK,oBAAoB,OAAO,aAAA,CAAa,EAAE,IAChFA,EAAAA,IAAC,SAAA,CAAO,GAAG,QAAQ,GAAG,MAAM,EAAE,KAAK,KAAK,iBAAiB,OAAO,aAAA,CAAa,EAAE,IAC/EA,EAAAA,IAAC,SAAA,CAAO,GAAG,MAAM,GAAG,MAAM,EAAE,KAAK,KAAK,gBAAgB,OAAO,aAAA,CAAa,EAAE,IAC5EA,EAAAA,IAAC,SAAA,CAAO,GAAG,QAAQ,GAAG,MAAM,EAAE,KAAK,KAAK,mBAAmB,OAAO,aAAA,CAAa,EAAE,IACjFA,EAAAA,IAAC,SAAA,CAAO,GAAG,MAAM,GAAG,MAAM,EAAE,KAAK,KAAK,mBAAmB,OAAO,aAAA,CAAa,EAAE,IAC/EA,EAAAA,IAAC,SAAA,CAAO,GAAG,MAAM,GAAG,MAAM,EAAE,KAAK,KAAK,wBAAwB,OAAO,aAAA,CAAa,EAAE,IACpFA,EAAAA,IAAC,SAAA,CAAO,GAAG,MAAM,GAAG,MAAM,EAAE,KAAK,KAAK,kBAAkB,OAAO,aAAA,CAAa,EAAE,IAC9EA,EAAAA,IAAC,SAAA,CAAO,GAAG,QAAQ,GAAG,MAAM,EAAE,KAAK,KAAK,sBAAsB,OAAO,aAAA,CAAa,EAAE,IACpFA,EAAAA,IAAC,SAAA,CAAO,GAAG,MAAM,GAAG,MAAM,EAAE,KAAK,KAAK,iBAAiB,OAAO,aAAA,CAAa,EAAE,IAC7EA,EAAAA,IAAC,SAAA,CAAO,GAAG,QAAQ,GAAG,MAAM,EAAE,KAAK,KAAK,sBAAsB,OAAO,aAAA,CAAa,EAAE,IACpFA,EAAAA,IAAC,SAAA,CAAO,GAAG,MAAM,GAAG,MAAM,EAAE,KAAK,KAAK,iBAAiB,OAAO,aAAA,CAAa,EAAE,GAAA,CAAA,CAAA,CAGnF,ECrHA,SAAS0G,IAAM,CAEb,KAAM,CAACzO,EAAqB0O,CAAsB,EAAInO,WAA8B,CAClF,WAAY,CACV,cAAe,GACf,eAAgB,eAChB,SAAU,GACV,mBAAoB,EAAA,EAEtB,WAAY,CACV,cAAe,GACf,eAAgB,eAChB,SAAU,EAAA,EAEZ,cAAe,CACb,QAAS,GACT,KAAM,eACN,UAAW,GACX,QAAS,CACP,YAAa,CACX,eAAgB,CAAE,EAAG,IAAM,EAAG,GAAA,EAC9B,eAAgB,CAAE,EAAG,IAAM,EAAG,GAAA,CAAK,EAErC,OAAQ,CACN,aAAc,EACd,WAAY,EAAA,EAEd,MAAO,CACL,YAAa,MAAA,EAEf,OAAQ,CACN,YAAa,EACb,cAAe,WAAA,EAEjB,WAAY,CACV,WAAY,EACZ,aAAc,EAAA,CAChB,CACF,CACF,CACD,EAGK,CAACoO,EAAYC,CAAa,EAAIrO,EAAAA,SAAqC,KAAK,EAGxE,CAACsO,EAAWC,CAAY,EAAIvO,EAAAA,SAAS,EAAK,EAC1C,CAACwO,EAAcC,CAAe,EAAIzO,EAAAA,SAAyD,OAAO,EAClG,CAACgL,EAAW0D,CAAY,EAAI1O,EAAAA,SAA+B,IAAI,EAC/D,CAAC0K,EAAiBiE,CAAkB,EAAI3O,WAA+B,CAC3E,aAAc,GACd,SAAU,EACV,MAAO,IAAA,CACR,EAGK,CAAC4O,EAAaC,CAAc,EAAI7O,EAAAA,SAAiB,OAAO,UAAU,EAGlE8O,EAA8B/N,EAAAA,YAAY,CAACgO,EAAuBpI,EAAkBmG,IAAmB,CAC3G6B,EAAmB,CACjB,aAAAI,EACA,SAAApI,EACA,MAAOmG,GAAS,IAAA,CACjB,CACH,EAAG,CAAA,CAAE,EAGL/H,EAAAA,UAAU,IAAM,CACd,MAAMC,EAAe,IAAM,CACzB6J,EAAe,OAAO,UAAU,CAClC,EAEA,cAAO,iBAAiB,SAAU7J,CAAY,EACvC,IAAM,OAAO,oBAAoB,SAAUA,CAAY,CAChE,EAAG,CAAA,CAAE,EAGLD,EAAAA,UAAU,IAAM,CACd,MAAMiK,EAA2B,aAAa,QAAQ,iCAAiC,EACvF,GAAIA,EACF,GAAI,CACF,MAAMC,EAAS,KAAK,MAAMD,CAAwB,EAClDb,EAAuBc,CAAM,CAC/B,OAASnC,EAAO,CACd,QAAQ,MAAM,oBAAqBA,CAAK,CAC1C,CAEJ,EAAG,CAAA,CAAE,EAGL/H,EAAAA,UAAU,IAAM,CACd,aAAa,QAAQ,kCAAmC,KAAK,UAAUtF,CAAmB,CAAC,CAC7F,EAAG,CAACA,CAAmB,CAAC,EAGxB,MAAMyP,EAAaC,GAA4D,CAC7EV,EAAgBU,CAAO,EACvBZ,EAAa,EAAI,CACnB,EAEMa,EAAa,IAAM,CACvBb,EAAa,EAAK,CACpB,EAEA,OACEhH,EAAAA,KAAC,MAAA,CAAI,UAAU,MACb,SAAA,CAAAC,EAAAA,IAAC,UAAO,UAAU,aAChB,SAAAD,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,EAAAA,KAAC,KAAA,CAAG,UAAU,YACZ,SAAA,OAACuG,GAAA,CAAe,KAAK,QAAQ,UAAU,WAAW,EAAE,WAAA,EAEtD,QACC,IAAA,CAAE,UAAU,eAAe,SAAA,2BAE5B,CAAA,CAAA,CACF,CAAA,CACF,EAEAvG,EAAAA,KAAC,OAAA,CAAK,UAAU,WAEd,SAAA,CAAAC,EAAAA,IAAC,OAAI,UAAU,iBACb,SAAAD,EAAAA,KAAC,MAAA,CAAI,UAAU,cACb,SAAA,CAAAC,EAAAA,IAAC,SAAA,CACC,QAAS,IAAM6G,EAAc,KAAK,EAClC,UAAW,cAAcD,IAAe,MAAQ,SAAW,EAAE,GAC9D,SAAA,OAAA,CAAA,EAGD7G,EAAAA,KAAC,SAAA,CACC,QAAS,IAAM8G,EAAc,OAAO,EACpC,UAAW,cAAcD,IAAe,QAAU,SAAW,EAAE,GAE/D,SAAA,QAAC,MAAA,CAAI,MAAM,KAAK,OAAO,KAAK,QAAQ,YAAY,KAAK,eAAe,MAAO,CAAE,YAAa,SAAU,cAAe,QAAA,EACjH,SAAA,CAAA5G,EAAAA,IAAC,OAAA,CAAK,EAAE,4JAA2J,QAClK,SAAA,CAAO,GAAG,KAAK,GAAG,KAAK,EAAE,GAAA,CAAG,CAAA,EAC/B,EAAM,IAAA,CAAA,CAAA,EAGRD,EAAAA,KAAC,SAAA,CACC,QAAS,IAAM8G,EAAc,QAAQ,EACrC,UAAW,cAAcD,IAAe,SAAW,SAAW,EAAE,GAEhE,SAAA,CAAA7G,OAAC,OAAI,MAAM,KAAK,OAAO,KAAK,QAAQ,YAAY,KAAK,OAAO,OAAO,eAAe,YAAY,IAAI,MAAO,CAAE,YAAa,SAAU,cAAe,QAAA,EAC/I,SAAA,CAAAC,EAAAA,IAAC,OAAA,CAAK,EAAE,uFAAsF,QAC7F,SAAA,CAAO,GAAG,KAAK,GAAG,KAAK,EAAE,GAAA,CAAG,CAAA,EAC/B,EAAM,KAAA,CAAA,CAAA,CAER,CAAA,CACF,CAAA,CACF,EAEAA,EAAAA,IAAC,MAAA,CAAI,UAAU,YACb,SAAAD,EAAAA,KAAC,OAAI,UAAW6G,IAAe,MAAQ,cAAgB,GAEpD,SAAA,CAAAA,IAAe,OACd7G,EAAAA,KAAAG,EAAAA,SAAA,CACE,SAAA,CAAAH,EAAAA,KAAC,UAAA,CAAQ,UAAU,wBACjB,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,wBACb,SAAAA,EAAAA,IAACC,GAAA,CACC,oBAAAhI,CAAA,CAAA,EAEJ,QACC,MAAA,CAAI,UAAU,sBACb,SAAA+H,EAAAA,IAAC,IAAA,CAAE,8EAGH,EACF,CAAA,EACF,EAEAA,EAAAA,IAAC,UAAA,CAAQ,UAAU,qBACjB,SAAAA,EAAAA,IAACK,GAAA,CACC,oBAAApI,EACA,4BAA6B0O,CAAA,CAAA,EAEjC,CAAA,EACF,EAIDC,IAAe,SACd7G,EAAAA,KAAC,MAAA,CAAI,MAAO,CACV,QAAS,OACT,oBAAqBqH,EAAc,IAAM,YAAc,MACvD,IAAK,OACL,WAAY,OAAA,EAEZ,SAAA,CAAArH,OAAC,OAAI,MAAO,CACV,SAAUqH,EAAc,KAAO,SAAW,SAC1C,IAAK,MAAA,EAEL,SAAA,CAAApH,EAAAA,IAAC,KAAA,CAAG,UAAU,gBAAgB,MAAO,CAAE,MAAO,UAAW,aAAc,MAAA,EAAU,SAAA,WAAQ,EACzFA,EAAAA,IAACK,GAAA,CACC,oBAAApI,EACA,4BAA6B0O,CAAA,CAAA,QAE9B,MAAA,CAAI,MAAO,CAAE,UAAW,MAAA,EACvB,SAAA3G,EAAAA,IAACgD,GAAA,CACC,YAAakE,EACb,gBAAAhE,EACA,SAAUA,EAAgB,YAAA,CAAA,EAE9B,CAAA,EACF,QACC,MAAA,CAAI,MAAO,CAAE,MAAO,MAAA,EACnB,SAAAlD,EAAAA,IAAC6D,GAAA,CACC,UAAAL,EACA,oBAAAvL,EACA,wBAAyBqP,CAAA,CAAA,EAE7B,CAAA,EACF,EAIDV,IAAe,UACd7G,EAAAA,KAAC,MAAA,CAAI,MAAO,CACV,QAAS,OACT,oBAAqBqH,EAAc,IAAM,YAAc,MACvD,IAAK,OACL,WAAY,OAAA,EAEZ,SAAA,CAAArH,OAAC,OAAI,MAAO,CACV,SAAUqH,EAAc,KAAO,SAAW,SAC1C,IAAK,MAAA,EAEL,SAAA,CAAApH,EAAAA,IAAC,KAAA,CAAG,UAAU,gBAAgB,MAAO,CAAE,MAAO,UAAW,aAAc,MAAA,EAAU,SAAA,WAAQ,EACzFA,EAAAA,IAACK,GAAA,CACC,oBAAApI,EACA,4BAA6B0O,CAAA,CAAA,CAC/B,EACF,QACC,MAAA,CAAI,MAAO,CAAE,MAAO,MAAA,EACnB,SAAA3G,EAAAA,IAAC0E,GAAA,CACC,oBAAAzM,EACA,wBAAyBqP,CAAA,CAAA,EAE7B,CAAA,EACF,CAAA,CAAA,CAEJ,CAAA,CAEF,CAAA,EACF,QAEC,SAAA,CAAO,UAAU,aAChB,SAAAvH,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,EAAAA,KAAC,IAAA,CAAE,UAAU,cAAc,SAAA,CAAA,sCACW,OAAA,EACtC,EACAA,EAAAA,KAAC,IAAA,CAAE,UAAU,eACX,SAAA,CAAAC,EAAAA,IAAC,SAAA,CAAO,QAAS,IAAM0H,EAAU,OAAO,EAAG,UAAU,cAAc,MAAO,CAAE,WAAY,OAAQ,OAAQ,OAAQ,MAAO,UAAW,eAAgB,YAAa,OAAQ,SAAA,EAAa,SAAA,WAAA,CAAS,QAC5L,OAAA,CAAK,UAAU,mBAAmB,SAAA,IAAC,EACpC1H,EAAAA,IAAC,UAAO,QAAS,IAAM0H,EAAU,SAAS,EAAG,UAAU,cAAc,MAAO,CAAE,WAAY,OAAQ,OAAQ,OAAQ,MAAO,UAAW,eAAgB,YAAa,OAAQ,SAAA,EAAa,SAAA,OAAA,CAAK,QAC1L,OAAA,CAAK,UAAU,mBAAmB,SAAA,IAAC,EACpC1H,EAAAA,IAAC,UAAO,QAAS,IAAM0H,EAAU,SAAS,EAAG,UAAU,cAAc,MAAO,CAAE,WAAY,OAAQ,OAAQ,OAAQ,MAAO,UAAW,eAAgB,YAAa,OAAQ,SAAA,EAAa,SAAA,YAAA,CAAU,QAC/L,OAAA,CAAK,UAAU,mBAAmB,SAAA,IAAC,EACpC1H,EAAAA,IAAC,UAAO,QAAS,IAAM0H,EAAU,YAAY,EAAG,UAAU,cAAc,MAAO,CAAE,WAAY,OAAQ,OAAQ,OAAQ,MAAO,UAAW,eAAgB,YAAa,OAAQ,SAAA,EAAa,SAAA,MAAA,CAAI,CAAA,EAC/L,CAAA,CAAA,CACF,CAAA,CACF,EAEA1H,EAAAA,IAACiG,GAAA,CACC,OAAQa,EACR,QAASc,EACT,cAAeZ,CAAA,CAAA,CACjB,EACF,CAEJ,CCvRAa,GAAS,WAAW,SAAS,eAAe,MAAM,CAAE,EAAE,aACnDC,GAAM,WAAN,CACC,eAACpB,KAAI,CAAA,CACP,CACF,EAGI,kBAAmB,WACrB,OAAO,iBAAiB,OAAQ,IAAM,CACpC,UAAU,cAAc,SAAS,sBAAkC,EAChE,KAAK,MAAOqB,GAAiB,CAExBA,EAAa,QACfA,EAAa,QAAQ,YAAY,CAAE,KAAM,eAAgB,EAChDA,EAAa,YACtBA,EAAa,WAAW,iBAAiB,cAAe,IAAM,CACxDA,EAAa,SACfA,EAAa,QAAQ,YAAY,CAAE,KAAM,eAAgB,CAE7D,CAAC,CAEL,CAAC,EACA,MAAM,IAAM,CAEb,CAAC,CACL,CAAC","x_google_ignoreList":[0,1,2]}